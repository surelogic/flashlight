<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<ad-hoc version='1.0' current='3'>
  <query name='Show Tables'>show tables</query>
  <query name='Show available runs' meta-query-name='What instance fields are shared?'>-- This query returns all the prepared runs in the database
select Run, Name, Started, Username from RUN</query>
  <query name='What static fields are shared? ' meta-query-name='What threads access this field? (from a shared field)'>select
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  F.FieldName &quot;Field&quot;,
  THO.ThreadName &quot;Thread|&quot;,
  FS.ReadCount &quot;Read Count&quot;,
  FS.WriteCount &quot;Write Count&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.Run = ?RUN?
  and F.DeclaringType = O.Id
  and O.Run = F.Run
  and FS.RUN = F.RUN 
  and FS.FIELD = F.ID 
  and THO.RUN = FS.RUN
  and THO.ID = FS.Thread
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query name='What instance fields are shared?'>select
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  F.FieldName &quot;Field&quot;,
  FI.Receiver &quot;Receiver&quot;,
  THO.ThreadName &quot;Thread|&quot;,
  FI.ReadCount &quot;Read Count&quot;,
  FI.WriteCount &quot;Write Count&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO
where
  F.Run = ?RUN?
  and F.DeclaringType = O.Id
  and O.Run = F.Run
  and FI.RUN = F.RUN 
  and FI.FIELD = F.ID 
  and THO.RUN = FI.RUN
  and THO.ID = FI.Thread
order by O.PackageName,O.ClassName,F.FieldName,FI.Receiver,THO.ThreadName</query>
  <query name='Show all threads' meta-query-name='Threads'>
select t.Id, t.ThreadName, cl.PackageName, cl.ClassName
from OBJECT as t, OBJECT as cl   
where t.ThreadName is not null
and t.Run=?RUN?
and cl.Run=?RUN?
and t.Type=cl.Id</query>
  <query name='What threads access this field? '>select distinct O.ThreadName &quot;Thread&quot;

from OBJECT O,
     ACCESS A,
     FIELD F

where O.Run = ?RUN?
and A.Run = ?RUN?
and F.Run = ?RUN?
and F.FieldName = &apos;?FIELDNAME?&apos;
and F.id = A.Field

order by 1</query>
  <query name='What threads use each lock? '>select distinct 
&apos;Lock&apos; || CAST(l.lock AS CHAR(10)) &quot;LOCK ID&quot;, 
O.THREADNAME &quot;THREAD NAME|&quot;
from LOCK L, OBJECT O
where L.INTHREAD = O.ID
and L.RUN = O.RUN
and O.Run = ?RUN?
order by 1, 2</query>
  <query name='Show lock event'>select l.TS, t.ThreadName, l.Lock, lkType.ClassName as LockClass, l.LockIsThis as IsThis, l.LockIsClass as IsClass,
l.State, cl.PackageName, cl.ClassName, l.AtLine
from LOCK as l, OBJECT as cl, OBJECT as lk, OBJECT as t, OBJECT as lkType
where l.Run = ?RUN?
and l.Id = ?LOCKEVENT?
and l.InClass = cl.Id
and l.Lock = lk.Id
and l.InThread = t.Id
and lk.Type = lkType.Id</query>
  <query name='What locks are contended most? '>
select le.InClass, le.AtLine,
ld.InThread &quot;InThread|&quot;, 
sum(ld.Duration) as BlockTime 
from LOCKDURATION as ld, LOCK as le  
where ld.Run=?RUN?
and ld.Lock=?LOCK?
and ld.State = &apos;BLOCKING&apos;
and le.Run=?RUN?
and le.Id=ld.StartEvent
group by ld.InThread, ld.State, le.InClass, le.AtLine
order by BlockTime desc
  </query>
  <query name='What locks are contended most? '>
select le.InClass, le.AtLine,
ld.InThread &quot;InThread|&quot;, 
sum(ld.Duration) as BlockTime 
from LOCKDURATION as ld, LOCK as le  
where ld.Run=?RUN?
and ld.Lock=?LOCK?
and ld.State = &apos;BLOCKING&apos;
and le.Run=?RUN?
and le.Id=ld.StartEvent
group by ld.InThread, ld.State, le.InClass, le.AtLine
order by BlockTime desc
  </query>
  <query name='When/where is this thread contending for that lock?'>
select ld.StartEvent as LockEvent,
ld.Start,ld.Duration 
from LOCKDURATION AS ld, LOCK as le
where ld.State = &apos;BLOCKING&apos;
and ld.Run=?RUN?
and ld.Lock=?LOCK?
and ld.InThread=?INTHREAD?
and le.Run=?RUN?
and le.Id=ld.StartEvent
and le.InClass=?INCLASS?
and le.AtLine=?ATLINE?
order by ld.Duration desc
  </query>
  <query name='Who is interacting with that lock at that moment?'>
select ld.InThread, ld.State, ld.Start, ld.Stop, ld.Duration, 
ld.StartEvent as LockEvent
from LOCK as le, LOCKDURATION AS ld
where le.Run=?RUN?
and le.Id=?LOCKEVENT?
and ld.Run=?RUN?
and ld.Lock=?LOCK?
and le.ts between ld.Start and ld.Stop
order by ld.Start 
  </query>
  <query name='Show when threads hold locks and acquire more' meta-query-name='Held + Acquiring'>select lh.LockEvent, count(LockHeld) as NumLocksHeld,
le.InClass, le.AtLine
from LOCKSHELD as lh, LOCK as le
where lh.Run=?RUN?
and lh.LockEvent=le.Id
and le.Run=?RUN?
group by lh.LockEvent, le.InClass, le.AtLine
order by NumLocksHeld desc, lh.LockEvent</query>
  <query name='Show locks potentially involved in deadlock'>select Component, LockHeld &quot;LockHeld|&quot;,
LockAcquired,
Count, FirstTime, LastTime
from lockcycle
where run = ?RUN?
order by count desc</query>
  <query name='Show code potentially involved in deadlock'>select distinct cl.PackageName as package, cl.ClassName as class, l.AtLine as line
from LOCKCYCLE as cy, LOCKSHELD as lh, LOCK as l, OBJECT as cl
where cy.Run = ?RUN?
and lh.Run = ?RUN?
and cy.LockHeld = lh.LockHeld
and cy.LockAcquired = lh.LockAcquired
and l.Run = ?RUN?
and lh.LockEvent = l.Id
and cl.Run = ?RUN?
and l.InClass = cl.Id

</query>
  <query name='* Show stack traces potentially involved in deadlock'>select cl.PackageName &quot;Package__PACKAGE&quot;, 
cl.ClassName &quot;Class__CLASS&quot;, 
&apos;Line &apos; ||  CAST(l.AtLine AS CHAR(10)) &quot;Line__LINE&quot;,
&apos;Event &apos; ||  CAST(l.Id AS CHAR(10)) &quot;Event__LOCK&quot;,
t.InFile &quot;File__FILE|&quot;, 
tc.PackageName as package, tc.ClassName as class, t.AtLine as line,
t.Location, t.Start, t.Stop 
from lock as l, trace as t, OBJECT as cl, OBJECT as tc
where l.run = ?RUN?
and l.id in 
(
select lh.LockEvent
from LOCKCYCLE as cy, LOCKSHELD as lh
where cy.Run = ?RUN?
and lh.Run = ?RUN?
and cy.LockHeld = lh.LockHeld
and cy.LockAcquired = lh.LockAcquired
)
and t.run = ?RUN?
and l.ts between t.start and t.stop
and cl.run = ?RUN?
and l.InClass = cl.Id
and tc.run = ?RUN?
and t.InClass = tc.Id
order by l.id, t.start desc

</query>
  <query name='Show stack trace (for a lock event)'>select t.InFile, t.InClass, t.AtLine, t.Location, t.Start, t.Stop 
from trace as t, lock as l
where t.run = ?RUN?
and l.run = ?RUN? and l.id = ?LOCKEVENT?
and l.ts between t.start and t.stop
order by t.start desc</query>
  <query name='2ML 1 Create locks held table'>create table LOCKSHELD (
  Run INT NOT NULL,
  TS TIMESTAMP NOT NULL,
  Field BIGINT NOT NULL,
  InThread BIGINT NOT NULL,
  CountOfLocksHeld INT NOT NULL
)</query>
  <query name='2ML 2 Insert rows'>insert into LOCKSHELD
select a.Run, a.TS, a.FIELD, a.InThread, count(*)
from ACCESS A, LOCKDURATION L
where a.RUN = L.RUN
and a.ts between L.START and L.STOP
and a.INTHREAD = L.INTHREAD
group by a.FIELD, a.TS, a.Run, a.InThread</query>
  <query name='2ML 3 Delete one lock rows'>delete from LOCKSHELD where CountOfLocksHeld &lt; 2</query>
  <query name='2ML 4 Show holding two or more locks'>select a.InFile &quot;FILE____CFILE&quot;, &apos;at line# &apos; || CAST(a.AtLine AS CHAR(10)) &quot;LINE NUMBER&quot;, a.ts &quot;Time&quot;, &apos;in thread: &apos; || t.ThreadName &quot;IN THREAD|&quot;, l.Lock &quot;Lock Object Id Held&quot;
from LOCKSHELD lh, ACCESS a, OBJECT T, LOCKDURATION L
where lh.Run = a.Run
and lh.Run = t.Run
and lh.Run = L.Run
and a.InThread = t.id
and lh.ts = a.ts
and lh.field = a.field
and lh.ts = a.ts
and lh.ts between l.start and l.stop
and lh.inThread = l.InThread
</query>
  <query name='2ML (debug) show all LOCKSHELD rows' meta-query-name='Shared Fields'>select * from LOCKSHELD</query>
  <query name='Instance Fields with a lock set' meta-query-name='Locks held for each access of an instance field'>SELECT 
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  FI.FieldName &quot;Field&quot;,
  I.FIELD &quot;FieldId|&quot;,I.RECEIVER, F.LOCK 
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id AND O.Run = FI.Run
 INNER JOIN INTERESTINGFIELD I ON FI.STATIC = &apos;N&apos; AND I.FIELD=FI.ID AND I.RUN = FI.RUN
 INNER JOIN FIELDINSTANCELOCKSET F ON 
   F.RUN = I.RUN AND F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER 
 WHERE FI.RUN = ?RUN?
 ORDER BY O.PackageName,O.ClassName,FI.FieldName,I.Receiver</query>
  <query name='Instance Fields with no lock set'>SELECT 
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  FI.FieldName &quot;Field&quot;,
  I.FIELD &quot;FieldId|&quot;,I.RECEIVER
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id AND O.Run = FI.Run
 INNER JOIN INTERESTINGFIELD I ON FI.STATIC = &apos;N&apos; AND I.FIELD=FI.ID AND I.RUN = FI.RUN
 LEFT OUTER JOIN FIELDINSTANCELOCKSET F ON 
   F.RUN = I.RUN AND F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER 
 WHERE FI.RUN = ?RUN? AND F.LOCK IS NULL
 ORDER BY O.PackageName, O.ClassName, FI.FieldName</query>
  <query name='Locks held for each access of an instance field' meta-query-name='Trace from an access'>SELECT O.THREADNAME &quot;THREAD&quot;,A.TS &quot;TIME&quot;,D.Lock &quot;LOCK|&quot;,LO.PackageName &quot;Package__PACKAGE&quot;, LO.ClassName &quot;Class__CLASS&quot;, L.AtLine &quot;Line&quot;,D.ID &quot;LDID&quot;,A.ID &quot;AID&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Run = A.Run AND 
   O.Id = A.InThread 
 LEFT OUTER JOIN LOCKDURATION D ON
   D.InThread = A.InThread AND 
   D.Run = A.Run AND 
   (A.TS BETWEEN D.Start AND D.Stop)
 LEFT OUTER JOIN LOCK L ON
   L.Run = D.Run AND 
   L.Id = D.StartEvent
 LEFT OUTER JOIN OBJECT LO ON
   LO.Run = L.Run AND 
   LO.Id = L.InClass
WHERE 
   A.FIELD = ?FIELDID? AND 
   A.RECEIVER = ?RECEIVER? AND 
   A.RUN=?RUN?
ORDER BY O.THREADNAME, A.TS, D.Start
</query>
  <query name='Show lock held counts for the instance field' meta-query-name='Interesting Fields'>SELECT LOCKS.*, (CAST (LOCKS.LOCKCOUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))
FROM
(SELECT D.Lock &quot;LOCK&quot;,COUNT(D.Lock) &quot;LOCKCOUNT&quot;
 FROM ACCESS A
      INNER JOIN LOCKDURATION D ON D.InThread = A.InThread AND D.Start &lt; A.TS AND D.Stop &gt; A.TS AND State = &apos;HOLDING&apos; 
    WHERE A.RUN=?RUN? AND A.FIELD = ?FIELDID? AND A.RECEIVER = ?RECEIVER?
 GROUP BY D.LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; FROM ACCESS A WHERE A.RUN=?RUN? AND A.FIELD = ?FIELDID? AND A.RECEIVER = ?RECEIVER?) AS ACCESSES</query>
  <query name='Thread counts for the instance field'>SELECT O.THREADNAME, F.READCOUNT, F.WRITECOUNT
 FROM FIELDINSTANCETHREAD F, OBJECT O
 WHERE F.FIELD = ?FIELDID? AND F.RECEIVER = ?RECEIVER? AND F.RUN = ?RUN? AND O.ID = F.THREAD</query>
  <query name='Static fields with a lock set' meta-query-name='Locks held for each access of a static field'>SELECT 
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  FI.FieldName &quot;Field&quot;,
  I.FIELD &quot;FieldId|&quot;, F.LOCK 
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id AND O.Run = FI.Run
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID AND I.RUN = FI.RUN
 INNER JOIN FIELDLOCKSET F ON 
   F.RUN = I.RUN AND F.FIELD = I.FIELD
 WHERE FI.RUN = ?RUN?
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query name='Static Fields with no lock set'>SELECT 
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  FI.FieldName &quot;Field&quot;,
  I.FIELD &quot;FieldId|&quot;
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id AND O.Run = FI.Run
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID AND I.RUN = FI.RUN
 LEFT OUTER JOIN FIELDLOCKSET F ON 
   F.RUN = I.RUN AND F.FIELD = I.FIELD
 WHERE FI.RUN = ?RUN? AND F.LOCK IS NULL
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query name='Locks held for each access of a static field' meta-query-name='Trace from an access'>SELECT O.THREADNAME &quot;THREAD&quot;,A.TS &quot;TIME&quot;,D.Lock &quot;LOCK|&quot;,LO.PackageName &quot;Package__PACKAGE&quot;, LO.ClassName &quot;Class__CLASS&quot;, L.AtLine &quot;Line&quot;,D.ID &quot;LDID&quot;,A.ID &quot;AID&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Run = A.Run AND 
   O.Id = A.InThread 
 LEFT OUTER JOIN LOCKDURATION D ON
   D.InThread = A.InThread AND 
   D.Run = A.Run AND 
   (A.TS BETWEEN D.Start AND D.Stop)
 LEFT OUTER JOIN LOCK L ON
   L.Run = D.Run AND 
   L.Id = D.StartEvent
 LEFT OUTER JOIN OBJECT LO ON
   LO.Run = L.Run AND 
   LO.Id = L.InClass
WHERE 
   A.FIELD = ?FIELDID? AND 
   A.RUN=?RUN? AND
   A.RECEIVER IS NULL
ORDER BY O.THREADNAME, A.TS, D.Start</query>
  <query name='Show lock held counts for a static field'>SELECT LOCKS.*, (CAST (LOCKS.LOCKCOUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))
FROM
(SELECT D.Lock &quot;LOCK&quot;,COUNT(D.Lock) &quot;LOCKCOUNT&quot;
 FROM ACCESS A
      INNER JOIN LOCKDURATION D ON D.InThread = A.InThread AND D.Start &lt; A.TS AND D.Stop &gt; A.TS AND State = &apos;HOLDING&apos; 
    WHERE A.RUN=?RUN? AND A.FIELD = ?FIELDID? AND A.RECEIVER IS NULL
 GROUP BY D.LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; FROM ACCESS A WHERE A.RUN=?RUN? AND A.FIELD = ?FIELDID? AND A.RECEIVER IS NULL) AS ACCESSES</query>
  <query name='Thread counts for the static field'>SELECT O.THREADNAME, F.READCOUNT, F.WRITECOUNT
 FROM FIELDSTATICTHREAD F, OBJECT O
 WHERE F.FIELD = ?FIELDID? AND F.RUN = ?RUN? AND O.ID = F.THREAD</query>
  <query name='GRAND Lock Sets for the set of interesting instance fields'>SELECT DISTINCT
  O.PackageName &quot;Package__PACKAGE&quot;,
  O.ClassName &quot;Class__CLASS&quot;,
  FI.FieldName &quot;Field&quot;,
  I.FIELD &quot;FieldId|&quot;,
  F.LOCK 
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id AND FI.RUN = ?RUN? 
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NOT NULL AND I.FIELD=FI.ID
 LEFT OUTER JOIN FIELDLOCKSET F ON 
   F.RUN = I.RUN AND F.FIELD = I.FIELD
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query name='Trace from a lock duration'>SELECT 
 &apos;In thread &apos; || THO.ThreadName || &apos;&quot; in &apos; || LO.PackageName || &apos;.&apos; || LO.ClassName || &apos; on line &apos; || TRIM(CAST(L.AtLine AS CHAR(10))) &quot;Lock&quot;,
 &apos;at &apos; || O.ClassName || &apos;.&apos; || T.Location || &apos;(&apos; || T.InFile || &apos;:&apos; || TRIM(CAST(T.AtLine AS CHAR(10))) || &apos;)&apos; &quot;Trace|&quot;,
 O.PACKAGENAME &quot;Package&quot;, O.ClassName &quot;Class&quot;, T.LOCATION &quot;Location&quot;, T.AtLine &quot;Line&quot;
 FROM LOCKDURATION LD
  INNER JOIN LOCK L ON
   L.RUN = LD.RUN AND
   L.ID = LD.STARTEVENT
  INNER JOIN OBJECT LO ON
   LO.RUN = L.RUN AND
   LO.ID = L.INCLASS
  INNER JOIN OBJECT THO ON
   THO.RUN = LD.RUN AND
   THO.ID = LD.INTHREAD
  LEFT OUTER JOIN TRACE T ON
   (LD.START BETWEEN T.START AND T.STOP) AND
   T.INTHREAD = LD.INTHREAD AND
   T.RUN = LD.RUN
  LEFT OUTER JOIN OBJECT O ON
   O.RUN = T.RUN AND 
   O.ID = T.InClass
 WHERE 
   LD.ID = ?LDID? 
 ORDER BY T.START DESC</query>
  <query name='Trace from an access'>SELECT 
 &apos;In thread &apos; || THO.ThreadName || &apos; at &quot;&apos; || F.FIELDNAME || &apos;&quot; in &apos; || AO.PackageName || &apos;.&apos; || AO.ClassName || &apos; on line &apos; || TRIM(CAST(A.AtLine AS CHAR(10))) &quot;Access&quot;,
 &apos;at &apos; || O.ClassName || &apos;.&apos; || T.Location || &apos;(&apos; || T.InFile || &apos;:&apos; || TRIM(CAST(T.AtLine AS CHAR(10))) || &apos;)&apos; &quot;Trace|&quot;,
 O.PACKAGENAME &quot;Package&quot;, O.ClassName &quot;Class&quot;, T.LOCATION &quot;Location&quot;, T.AtLine &quot;Line&quot;
 FROM ACCESS A
  INNER JOIN FIELD F ON
   F.RUN = A.RUN AND
   F.ID = A.FIELD
  INNER JOIN OBJECT AO ON
   AO.RUN = A.RUN AND
   AO.ID = A.InClass
  LEFT OUTER JOIN TRACE T ON
   (A.TS BETWEEN T.START AND T.STOP) AND
   T.INTHREAD = A.INTHREAD AND
   T.RUN = A.RUN
  LEFT OUTER JOIN OBJECT O ON
   O.RUN = T.RUN AND 
   O.ID = T.InClass
  LEFT OUTER JOIN OBJECT THO ON
   THO.RUN = A.RUN AND
   THO.ID = A.InThread 
 WHERE 
   A.ID = ?AID?
 ORDER BY T.START DESC
</query>
  <query name='query (3)'></query>
  <query name='query (4)'>DESCRIBE FLASHLIGHT.FIELD</query>
  <query name='query (5)'></query>
  <query name='query (6)'></query>
  <query name='query (7)'></query>
  <query name='query (8)'></query>
  <query name='query (9)'></query>
  <query name='query (10)'></query>
</ad-hoc>
