<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<ad-hoc version='3.0'>
  <query id='094fc6db-5a5b-4495-aacd-54f5a5aa1691' description='What fields (static, non-final) are shared?' revision='3' display='true' display-at-root='true'>-- NO-ROWS-MSG=No static, non-final fields are shared between two or more threads.
select
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName &quot;Field__]&quot;,
  THO.ThreadName &quot;Thread__|&quot;,
  FS.ReadCount &quot;Read Count__(sum on 2,3)(r)&quot;,
  FS.WriteCount &quot;Write Count__(sum on 2,3)(r)&quot;,
  THO.ThreadName &quot;Threads Involved__(count distinct)(r)&quot;,
  F.ID &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and F.Final = &apos;N&apos;
  and FS.FIELD = F.ID 
  and THO.ID = FS.Thread
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query id='10477928-cf86-4416-9118-34eea8cd7e38' description='What is the stack trace for this lock acquisition?' revision='1' display='true'>SELECT s.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, s.CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, s.INFILE &quot;File&quot;, s.LOCATION &quot;Location&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?LATRACE?)) s
</query>
  <query id='12592a6f-1b1e-4e22-b17a-56b2e4ff0495' description='Where is this lock acquired in the code?' revision='7' display='true'>SELECT DISTINCT
    CO.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;,
    CO.CLASSNAME   &quot;Class__(&apos;class.gif&apos;)&quot;,
    S.ATLINE       &quot;Line__(r)|&quot;,
    CASE WHEN L.TYPE = &apos;U&apos; AND L.LOCK != L.OBJECT AND L.OBJECT = RW.READLOCK THEN &apos;java.util.concurrent ReadWriteLock.readLock()&apos;
         WHEN L.TYPE = &apos;U&apos; AND L.LOCK != L.OBJECT AND L.OBJECT = RW.WRITELOCK THEN &apos;java.util.concurrent ReadWriteLock.writeLock()&apos;
         WHEN L.TYPE = &apos;I&apos; THEN &apos;Intrinsic&apos;
         ELSE &apos;java.util.concurrent Lock&apos;
    END            &quot;Type&quot;
FROM LOCK L 
     INNER JOIN TRACE TR ON TR.ID = L.TRACE
     INNER JOIN SITE S ON S.ID = TR.SITE
     INNER JOIN OBJECT CO ON CO.ID = S.INCLASS
     LEFT OUTER JOIN RWLOCK RW ON RW.ID = L.LOCK
WHERE L.LOCK = ?Lock? AND
      L.STATE = &apos;AFTER ACQUISITION&apos;
</query>
  <query id='1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a' description='How often is a lock held when this field is accessed after object construction?' revision='4' display='true'>-- NO-ROWS-MSG=No locks are ever held when this field is accessed.
SELECT LOCKS.*, 
       ACCESSES.ACCESSCOUNT &quot;?Field? Access Count__(r)&quot;,
       CAST (((CAST (LOCKS.&quot;Times Acquired__(r)&quot; AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;Percentage Held__(r)&quot;
FROM
(SELECT LOCK &quot;Lock__(r)&quot;, COUNT(LOCK) &quot;Times Acquired__(r)&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS ACCESSES</query>
  <query id='1fcd4578-f20e-4671-8f55-b6bec64f4249' description='When and by what threads was this field accessed?' revision='4' display='true'>SELECT &apos;?Package?&apos; &quot;Package__(&apos;package.gif&apos;)&quot;, &apos;?Class?&apos; &quot;Class__(&apos;class.gif&apos;)&quot;, &apos;?Field?&apos; &quot;Field__&quot;, 
       O.THREADNAME &quot;Thread__|&quot;, A.TS &quot;Time&quot;, A.ID &quot;AID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Id = A.InThread 
WHERE 
   A.FIELD = ?FieldId? AND 
   A.RECEIVER IS NULL
ORDER BY A.TS ASC</query>
  <query id='213c73ad-b3f6-4aef-9a05-f0c31d8fdcde' description='What fields (non-static) have a lock set?' revision='2' display='true' display-at-root='true'>-- NO-ROWS-MSG=No non-final non-volatile non-static fields that are shared after object construction have a common lock held for each access.
SELECT 
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  COUNT(DISTINCT I.Receiver) &quot;Instances&quot;, I.Field &quot;FieldId__(hide)&quot;
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON FI.STATIC = &apos;N&apos; AND I.FIELD=FI.ID
 INNER JOIN FIELDINSTANCELOCKSET F ON F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER 
 GROUP BY O.PackageName,O.ClassName,FI.FieldName,I.Field
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query id='2f505921-50fb-405b-bc78-4a5fe9228957' description='What fields (static) have a lock set? ' revision='5' display='true' display-at-root='true'>-- NO-ROWS-MSG=No non-final non-volatile static fields that are shared have a common lock held for each access.
SELECT 
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  FI.FieldName &quot;Field&quot;,
  F.LOCK &quot;Lock__|&quot;,
  I.FIELD &quot;FieldId__(hide)&quot; 
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID
 INNER JOIN FIELDLOCKSET F ON F.FIELD = I.FIELD
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query id='330ba83b-9e6a-42d4-9eda-32f98f00a85f' description='When and where is this thread contending for that lock?' revision='0' display='true'>select ld.StartEvent as LockEvent,
   ld.Start,ld.Duration 
from LOCKDURATION AS ld, LOCK as le
where ld.State = &apos;BLOCKING&apos;
  and ld.Lock=?Lock?
  and ld.InThread=?InThread?
  and le.Id=ld.StartEvent
  and le.InClass=?InClass?
  and le.AtLine=?AtLine?
order by ld.Duration desc
  </query>
  <query id='419c927e-a87c-4364-b4a9-2e8f50f728f6' description='What fields (static) are shared?' revision='6' display='true' display-at-root='true'>-- NO-ROWS-MSG=No static fields are shared between two or more threads.
select
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName &quot;Field__]&quot;,
  THO.ThreadName &quot;Thread__|&quot;,
  FS.ReadCount &quot;Read Count__(sum on 2,3)(r)&quot;,
  FS.WriteCount &quot;Write Count__(sum on 2,3)(r)&quot;,
  THO.ThreadName &quot;Threads Involved__(count distinct)(r)&quot;,
  F.ID &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and FS.FIELD = F.ID 
  and THO.ID = FS.Thread
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query id='432b76db-c751-4bd8-8b2f-ef5986334514' description='What is the stack trace for this lock event?' revision='1' display='true'>SELECT s.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, s.CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, s.INFILE &quot;File&quot;, s.LOCATION &quot;Location&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?LETRACE?)) s</query>
  <query id='4fce8390-7307-45dc-b779-5701ee7f23a1' description='What are the lock events for this lock graph edge?' revision='2' display='true'>select lo.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;, lo.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;, s.AtLine &quot;Line__]&quot;, tho.ThreadName &quot;Thread__|&quot;, lh.LockEvent &quot;LockEvent__(r)&quot;,tr.id &quot;LETRACE__(hide)&quot;
from LOCKSHELD as lh, LOCK l, TRACE tr, SITE s, OBJECT lo, OBJECT tho
where lh.LockHeld=?LockHeld?
  and lh.LockAcquired=?LockAcquired?
  and lh.LockEvent=l.Id
  and tr.Id = l.Trace
  and s.Id = tr.Site
  and lo.Id = s.InClass
  and tho.Id = l.InThread
order by lo.PackageName,lo.ClassName, s.AtLine, tho.ThreadName, lh.LockEvent
  </query>
  <query id='598a178b-7153-4e1c-978e-1b78b1d95799' description='What threads read and write this field?' revision='5' display='true'>SELECT
  CO.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  CO.ClassName   &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName    &quot;Field&quot;,
  THO.ThreadName &quot;Thread__|&quot;,
  FI.ReadUCCount + FI.ReadCount &quot;Reads__(sum on 2,3)&quot;,
  FI.WriteUCCount + FI.WriteCount &quot;Writes__(sum on 2,3)&quot;,
  FI.ReadUCCount &quot;Reads During Construction__(sum on 2,3)&quot;,
  FI.WriteUCCount &quot;Writes During Construction__(sum on 2,3)&quot;
 FROM FIELDINSTANCETHREAD FI, OBJECT THO, FIELD F, OBJECT CO
 WHERE FI.FIELD = ?FieldId? AND 
   FI.RECEIVER = ?Receiver? AND 
   THO.ID = FI.THREAD AND 
   F.ID = FI.FIELD AND
   CO.ID = F.DECLARINGTYPE</query>
  <query id='5b6077b8-238e-44d7-baa8-3e3a09634c6d' description='Who is interacting with that lock at that moment?' revision='0' display='true'>select ld.InThread &quot;InThread&quot;, ld.State &quot;State&quot;, ld.Start &quot;Start&quot;, ld.Stop &quot;Stop&quot;, ld.Duration &quot;Duration&quot;, 
  ld.StartEvent &quot;LockEvent&quot;
from LOCK as le, LOCKDURATION AS ld
where le.Id=?LockEvent?
  and ld.Lock=?Lock?
  and le.ts between ld.Start and ld.Stop
order by ld.Start 
  </query>
  <query id='67a08763-cefe-4193-908c-9dc8d1ca4245' description='When and where did this lock event occur?' revision='1' display='true'>select l.TS, t.ThreadName, l.Lock, lkType.ClassName as LockClass, 
l.LockIsThis as IsThis, l.LockIsClass as IsClass,
l.State, cl.PackageName, cl.ClassName, s.AtLine
from LOCK as l, TRACE tr, SITE s, OBJECT as cl, OBJECT as lk, OBJECT as t, OBJECT as lkType
where l.Id = ?LockEvent?
and tr.Id = l.Trace
and s.Id = tr.Site
and s.InClass = cl.Id
and l.Lock = lk.Id
and l.InThread = t.Id
and lk.Type = lkType.Id</query>
  <query id='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a' description='How often is a lock held when this field is accessed?' revision='8' display='true'>-- NO-ROWS-MSG=No locks are ever held when this field is accessed.
SELECT LOCKS.*, 
       ACCESSES.ACCESSCOUNT &quot;?Field? Access Count__(r)&quot;,
       CAST (((CAST (LOCKS.&quot;Times Acquired__(r)&quot; AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;Percentage Held__(r)&quot;
FROM
(SELECT LOCK &quot;Lock__(r)&quot;, COUNT(LOCK) &quot;Times Acquired__(r)&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER IS NULL
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER IS NULL) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.RECEIVER IS NULL) AS ACCESSES</query>
  <query id='6d8d0985-0830-4f18-a655-fa7b43703d5f' description='What are the individual instances of this non-static field?' revision='1' display='true'>SELECT COUNTS.RECEIVER &quot;Receiver&quot;,
       COUNTS.READS &quot;Reads&quot;,
       COUNTS.WRITES &quot;Writes&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction&quot;, 
       CASE WHEN LOCKS.COUNT IS NULL THEN 0 ELSE LOCKS.COUNT END &quot;Lock Set Size&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;
 FROM 
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT RECEIVER, COUNT(LOCK) &quot;COUNT&quot; 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS LOCKS
  ON COUNTS.RECEIVER = LOCKS.RECEIVER       </query>
  <query id='71a6fb5b-e5e1-4d25-bdc8-67ab5df1f66e' description='What fields (non-static, non-final) are shared?' revision='2' display='true' display-at-root='true'>-- NO-ROWS-MSG=No non-static fields are shared between two or more threads.
select
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName &quot;Field__|&quot;,
  COUNT(FI.Receiver) &quot;Instances__(r)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(sum on 2,3)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(sum on 2,3)(r)&quot;,
  COUNT(FI.Receiver) &quot;Instances__(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and F.Final = &apos;N&apos;
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
group by O.PackageName,O.ClassName,F.FieldName,F.Id
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id='732daa1f-dac0-4f40-b714-8190f903d323' description='Where are fields accessed while this lock is held?' revision='4' display='true'>-- NO-ROWS-MSG=No accesses occur while this lock is held 
SELECT DISTINCT PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, ATLINE &quot;Line__(r)|&quot;
FROM
(SELECT CO.PACKAGENAME, CO.CLASSNAME, S.ATLINE
  FROM LOCKSHELD LH, ACCESSLOCKSHELD ALH, ACCESS A, TRACE T, SITE S, OBJECT CO
  WHERE LH.LOCKHELD = ?Lock? AND
        ALH.LASTACQUISITION = LH.LOCKEVENT AND
        A.ID = ALH.ACCESS AND
        T.ID = A.TRACE AND
        S.ID = T.SITE AND
        CO.ID = S.INCLASS
UNION
 SELECT CO.PACKAGENAME, CO.CLASSNAME, S.ATLINE
  FROM LOCK L, ACCESSLOCKSHELD ALH, ACCESS A, TRACE T, SITE S, OBJECT CO
  WHERE L.LOCK = ?Lock? AND
        ALH.LASTACQUISITION = L.ID AND
        A.ID = ALH.ACCESS AND
        T.ID = A.TRACE AND
        S.ID = T.SITE AND
        CO.ID = S.INCLASS) AS ACCESSES
ORDER BY 1,2,3</query>
  <query id='8034f80b-aefb-4255-98b6-0ccd73ab1696' description='When and by what threads was this field accessed?' revision='4' display='true'>SELECT &apos;?Package?&apos; &quot;Package__(&apos;package.gif&apos;)&quot;, &apos;?Class?&apos; &quot;Class__(&apos;class.gif&apos;)&quot;, &apos;?Field?&apos; &quot;Field&quot;, 
       O.THREADNAME &quot;Thread__|&quot;, A.TS &quot;Time&quot;, A.ID &quot;AID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Id = A.InThread 
WHERE 
   A.FIELD = ?FieldId? AND 
   A.RECEIVER = ?Receiver?
ORDER BY A.TS ASC</query>
  <query id='803ca72a-f303-4319-8a35-9494eccc3d26' description='What locks could potentially cause deadlock?' revision='2' display='true' display-at-root='true'>-- NO-ROWS-MSG=No potential lock cycles were observed during this run of the program.
select Component &quot;Component&quot;, LockHeld &quot;LockHeld__(r)|&quot;,
  LockAcquired &quot;LockAcquired__(r)&quot;,
  Count &quot;Count__(r)&quot;, FirstTime &quot;FirstTime&quot;, LastTime &quot;LastTime&quot;
from lockcycle
where count &gt; 0
order by count desc</query>
  <query id='83d613b3-283e-4100-9a82-e42adf107fe6' description='What is the stack trace for this field access?' revision='1' display='true'>SELECT s.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, s.CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, s.INFILE &quot;File&quot;, s.LOCATION &quot;Location&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?ATRACE?)) s
</query>
  <query id='8f6cfa4a-8821-4166-adb0-94a17a7b8f1b' description='When do we acquire a lock here?' revision='1' display='true'>--TODO Instead of showing every event, we may just want to show all of the relevant traces
SELECT &apos;?Package?&apos;      &quot;Package__(&apos;package.gif&apos;)&quot;,
       &apos;?Class?&apos;        &quot;Class__(&apos;class.gif&apos;)&quot;,
       ?Line?           &quot;Line__(r)&quot;,
       L.TS             &quot;Time__|&quot;,
       COUNT (LOCKHELD) &quot;Locks Already Held__(r)&quot;,
       THO.THREADNAME   &quot;ThreadName&quot;,
       LH.LOCKEVENT     &quot;LockEvent__(hide)&quot;,
       TR.ID            &quot;LETRACE__(hide)&quot;
FROM OBJECT O,
     SITE S,
     TRACE TR,
     LOCK L,
     LOCKSHELD LH,
     OBJECT THO
WHERE O.CLASSNAME = &apos;?Class?&apos; AND
      O.PACKAGENAME = &apos;?Package?&apos; AND
      S.INCLASS = O.ID AND
      S.ATLINE = ?Line? AND
      TR.SITE = S.ID AND
      L.TRACE = TR.ID AND
      LH.LOCKEVENT = L.ID AND
      THO.ID = LH.INTHREAD
GROUP BY LH.LOCKEVENT,L.TS,THO.THREADNAME,TR.ID
ORDER BY 5 DESC,4</query>
  <query id='9d05ac24-20c2-436e-af6b-2bd0bc7dbcfb' description='Where does a thread hold a lock and acquire another?' revision='6' display='true' display-at-root='true'>-- NO-ROWS-MSG=No locks were observed to be acquired while another was already held during this run of the program.
SELECT PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;,
       CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;,
       ATLINE &quot;Line__|(r)&quot;,
       MAX (HELDCOUNT) &quot;Most Locks Already Held__(r)&quot;
FROM
 ( SELECT COUNT (LH.LOCKHELD) &quot;HELDCOUNT&quot;,
         LO.CLASSNAME,
         LO.PACKAGENAME,
         S.ATLINE
   FROM LOCKSHELD LH,
        LOCK LE,
        TRACE TR,
        SITE S,
        OBJECT LO
   WHERE LH.LOCKEVENT = LE.ID AND
         TR.ID = LE.TRACE AND
         S.ID = TR.SITE AND
         LO.ID = S.INCLASS
   GROUP BY LH.LOCKEVENT,LO.CLASSNAME,LO.PACKAGENAME,S.ATLINE,LE.TRACE) AS T
GROUP BY CLASSNAME,PACKAGENAME,ATLINE


</query>
  <query id='a1e89392-cd0c-4a41-85f1-44251d7a5e71' description='How often is a lock held when this field is accessed? ' revision='8' display='true'>-- NO-ROWS-MSG=No locks are ever held when this field is accessed.
SELECT LOCKS.*, 
       ACCESSES.ACCESSCOUNT &quot;?Field? Access Count__(r)&quot;,
       CAST (((CAST (LOCKS.&quot;Times Acquired__(r)&quot; AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;Percentage Held__(r)&quot;
FROM
(SELECT LOCK &quot;Lock__(r)&quot;, COUNT(LOCK) &quot;Times Acquired__(r)&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver?
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver?) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver?) AS ACCESSES</query>
  <query id='ae2c5715-740e-4850-a404-38bdc8cde6b6' description='What locks are held during this field access?' revision='3' display='true'>-- NO-ROWS-MSG=No locks are held during this access of the field.
--TODO make this look like a lock trace
SELECT O.THREADNAME &quot;Thread&quot;, A.TS &quot;Time&quot;, D.Lock &quot;Lock__|&quot;, LO.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;, LO.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;, S.AtLine &quot;Line__(r)&quot;, D.ID &quot;LDID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;,L.TRACE &quot;LATRACE__(hide)&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Id = A.InThread 
 INNER JOIN LOCKDURATION D ON
   D.InThread = A.InThread AND 
   (A.TS BETWEEN D.Start AND D.Stop)
 LEFT OUTER JOIN LOCK L ON
   L.Id = D.StartEvent
 LEFT OUTER JOIN TRACE TR ON
   TR.Id = L.TRACE
 LEFT OUTER JOIN SITE S ON
   S.Id = TR.SITE
 LEFT OUTER JOIN OBJECT LO ON
   LO.Id = S.InClass
WHERE 
   A.ID = ?AID?
ORDER BY O.THREADNAME ASC, A.TS ASC, D.Start DESC
</query>
  <query id='bd72a5e4-42aa-415d-aa72-28d351f629a4' description='What fields (non-static) are shared?' revision='2' display='true' display-at-root='true'>-- NO-ROWS-MSG=No non-static fields are shared between two or more threads.
select
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName &quot;Field__|&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(sum on 2,3)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(sum on 2,3)(r)&quot;,
  COUNT(FI.Receiver) &quot;Instances__(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
group by O.PackageName,O.ClassName,F.FieldName,F.Id
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id='be10177b-bce3-498c-ad83-c394d9264fc2' description='What threads use each lock?' revision='2' display='true'>-- NO-ROWS-MSG=No locks were observed to be acquired during this run of the program.
  L.LOCK &quot;Lock&quot;, 
  O.THREADNAME &quot;Thread Name__|&quot;,
  count(*) &quot;Acquisition Count&quot;
from LOCK L, OBJECT O
where L.INTHREAD = O.ID
  and L.STATE = &apos;AFTER ACQUISITION&apos;
group by l.lock, O.THREADNAME
order by 1, 2
</query>
  <query id='c744b5b5-15f0-4f72-a344-7e52bcac5071' description='What fields (static) have an empty lock set?' revision='5' display='true' display-at-root='true'>-- NO-ROWS-MSG=All non-final non-volatile static fields that are shared have a common lock held for each access.
SELECT 
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  I.FIELD &quot;FieldId__(hide)&quot;
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID
 LEFT OUTER JOIN FIELDLOCKSET F ON F.FIELD = I.FIELD
 WHERE F.LOCK IS NULL
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query id='c9453327-b892-4324-a6b8-2dceb32e1901' description='Which threads and what code contend for this lock?' revision='5' display='true'>-- NO-ROWS-MSG=No threads were forced to wait for this lock.
-- This query shows the locations and threads of all places this lock 
-- was contended for. Some entries appear to be duplicates, but actually
-- represent different stack traces.
select lo.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;, lo.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;, s.AtLine &quot;Line__]&quot;, tho.ThreadName &quot;Thread__|&quot;, 
  (trim(cast(sum(ld.Duration) as char(20))) || &apos; ns&apos;) &quot;BlockTime__(sum &apos; ns&apos;)(r)&quot;, 
  count(ld.lock)                                                        as &quot;Times Acquired__(sum)(r)&quot;,
  (trim (cast(sum(ld.Duration) as char(20)))) || &apos; ns&apos;                  as &quot;Total Block Time__(sum &apos; ns&apos;)(r)&quot;, 
  (trim (cast((sum(ld.Duration) / count (ld.lock)) as char(20)))) || &apos; ns&apos; as &quot;Average Block Time__(r)&quot;,
  le.trace &quot;LATRACE__(hide)&quot;
from LOCKDURATION ld, LOCK le, TRACE tr, SITE s, OBJECT lo, OBJECT tho
where ld.Lock=?Lock?
  and ld.State = &apos;BLOCKING&apos;
  and le.Id=ld.StartEvent
  and tr.Id = le.Trace
  and s.Id = tr.Site
  and lo.Id = s.InClass
  and tho.Id = ld.InThread
group by lo.PackageName,lo.ClassName, s.AtLine, tho.ThreadName, le.trace
order by lo.PackageName, lo.ClassName, s.AtLine, tho.ThreadName, sum(ld.Duration) desc
  </query>
  <query id='cb38a427-c259-4690-abe2-acea9661f737' description='What locks are contended for the longest time?' revision='4' display='true' display-at-root='true'>-- NO-ROWS-MSG=No locks were observed to be acquired during this run of the program.
select Lock &quot;Lock__(c)&quot;, 
  count(lock)                                                        as &quot;Times Acquired__(r)&quot;,
  (trim (cast(sum(Duration) as char(20)))) || &apos; ns&apos;                  as &quot;Total Block Time__(r)&quot;, 
  (trim (cast((sum(duration) / count (lock)) as char(20)))) || &apos; ns&apos; as &quot;Average Block Time__(r)&quot;
from LOCKDURATION    
where State = &apos;BLOCKING&apos;
group by Lock
order by sum(duration) / count (lock) desc
  </query>
  <query id='ce90be0d-9d7a-49a6-8334-c6f37112fa4b' description='What threads read and write this field?' revision='6' display='true'>SELECT
  CO.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  CO.ClassName   &quot;Class__(&apos;class.gif&apos;)&quot;,
  F.FieldName    &quot;Field&quot;,
  THO.ThreadName &quot;Thread__|&quot;,
  FI.ReadCount &quot;Reads__(sum on 2,3)&quot;,
  FI.WriteCount &quot;Writes__(sum on 2,3)&quot;
 FROM FIELDSTATICTHREAD FI, OBJECT THO, FIELD F, OBJECT CO
 WHERE FI.FIELD = ?FieldId? AND 
   THO.ID = FI.THREAD AND 
   F.ID = FI.FIELD AND
   CO.ID = F.DECLARINGTYPE</query>
  <query id='d4d2af9b-ce4d-4457-9e94-01972fcb58d3' description='What fields (non-static) have an empty lock set?' revision='2' display='true' display-at-root='true'>-- NO-ROWS-MSG=All non-final non-volatile non-static fields that are shared after object construction have a common lock held for each access.
SELECT 
  O.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
  O.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  COUNT(DISTINCT I.Receiver) &quot;Instances&quot;,I.Field &quot;FieldId__(hide)&quot;
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON FI.STATIC = &apos;N&apos; AND I.FIELD=FI.ID
 LEFT OUTER JOIN FIELDINSTANCELOCKSET F ON F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER 
 WHERE F.LOCK IS NULL
 GROUP BY O.PackageName, O.ClassName, FI.FieldName, I.Field
 ORDER BY O.PackageName, O.ClassName, FI.FieldName</query>
  <query id='d5b7c435-3a93-46e1-98ec-e5c8289df564' description='What objects are threads?' revision='0' display='true'>select t.Id, t.ThreadName, cl.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;,
       cl.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;
from OBJECT as t, OBJECT as cl   
where t.ThreadName is not null
  and t.Type=cl.Id</query>
  <query id='e353c660-c044-43c3-8f29-df5edb359d2d' description='Show Tables' revision='1'>select st.TABLENAME &quot;Table&quot;,
       sco.columnname &quot;Column__|&quot;,
       sco.columndatatype &quot;Column Data Type&quot;,
       sco.autoincrementvalue &quot;Autoincrement Value&quot;,
       sco.autoincrementstart &quot;Autoincurement Start&quot;,
       sco.autoincrementinc &quot;Autoincrement Increment&quot;
from sys.sysschemas sc,sys.systables st,sys.syscolumns sco 
where sc.schemaname = &apos;FLASHLIGHT&apos; and st.schemaid = sc.schemaid and sco.referenceid = st.tableid 
order by st.tablename,sco.columnnumber</query>
  <query id='e6477143-977b-4c8d-b3d5-3d09c919cb94' description='Where are fields accessed during this particular lock acquisition?' revision='2' display='true'>-- NO-ROWS-MSG=No accesses occur while this lock is held 
SELECT DISTINCT CO.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, CO.CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, S.ATLINE &quot;Line__(r)&quot;
  FROM LOCKDURATION D, ACCESS A, TRACE T, SITE S, OBJECT CO
  WHERE D.STARTEVENT = ?LockEvent? AND
        A.INTHREAD = D.INTHREAD AND
        A.TS BETWEEN D.START AND D.STOP AND
        S.ID = T.SITE AND 
        CO.ID = S.INCLASS
ORDER BY 1,2,3</query>
  <query id='fb317a0c-d9c5-41e2-811b-d6236f63fae1' description='What is the lock trace for this lock event?' revision='4' display='true'>SELECT D.Lock &quot;Lock__(r)&quot;, LO.PackageName &quot;Package__(&apos;package.gif&apos;)&quot;, LO.ClassName &quot;Class__(&apos;class.gif&apos;)&quot;, S.AtLine &quot;Line__(r)&quot;, D.Start &quot;Time&quot;, D.ID &quot;LDID__(hide)&quot;, LL.TRACE &quot;LATRACE__(hide)&quot;
 FROM LOCK L, LOCKDURATION D, LOCK LL, TRACE T, SITE S, OBJECT LO
 WHERE D.InThread = L.InThread AND (L.TS BETWEEN D.START AND D.STOP) AND D.STATE = &apos;HOLDING&apos; AND
       LL.Id = D.StartEvent AND
       T.Id = LL.Trace AND 
       S.Id = T.Site AND
       LO.Id = S.InClass AND
       L.Id = ?LockEvent?
ORDER BY D.START DESC</query>
  <query id='fd49f015-3585-4602-a5d1-4e67ef7b6a55' description='What fields are protected by this lock, and how often?' revision='4' display='true'>-- NO-ROWS-MSG=No accesses occur while this lock is held 
SELECT DT.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, DT.CLASSNAME &quot;Class__(&apos;class.gif&apos;)&quot;, F.FIELDNAME &quot;Field__|&quot;, FA.HELD &quot;Times Held__(r)&quot;, COUNT(A.ID) &quot;Total Accesses__(r)&quot;, CAST ((CAST (FA.HELD AS FLOAT) / CAST (COUNT(A.ID) AS FLOAT) * 100) AS DECIMAL) &quot;%__(r)&quot;
FROM 
 (SELECT A.FIELD, COUNT(DISTINCT A.ID) &quot;HELD&quot; FROM
  (SELECT ALH.ACCESS FROM LOCK L, ACCESSLOCKSHELD ALH
   WHERE L.LOCK = ?Lock? AND ALH.LASTACQUISITION = L.ID 
    UNION
  SELECT ALH.ACCESS FROM LOCKSHELD LH, ACCESSLOCKSHELD ALH
   WHERE LH.LOCKHELD = ?Lock? AND ALH.LASTACQUISITION = LH.LOCKEVENT) AS AIDS, ACCESS A, FIELD F
  WHERE A.ID = AIDS.ACCESS AND F.ID = A.FIELD
  GROUP BY A.FIELD) AS FA, FIELD F, ACCESS A, OBJECT DT
WHERE F.ID = FA.FIELD AND A.FIELD = F.ID AND DT.ID = F.DECLARINGTYPE
GROUP BY DT.PACKAGENAME,DT.CLASSNAME,F.FIELDNAME,FA.HELD
ORDER BY 1,2,3</query>
  <sub-query id='094fc6db-5a5b-4495-aacd-54f5a5aa1691' sub-query='1fcd4578-f20e-4671-8f55-b6bec64f4249'/>
  <sub-query id='094fc6db-5a5b-4495-aacd-54f5a5aa1691' sub-query='ce90be0d-9d7a-49a6-8334-c6f37112fa4b'/>
  <sub-query id='094fc6db-5a5b-4495-aacd-54f5a5aa1691' sub-query='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a'/>
  <sub-query id='1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a' sub-query='fd49f015-3585-4602-a5d1-4e67ef7b6a55'/>
  <sub-query id='1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
  <sub-query id='1fcd4578-f20e-4671-8f55-b6bec64f4249' sub-query='ae2c5715-740e-4850-a404-38bdc8cde6b6'/>
  <sub-query id='1fcd4578-f20e-4671-8f55-b6bec64f4249' sub-query='83d613b3-283e-4100-9a82-e42adf107fe6'/>
  <sub-query id='213c73ad-b3f6-4aef-9a05-f0c31d8fdcde' sub-query='6d8d0985-0830-4f18-a655-fa7b43703d5f'/>
  <sub-query id='2f505921-50fb-405b-bc78-4a5fe9228957' sub-query='1fcd4578-f20e-4671-8f55-b6bec64f4249'/>
  <sub-query id='2f505921-50fb-405b-bc78-4a5fe9228957' sub-query='ce90be0d-9d7a-49a6-8334-c6f37112fa4b'/>
  <sub-query id='2f505921-50fb-405b-bc78-4a5fe9228957' sub-query='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a'/>
  <sub-query id='419c927e-a87c-4364-b4a9-2e8f50f728f6' sub-query='1fcd4578-f20e-4671-8f55-b6bec64f4249'/>
  <sub-query id='419c927e-a87c-4364-b4a9-2e8f50f728f6' sub-query='ce90be0d-9d7a-49a6-8334-c6f37112fa4b'/>
  <sub-query id='419c927e-a87c-4364-b4a9-2e8f50f728f6' sub-query='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a'/>
  <sub-query id='4fce8390-7307-45dc-b779-5701ee7f23a1' sub-query='432b76db-c751-4bd8-8b2f-ef5986334514'/>
  <sub-query id='4fce8390-7307-45dc-b779-5701ee7f23a1' sub-query='fb317a0c-d9c5-41e2-811b-d6236f63fae1'/>
  <sub-query id='4fce8390-7307-45dc-b779-5701ee7f23a1' sub-query='e6477143-977b-4c8d-b3d5-3d09c919cb94'/>
  <sub-query id='4fce8390-7307-45dc-b779-5701ee7f23a1' sub-query='67a08763-cefe-4193-908c-9dc8d1ca4245'/>
  <sub-query id='67a08763-cefe-4193-908c-9dc8d1ca4245' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='67a08763-cefe-4193-908c-9dc8d1ca4245' sub-query='fd49f015-3585-4602-a5d1-4e67ef7b6a55'/>
  <sub-query id='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a' sub-query='fd49f015-3585-4602-a5d1-4e67ef7b6a55'/>
  <sub-query id='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
  <sub-query id='6d8d0985-0830-4f18-a655-fa7b43703d5f' sub-query='598a178b-7153-4e1c-978e-1b78b1d95799'/>
  <sub-query id='6d8d0985-0830-4f18-a655-fa7b43703d5f' sub-query='1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a'/>
  <sub-query id='6d8d0985-0830-4f18-a655-fa7b43703d5f' sub-query='a1e89392-cd0c-4a41-85f1-44251d7a5e71'/>
  <sub-query id='6d8d0985-0830-4f18-a655-fa7b43703d5f' sub-query='8034f80b-aefb-4255-98b6-0ccd73ab1696'/>
  <sub-query id='71a6fb5b-e5e1-4d25-bdc8-67ab5df1f66e' sub-query='6d8d0985-0830-4f18-a655-fa7b43703d5f'/>
  <sub-query id='8034f80b-aefb-4255-98b6-0ccd73ab1696' sub-query='ae2c5715-740e-4850-a404-38bdc8cde6b6'/>
  <sub-query id='8034f80b-aefb-4255-98b6-0ccd73ab1696' sub-query='83d613b3-283e-4100-9a82-e42adf107fe6'/>
  <sub-query id='803ca72a-f303-4319-8a35-9494eccc3d26' sub-query='4fce8390-7307-45dc-b779-5701ee7f23a1'/>
  <sub-query id='8f6cfa4a-8821-4166-adb0-94a17a7b8f1b' sub-query='432b76db-c751-4bd8-8b2f-ef5986334514'/>
  <sub-query id='8f6cfa4a-8821-4166-adb0-94a17a7b8f1b' sub-query='fb317a0c-d9c5-41e2-811b-d6236f63fae1'/>
  <sub-query id='8f6cfa4a-8821-4166-adb0-94a17a7b8f1b' sub-query='e6477143-977b-4c8d-b3d5-3d09c919cb94'/>
  <sub-query id='9d05ac24-20c2-436e-af6b-2bd0bc7dbcfb' sub-query='8f6cfa4a-8821-4166-adb0-94a17a7b8f1b'/>
  <sub-query id='a1e89392-cd0c-4a41-85f1-44251d7a5e71' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='a1e89392-cd0c-4a41-85f1-44251d7a5e71' sub-query='fd49f015-3585-4602-a5d1-4e67ef7b6a55'/>
  <sub-query id='a1e89392-cd0c-4a41-85f1-44251d7a5e71' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
  <sub-query id='ae2c5715-740e-4850-a404-38bdc8cde6b6' sub-query='10477928-cf86-4416-9118-34eea8cd7e38'/>
  <sub-query id='ae2c5715-740e-4850-a404-38bdc8cde6b6' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='ae2c5715-740e-4850-a404-38bdc8cde6b6' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
  <sub-query id='ae2c5715-740e-4850-a404-38bdc8cde6b6' sub-query='83d613b3-283e-4100-9a82-e42adf107fe6'/>
  <sub-query id='bd72a5e4-42aa-415d-aa72-28d351f629a4' sub-query='6d8d0985-0830-4f18-a655-fa7b43703d5f'/>
  <sub-query id='be10177b-bce3-498c-ad83-c394d9264fc2' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='c744b5b5-15f0-4f72-a344-7e52bcac5071' sub-query='1fcd4578-f20e-4671-8f55-b6bec64f4249'/>
  <sub-query id='c744b5b5-15f0-4f72-a344-7e52bcac5071' sub-query='ce90be0d-9d7a-49a6-8334-c6f37112fa4b'/>
  <sub-query id='c744b5b5-15f0-4f72-a344-7e52bcac5071' sub-query='6a39e6ca-29e9-4093-ba03-0e9bd9503a1a'/>
  <sub-query id='c9453327-b892-4324-a6b8-2dceb32e1901' sub-query='10477928-cf86-4416-9118-34eea8cd7e38'/>
  <sub-query id='cb38a427-c259-4690-abe2-acea9661f737' sub-query='c9453327-b892-4324-a6b8-2dceb32e1901'/>
  <sub-query id='cb38a427-c259-4690-abe2-acea9661f737' sub-query='732daa1f-dac0-4f40-b714-8190f903d323'/>
  <sub-query id='cb38a427-c259-4690-abe2-acea9661f737' sub-query='fd49f015-3585-4602-a5d1-4e67ef7b6a55'/>
  <sub-query id='cb38a427-c259-4690-abe2-acea9661f737' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
  <sub-query id='d4d2af9b-ce4d-4457-9e94-01972fcb58d3' sub-query='6d8d0985-0830-4f18-a655-fa7b43703d5f'/>
  <sub-query id='fb317a0c-d9c5-41e2-811b-d6236f63fae1' sub-query='10477928-cf86-4416-9118-34eea8cd7e38'/>
  <sub-query id='fb317a0c-d9c5-41e2-811b-d6236f63fae1' sub-query='12592a6f-1b1e-4e22-b17a-56b2e4ff0495'/>
</ad-hoc>
