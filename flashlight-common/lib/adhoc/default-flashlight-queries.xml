<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<ad-hoc version="4.0">
  <query id="f6db6b42-eb34-43e7-b133-278089a03ea1" description="@RegionLock(&quot;Lock is this protects Region&quot;)" revision="2">SELECT DISTINCT 
  LCO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
  LCO.CLASSNAME &quot;Class&quot;,
  LCO.CLASSCODE &quot;Class__(icon)&quot;,
  F.FIELDNAME &quot;Field__|&quot;
FROM FIELDINSTANCELOCKSET FIL
INNER JOIN OBJECT LO ON
  LO.ID = FIL.LOCK AND
  LO.ID = FIL.RECEIVER
INNER JOIN OBJECT LCO ON
  LCO.ID = LO.TYPE
INNER JOIN FIELD F ON
  F.ID = FIL.FIELD
</query>
  <query id="8c0045d1-6b75-4a9b-9158-f9affe59dbb7" description="@Regions" revision="4">SELECT DISTINCT
  TRIM(CAST (FLCO.PACKAGENAME || &apos;.&apos; || FLCO.CLASSNAME || &apos;-&apos; || CAST (FIL.LOCK AS CHAR (50)) AS CHAR (200))) &quot;Dynamic Lock Id&quot;,  
  CO.PACKAGENAME &quot;Package__|(&apos;@PK&apos;)&quot;,
  CO.CLASSNAME &quot;Class&quot;,
  CO.CLASSCODE &quot;Class__(icon)&quot;,
  F.FIELDNAME &quot;Field&quot;
FROM FIELDINSTANCELOCKSET FIL
INNER JOIN OBJECT O ON
  O.ID = FIL.RECEIVER
INNER JOIN OBJECT CO ON
  CO.ID = O.TYPE
INNER JOIN FIELD F ON
  F.ID = FIL.FIELD
INNER JOIN OBJECT FLO ON
  FLO.ID = FIL.LOCK
INNER JOIN OBJECT FLCO ON
  FLCO.ID = FLO.TYPE
ORDER BY 1,2,3,4
</query>
  <query id="1562545d-004b-4865-9f55-65ed4e37bcbb" description="How often is a lock held when this field is accessed in this thread?" revision="18" display="true">-- META-BEGIN(no-rows)
-- No locks are ever held when this field is accessed.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    How often is a lock held when this field is accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists how often each lock was held when this particular field was accessed in
--    the given thread.  If the same lock is held on every access, we have an
--    assurance that no race condition was observed for this field.  Only accesses
--    of the field after object construction are considered, as a safely published
--    field doesn&apos;t need to have the same lock held during object construction as
--    is held when it is accessed.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--           &lt;td&gt;Instance&lt;/td&gt;
--           &lt;td&gt;The owning object of the field.&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Thread&lt;/td&gt;
--           &lt;td&gt;The thread in context&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The proportion of times a lock was held when this field
-- 	  was accessed to the total number of accesses, expressed as a
-- 	  percentage&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;A lock identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed while the lock in
-- 	  question was held.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed after object construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;how-often-is-a-lock-held-when-this-field-is-accessed-in-this-thread.png&quot; /&gt;
-- 
-- &lt;p&gt;
-- The above example lists all of the locks that access this instance of
-- &lt;code&gt;f_location&lt;/code&gt; in Ship-1096, ordered by the percent of all field
-- accesses the lock was held for.  The most commonly held lock was
-- &lt;code&gt;Thread-3&lt;/code&gt; itself, which was held 9 out of the 9 times this instance
-- of &lt;code&gt;f_location&lt;/code&gt; was accessed in Thread-3.
-- &lt;/p&gt;
-- META-END
SELECT 
   &apos;?Instance?&apos;         &quot;Instance&quot;,
   &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   OBJID(?Thread?)      &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
   CAST (((CAST (LOCKS.COUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
   LOCKS.LOCKID         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LOCKS.COUNT          &quot;Accesses With Lock Held__(add-commas)(r)&quot;,
   ACCESSES.ACCESSCOUNT &quot;Total Accesses__(add-commas)(r)&quot;,
   LOCKS.LOCK           &quot;Lock__(hide)&quot;
FROM
(SELECT OBJID(LOCK) &quot;LOCKID&quot;, LOCK, COUNT(LOCK) &quot;COUNT&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND A.INTHREAD = ?Thread? AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND A.INTHREAD = ?Thread? AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.INTHREAD = ?Thread? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS ACCESSES
ORDER BY 6 DESC</query>
  <query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" description="How often is a lock held when this field is accessed?" revision="23" display="true">-- META-BEGIN(no-rows)
-- No locks are ever held when this field is accessed.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    How often is a lock held when this field is accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists how often each lock was held when this particular field was accessed.
--    If the same lock is held on every access, we have an assurance that no race
--    condition was observed for this field.  Only accesses of the field after
--    object construction are considered, as a safely published field doesn&apos;t need
--    to have the same lock held during object construction as is held when it is
--    accessed.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--           &lt;td&gt;Instance&lt;/td&gt;
--           &lt;td&gt;The owning object of the field.&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The proportion of times a lock was held when this field
-- 	  was accessed to the total number of accesses, expressed as a
-- 	  percentage&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;A lock identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed while the lock in
-- 	  question was held.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed after object construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;how-often-is-a-lock-held-when-this-field-is-accessed-non-static.png&quot; /&gt;
-- 
-- &lt;p&gt;
-- The above example lists all of the locks that access this instance of
-- &lt;code&gt;f_owner&lt;/code&gt; in Planet-94, ordered by the percent of all field accesses
-- the lock was held for.  The most commonly held lock was
-- &lt;code&gt;ReentrantReadWriteLock-95&lt;/code&gt;, which was held 5 out of the 5 times this
-- instance of &lt;code&gt;f_owner&lt;/code&gt; was accessed.  Because the lock was held 100%
-- of the time, we can feel confident that no race condition was present in this
-- instance of &lt;code&gt;f_owner&lt;/code&gt; for this run of the program.
-- &lt;/p&gt;
-- META-END
SELECT 
   &apos;?Instance?&apos;         &quot;Instance&quot;,
   &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   CAST (((CAST (LOCKS.COUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
   LOCKS.LOCKID         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LOCKS.COUNT          &quot;Accesses With Lock Held__(add-commas)(r)&quot;,
   ACCESSES.ACCESSCOUNT &quot;Total Accesses__(add-commas)(r)&quot;,
   LOCKS.LOCK           &quot;Lock__(hide)&quot;
FROM
(SELECT OBJID(LOCK) &quot;LOCKID&quot;, LOCK , COUNT(LOCK) &quot;COUNT&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.RECEIVER = ?Receiver? AND A.UNDERCONSTRUCTION = &apos;N&apos;) AS ACCESSES
ORDER BY 5 DESC</query>
  <query id="42031a55-4f1c-42dc-80dc-0fa141a32382" description="How often is a lock held when this object is indirectly accessed?" revision="16" display="true">-- META-BEGIN(no-rows)
-- No locks are ever held when this object is indirectly accessed.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    How often is a lock held when this object is indirectly accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists how often each lock was held when this particular object was indirectly
--    accessed.  An indirect access is any method called on the object that matches
--    a pre-set list of methods.  This list can be modified in Flashlight
--    Configuration, but by default contains most array and collection accessors.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
-- 
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--           &lt;td&gt;Object&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The proportion of times a lock was held when this
-- 	  object was indirectly accessed to the total number of
-- 	  accesses, expressed as a percentage&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;A lock identifier&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this object was indirectly accessed while the
-- 	  given lock was held.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this object was indirectly accessed&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;how-often-is-a-lock-held-when-this-object-is-indirectly-accessed.png&quot; /&gt;
-- &lt;p&gt;
-- The above example shows the four locks that were held when HashMap-84 was
-- indirectly accessed.  The &lt;code&gt;Object-42&lt;/code&gt; lock was held 9 out of 9
-- times this object was called, and likely protects the object&apos;s state.
-- &lt;/p&gt;
-- META-END
SELECT 
   &apos;?Object?&apos;           &quot;Object&quot;,
   &apos;?Object (Image)?&apos;   &quot;Object__(icon)&quot;,
   CAST (((CAST (LOCKS.COUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,  
   LOCKS.LOCKID         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LOCKS.COUNT          &quot;Accesses With Lock Held__(add-commas)(r)&quot;,
   ACCESSES.ACCESSCOUNT &quot;Total Accesses__(add-commas)(r)&quot;,
   LOCKS.LOCK           &quot;Lock__(hide)&quot;
FROM
(SELECT OBJID(LOCK) &quot;LOCKID&quot;, LOCK, COUNT(LOCK) &quot;COUNT&quot;
 FROM 
  (SELECT L.LOCK FROM INDIRECTACCESS A, INDIRECTACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.RECEIVER = ?Receiver?
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM INDIRECTACCESS A, INDIRECTACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.RECEIVER = ?Receiver?) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM INDIRECTACCESS A 
 WHERE A.RECEIVER = ?Receiver?) AS ACCESSES
ORDER BY 3 DESC</query>
  <query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" description="How often is a lock held when this static field is accessed in this thread?" revision="17" display="true">-- META-BEGIN(no-rows)
-- No locks are ever held when this field is accessed.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    How often is a lock held when this static field is accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists how often each lock was held when this particular field was accessed in
--    the given thread.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--      &lt;/tr&gt;
--      &lt;tr&gt;
--       &lt;td&gt;In Thread&lt;/td&gt;
--       &lt;td&gt;The thread in context&lt;/td&gt;
--      &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The proportion of times a lock was held when this field
-- 	  was accessed to the total number of accesses, expressed as a
-- 	  percentage&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;A lock identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed while the lock in
-- 	  question was held.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed after object construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;how-often-is-a-lock-held-when-this-static-field-is-accessed-in-this-thread.png&quot; /&gt;
-- 
-- &lt;p&gt;
-- The above example lists all of the locks that are held when the main thread
-- accesses &lt;code&gt;lastTime&lt;/code&gt; , ordered by the percent of all field accesses
-- the lock was held for.  The most commonly held lock was
-- &lt;code&gt;ConsoleAppender-122&lt;/code&gt; , which was held 526 out of the 601 times this
-- instance of &lt;code&gt;lastTime&lt;/code&gt; was accessed in main.
-- &lt;/p&gt;

-- META-END
SELECT 
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   OBJID(?Thread?)      &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
   CAST (((CAST (LOCKS.COUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
   LOCKS.LOCKID         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LOCKS.COUNT          &quot;Accesses With Lock Held__(add-commas)(r)&quot;,
   ACCESSES.ACCESSCOUNT &quot;Total Accesses__(add-commas)(r)&quot;,
   LOCKS.LOCK           &quot;Lock__(hide)&quot;
FROM
(SELECT OBJID(LOCK) &quot;LOCKID&quot;, LOCK, COUNT(LOCK) &quot;COUNT&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND A.INTHREAD = ?Thread? AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? 
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND A.INTHREAD = ?Thread? AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? ) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId? AND A.INTHREAD = ?Thread?) AS ACCESSES
ORDER BY 6 DESC</query>
  <query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" description="How often is a lock held when this static field is accessed?" revision="30" display="true">-- META-BEGIN(no-rows)
-- No locks are ever held when this field is accessed.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    How often is a lock held when this static field is accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists how often each lock was held when this particular field was accessed.
--    If the same lock is held on every access, we have an assurance that no race
--    condition was observed for this field.  Only accesses of the field after
--    object construction are considered, as a safely published field doesn&apos;t need
--    to have the same lock held during object construction as is held when it is
--    accessed.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The proportion of times a lock was held when this field
-- 	  was accessed to the total number of accesses, expressed as a
-- 	  percentage&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;A lock identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed while the lock in
-- 	  question was held.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was accessed after object construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;how-often-is-a-lock-held-when-this-static-field-is-accessed.png&quot; /&gt;
-- 
-- &lt;p&gt;
-- The above example lists all of the locks that are held when the main thread
-- accesses &lt;code&gt;lastTime&lt;/code&gt; , ordered by the percent of all field accesses
-- the lock was held for.  The most commonly held lock was
-- &lt;code&gt;ConsoleAppender-122&lt;/code&gt; , which was held 2,780 out of the 3,196 times
-- this instance of &lt;code&gt;lastTime&lt;/code&gt; was accessed in the program.
-- &lt;/p&gt;
-- META-END
SELECT 
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   CAST (((CAST (LOCKS.COUNT AS FLOAT)) / (CAST (ACCESSES.ACCESSCOUNT AS FLOAT))) * 100 AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
   LOCKS.LOCKID         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LOCKS.COUNT          &quot;Accesses With Lock Held__(add-commas)(r)&quot;,
   ACCESSES.ACCESSCOUNT &quot;Total Accesses__(add-commas)(r)&quot;,
   LOCKS.LOCK           &quot;Lock__(hide)&quot;
FROM
(SELECT OBJID(LOCK) &quot;LOCKID&quot;, LOCK, COUNT(LOCK) &quot;COUNT&quot;
 FROM 
  (SELECT L.LOCK FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCK L
   WHERE ALH.ACCESS = A.ID AND L.ID = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? 
  UNION ALL 
  SELECT LH.LOCKHELD &quot;LOCK&quot; FROM ACCESS A, ACCESSLOCKSHELD ALH, LOCKSHELD LH 
   WHERE ALH.ACCESS = A.ID AND LH.LOCKEVENT = ALH.LASTACQUISITION AND A.FIELD = ?FieldId? ) AS FOO
 GROUP BY LOCK) AS LOCKS,
(SELECT COUNT(*) &quot;ACCESSCOUNT&quot; 
 FROM ACCESS A 
 WHERE A.FIELD = ?FieldId?) AS ACCESSES
ORDER BY 5 DESC</query>
  <query id="b4c691be-b394-45c0-8190-6a2e0d9e63d9" description="Show every access of this field in this time range." revision="11" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    Show every access of this field in this time range.
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Shows each field access in the given time range in the order that they
--    occurred.  Accesses marked as being &apos;Under Construction&apos; happened while the
--    object was being initialized.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Access&lt;/td&gt;
-- 	  &lt;td&gt;The type of field access, either a Read or a Write&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Time&lt;/td&gt;
-- 	  &lt;td&gt;The time this field access occurred&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;show-every-access-of-this-field-in-this-time-range.png&quot; alt=&quot;Show every access of this field in this time range.&quot;/&gt;
-- META-END
SELECT &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;, &apos;?Class?&apos; &quot;Class&quot;, &apos;?Class (Image)?&apos; &quot;Class__(icon)&quot;,&apos;?Field?&apos; &quot;Field&quot;, &apos;?Field (Image)?&apos; &quot;Field__(icon)&quot;,
       THO.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;, 
       CASE WHEN A.RW = &apos;R&apos; THEN &apos;Read&apos; ELSE &apos;Write&apos; END &quot;Access&quot;,
       CASE WHEN A.UNDERCONSTRUCTION = &apos;N&apos; THEN &apos; &apos; ELSE &apos;Yes&apos; END &quot;Under Construction__(c)&quot;,
       A.TS &quot;Time&quot;, 
       CO.PACKAGENAME &quot;Package__(hide)&quot;, CO.CLASSNAME &quot;Class__(hide)&quot;, S.ATLINE &quot;Line__(hide)&quot;,
       A.ID &quot;AID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;
 FROM ACCESS A, OBJECT THO, TRACE T, SITE S, OBJECT CO
WHERE 
   T.ID = A.TRACE AND
   S.ID = T.SITE AND
   CO.ID = S.INCLASS AND
   THO.Id = A.InThread AND
   A.FIELD = ?FieldId? AND 
   A.RECEIVER = ?Receiver? AND
   A.TS BETWEEN &apos;?First Access?&apos; AND &apos;?Last Access?&apos; AND
   A.INTHREAD = ?ThreadId?
ORDER BY A.TS ASC</query>
  <query id="8de7d969-6633-4a16-acad-786ab9fd2f5f" description="Show every access of this static field in this time range." revision="11" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    Show every access of this static field in this time range.
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Shows each field access in the given time range in the order that they
--    occurred.  Accesses marked as being &apos;Under Construction&apos; happened while the
--    object was being initialized.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Access&lt;/td&gt;
-- 	  &lt;td&gt;The type of field access, either a Read or a Write&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Time&lt;/td&gt;
-- 	  &lt;td&gt;The time this field access occurred&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;show-every-access-of-this-static-field-in-this-time-range.png&quot; alt=&quot;Show every access of this static field in this time range.&quot;/&gt;
-- META-END
SELECT &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;, &apos;?Class?&apos; &quot;Class&quot;, &apos;?Class (Image)?&apos; &quot;Class__(icon)&quot;,&apos;?Field?&apos; &quot;Field&quot;, &apos;?Field (Image)?&apos; &quot;Field__(icon)&quot;,
       THO.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;, 
       CASE WHEN A.RW = &apos;R&apos; THEN &apos;Read&apos; ELSE &apos;Write&apos; END &quot;Access&quot;,
       A.TS &quot;Time&quot;, 
       CO.PACKAGENAME &quot;Package__(hide)&quot;, CO.CLASSNAME &quot;Class__(hide)&quot;, S.ATLINE &quot;Line__(hide)&quot;,
       A.ID &quot;AID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;
 FROM ACCESS A, OBJECT THO, TRACE T, SITE S, OBJECT CO
WHERE 
   T.ID = A.TRACE AND
   S.ID = T.SITE AND
   CO.ID = S.INCLASS AND
   THO.Id = A.InThread AND
   A.FIELD = ?FieldId? AND 
   A.RECEIVER IS NULL AND
   A.TS BETWEEN &apos;?First Access?&apos; AND &apos;?Last Access?&apos; AND
   A.INTHREAD = ?ThreadId?
ORDER BY A.TS ASC</query>
  <query id="c7b845ab-3efc-4f26-a240-e31228c2f1b4" description="Show every indirect access of this object in this time range." revision="4" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Show every indirect access of this object in this time range.
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Shows each access in the given time range in the order that they
--    occurred. 
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Time&lt;/td&gt;
-- 	  &lt;td&gt;The time this access occurred&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;show-every-indirect-access-of-this-object-in-this-time-range.png&quot; alt=&quot;Show every indirect access of this object in this time range.&quot;/&gt;
-- META-END
SELECT 
   &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;,
   &apos;?Object?&apos; &quot;Object&quot;,
   &apos;?Object (Image)?&apos; &quot;Object__(icon)&quot;,
   THO.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;, 
   A.TS &quot;Time&quot;, 
   CO.PACKAGENAME &quot;Package__(hide)&quot;, CO.CLASSNAME &quot;Class__(hide)&quot;, S.ATLINE &quot;Line__(hide)&quot;,
   A.ID &quot;AID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;
 FROM INDIRECTACCESS A, OBJECT THO, TRACE T, SITE S, OBJECT CO
WHERE 
   T.ID = A.TRACE AND
   S.ID = T.SITE AND
   CO.ID = S.INCLASS AND
   THO.Id = A.InThread AND
   A.RECEIVER = ?Receiver? AND
   A.TS BETWEEN &apos;?First Access?&apos; AND &apos;?Last Access?&apos; AND
   A.INTHREAD = ?ThreadId?
ORDER BY A.TS ASC</query>
  <query id="e353c660-c044-43c3-8f29-df5edb359d2d" description="Show Tables" revision="4">-- META-BEGIN(doc)
--&lt;p&gt;&lt;strong&gt;
--    Show Tables
--&lt;/strong&gt;&lt;/p&gt;
--&lt;p&gt;
-- Lists all of the database tables and their column descriptors.
--&lt;/p&gt;
-- META-END
select st.TABLENAME &quot;Table&quot;,
       sco.columnname &quot;Column__|&quot;,
       sco.columndatatype &quot;Column Data Type&quot;,
       sco.autoincrementvalue &quot;Autoincrement Value&quot;,
       sco.autoincrementstart &quot;Autoincurement Start&quot;,
       sco.autoincrementinc &quot;Autoincrement Increment&quot;
from sys.sysschemas sc,sys.systables st,sys.syscolumns sco 
where sc.schemaname = &apos;FLASHLIGHT&apos; and st.schemaid = sc.schemaid and sco.referenceid = st.tableid 
order by st.tablename,sco.columnnumber</query>
  <query id="cd3213bd-079c-4206-93d5-41aa4c2e9ee1" description="Stack Trace" revision="1" display="true">SELECT s.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, s.CLASSNAME &quot;Class&quot;, s.CLASSCODE &quot;Class__(icon)&quot;, s.INFILE &quot;File&quot;, s.LOCATION &quot;Location&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?TRACE?)) s</query>
  <query id="1865f98c-ce4a-4e00-a11c-97d81409e54a" description="What accesses are made in this object during this block of time?" revision="9" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--  What accesses are made in this object during this block of time?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Displays all accesses that occurred during the period of time in which the
-- analysis suspected false sharing might be going on.  Each row in the table
-- represents a contiguous period of time in which only one field in the same
-- thread.  Many entries with relatively small numbers of accesses per entry may
-- indicate that false sharing is a performance problem in your application.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Thread&lt;/td&gt;
-- 	  &lt;td&gt;The thread these accesses occurred in&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Read Count&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was read in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Write Count&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was written in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
--        &lt;tr&gt;
--          &lt;td&gt;Reads Under Construction&lt;/td&gt;
--          &lt;td&gt;The number of times this field was read in this thread while the owning object was under construction&lt;/td&gt;
--        &lt;/tr&gt;
--        &lt;tr&gt;
--          &lt;td&gt;Writes Under Construction&lt;/td&gt;
--          &lt;td&gt;The number of times this field was written in this thread while the owning object was under construction&lt;/td&gt;
--        &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;First Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the first field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Last Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the last field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-accesses-are-made-in-this-object-during-this-block-of-time.png&quot; /&gt;
--META-END
SELECT
   &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;,
   &apos;?Class?&apos; &quot;Class&quot;,
   &apos;?Class (Image)?&apos; &quot;Class__(icon)&quot;,
   S.FIELDNAME &quot;Field__|&quot;,
   S.CODE &quot;Field__(icon)&quot;,
   S.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)&quot;,
   S.READS &quot;Read Count__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITES &quot;Write Count__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.START &quot;First Access&quot;,
   S.STOP &quot;Last Access&quot;,
   S.THREADID &quot;ThreadId__(hide)&quot;,
   S.FIELDID &quot;FieldId__(hide)&quot;
FROM
  TABLE (BLOCKSUMMARY(?Receiver?, &apos;?First Access?&apos;, &apos;?Last Access?&apos;)) S</query>
  <query id="eee60af8-2385-4e71-9dde-554361b9ef07" description="What accesses do these two fields make during this block of time?" revision="8" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--  What accesses do these two fields make during this block of time?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Displays all accesses that occurred between these two fields during the period
-- of time in which the analysis suspects false sharing might be going on.  Each
-- row in the table represents a contiguous period of time in which only one field
-- in the same thread.  Many entries with relatively small numbers of accesses per
-- entry may indicate that false sharing is a performance problem in your
-- application.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Thread&lt;/td&gt;
-- 	  &lt;td&gt;The thread these accesses occurred in&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Read Count&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was read in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Write Count&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was written in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
--        &lt;tr&gt;
--          &lt;td&gt;Reads During Construction&lt;/td&gt;
--          &lt;td&gt;The number of times this field was read in this thread while the owning object was under construction&lt;/td&gt;
--        &lt;/tr&gt;
--        &lt;tr&gt;
--          &lt;td&gt;Writes During Construction&lt;/td&gt;
--          &lt;td&gt;The number of times this field was written in this thread while the owning object was under construction&lt;/td&gt;
--        &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;First Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the first field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Last Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the last field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-accesses-do-these-two-fields-make-during-this-block-of-time.png&quot; alt=&quot;What accesses do these two fields make during this block of time?&quot;/&gt;
--META-END
SELECT
   &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;,
   &apos;?Class?&apos; &quot;Class&quot;,
   &apos;?Class (Image)?&apos; &quot;Class__(icon)&quot;,
   S.FIELDNAME &quot;Field__|&quot;,
   S.CODE &quot;Field__(icon)&quot;,
   S.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)&quot;,
   S.READS &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITES &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.START &quot;First Access&quot;,
   S.STOP &quot;Last Access&quot;,
   S.THREADID &quot;ThreadId__(hide)&quot;,
   S.FIELDID &quot;FieldId__(hide)&quot;
FROM
  TABLE (FIELDSBLOCKSUMMARY(?Receiver?, &apos;?First Access?&apos;, &apos;?Last Access?&apos;, ?FieldId?, ?RFieldId?)) S
</query>
  <query id="eebe8cc6-9268-4b26-8d6a-bf94c88084fb" description="What are the edges for this lock cycle?" revision="7" display="true" custom-display="LockCycleGraph">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What are the edges for this lock cycle?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Displays a graph of all edges in the given lock cycle.  Each edge is drawn from
-- a held lock to an acquired lock in the graph, and is also displayed in tabular
-- format to the right of the graph..  The cycle represents a possible series of
-- lock acquisitions that, if they happened sequentially in the program, would
-- result in deadlock.
-- &lt;/p&gt;
-- 
-- &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
-- 
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;3&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Held&lt;/td&gt;
-- 	  &lt;td&gt;The lock held in this edge&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Acquired&lt;/td&gt;
-- 	  &lt;td&gt;The lock acquired in this edge.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Threads&lt;/td&gt;
-- 	  &lt;td&gt;A list of the threads in which this edge was observed, and the number of times they were observed.&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-are-the-edges-for-this-lock-cycle.png&quot; alt=&quot;what-are-the-edges-for-this-lock-cycle.png&quot; /&gt;
-- 
-- &lt;p&gt;The above example presents a lock cycle detected in a naive solution to the &lt;a
-- href=&quot;http://en.wikipedia.org/wiki/Dining_philosophers_problem&quot;&gt;Dining
-- Philosophers&lt;/a&gt; problem, in which a fork is placed between each philosopher,
-- and each philosopher then first tries to acquire the fork on their right, then
-- the fork on their left, then eat.  In this program each philosopher was
-- represented by a Thread (Thread-1 through Thread-5) and each fork was
-- represented by a lock (DiningPhilosophers$Fork-9 through Fork-13).&lt;/p&gt;
-- 
-- &lt;p&gt;If we look at the results, we can see visually that Flashlight detects the
-- potential for a lock cycle because each thread tries to acquire the fork on
-- their right at some point in the program.  If they all do so at once, then the
-- result is a deadlock.&lt;/p&gt;
-- META-END
SELECT 
   OBJID(LOCKHELD) &quot;Held&quot;,
   OBJID(LOCKACQUIRED) &quot;Acquired&quot;,
   OBJID(THREAD) &quot;Thread&quot;,
   COUNT &quot;Count__(add-commas)(r)&quot;,
   FIRSTTIME &quot;First Acquired&quot;,
   LASTTIME &quot;Last Acquired&quot;,
   LOCKHELD &quot;LockHeld&quot;,
   LOCKACQUIRED &quot;LockAcquired&quot;
FROM
   LOCKCYCLETHREAD
WHERE COMPONENT = ?Cycle?</query>
  <query id="24d17dda-b3a0-4044-ae41-6dc224af24e5" description="What are the lock traces?" revision="1" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What are the lock traces?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all lock traces that were present at a given row in the parent query.  Each line corresponds to a different lock trace.&lt;/p&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-are-the-lock-traces.png&quot; alt=&quot;What are the lock traces?&quot;/&gt;
-- META-END
SELECT
   LS.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   LS.CLASSNAME   &quot;Class&quot;,
   LS.CLASSCODE   &quot;Class__(icon)&quot;,
   LS.ATLINE      &quot;Line__|&quot;,
   LS.LOCKTRACE   &quot;LOCKTRACE__(hide)&quot;,
   ?Multiple?     &quot;Multiple__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.TRACE = ?ATRACE? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       TR.ID = L.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
          A.TRACE = ?ATRACE? AND
          ALH.ACCESS = A.ID AND
          L.LOCKEVENT = ALH.LASTACQUISITION AND
          LE.ID = ALH.LASTACQUISITION AND
          TR.ID = LE.TRACE AND
          S.ID = TR.SITE AND
          CO.ID = S.INCLASS) LS
ORDER BY LS.PACKAGENAME,LS.CLASSNAME,LS.ATLINE</query>
  <query id="a187f1bf-273e-4495-90e1-0fcd1c85eccb" description="What are the lock traces?" revision="1" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What are the lock traces?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all lock traces that were present at a given row in the parent query.  Each line corresponds to a different lock trace.&lt;/p&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-are-the-lock-traces.png&quot; alt=&quot;What are the lock traces?&quot;/&gt;
-- META-END
SELECT
   LS.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   LS.CLASSNAME   &quot;Class&quot;,
   LS.CLASSCODE   &quot;Class__(icon)&quot;,
   LS.ATLINE      &quot;Line__|&quot;,
   LS.LOCKTRACE   &quot;LOCKTRACE__(hide)&quot;,
   ?Multiple?     &quot;Multiple__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.TRACE = ?ATRACE? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       TR.ID = L.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
          A.TRACE = ?ATRACE? AND
          ALH.ACCESS = A.ID AND
          L.LOCKEVENT = ALH.LASTACQUISITION AND
          LE.ID = ALH.LASTACQUISITION AND
          TR.ID = LE.TRACE AND
          S.ID = TR.SITE AND
          CO.ID = S.INCLASS) LS
ORDER BY LS.PACKAGENAME,LS.CLASSNAME,LS.ATLINE</query>
  <query id="02475ce2-0b3a-47e9-9200-e4f6e864aa3b" description="What are the lock traces?" revision="2" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What are the lock traces?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all lock traces that were present at a given row in the parent query.  Each line corresponds to a different lock trace.&lt;/p&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-are-the-lock-traces.png&quot; alt=&quot;What are the lock traces?&quot;/&gt;
-- META-END
SELECT
   LS.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   LS.CLASSNAME   &quot;Class&quot;,
   LS.CLASSCODE   &quot;Class__(icon)&quot;,
   LS.ATLINE      &quot;Line__|&quot;,
   LS.LOCKTRACE   &quot;LOCKTRACE__(hide)&quot;,
   ?Multiple?     &quot;Multiple__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.TRACE = ?ATRACE? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       L.LOCK = ?Lock? AND
       TR.ID = L.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
          A.TRACE = ?ATRACE? AND
          ALH.ACCESS = A.ID AND
          L.LOCKEVENT = ALH.LASTACQUISITION AND
          L.LOCKHELD = ?Lock? AND
          LE.ID = ALH.LASTACQUISITION AND
          TR.ID = LE.TRACE AND
          S.ID = TR.SITE AND
          CO.ID = S.INCLASS) LS
ORDER BY LS.PACKAGENAME,LS.CLASSNAME,LS.ATLINE</query>
  <query id="00c978ca-dd0c-4b32-a651-293510b3bffa" description="What are the lock traces?" revision="3" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What are the lock traces?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all lock traces that were present at a given row in the parent query.  Each line corresponds to a different lock trace.&lt;/p&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-are-the-lock-traces.png&quot; alt=&quot;What are the lock traces?&quot;/&gt;
-- META-END
SELECT
   LS.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   LS.CLASSNAME   &quot;Class&quot;,
   LS.CLASSCODE   &quot;Class__(icon)&quot;,
   LS.ATLINE      &quot;Line__|&quot;,
   LS.LOCKTRACE   &quot;LOCKTRACE__(hide)&quot;,
   ?Multiple?     &quot;Multiple__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.TRACE = ?ATRACE? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       L.LOCK = ?Lock? AND
       TR.ID = L.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
          A.TRACE = ?ATRACE? AND
          ALH.ACCESS = A.ID AND
          L.LOCKEVENT = ALH.LASTACQUISITION AND
          L.LOCKHELD = ?Lock? AND
          LE.ID = ALH.LASTACQUISITION AND
          TR.ID = LE.TRACE AND
          S.ID = TR.SITE AND
          CO.ID = S.INCLASS) LS
ORDER BY LS.PACKAGENAME,LS.CLASSNAME,LS.ATLINE</query>
  <query id="cdc2d460-b17f-43bc-8cc6-4c26f1637fda" description="What fields (non-static) are shared after object construction?" revision="9" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No non-static fields are shared between two or more threads after object construction.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (non-static) are shared after object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Lists all the non-static fields that were shared between threads after object
--     creation. Provides some summary information about the number of reads and
--     writes of each field, as well as how many shared objects are created that
--     contain this field.  
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads During Construction&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Instances&lt;/td&gt;
--       &lt;td&gt;The number of shared objects that contain this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-are-shared-after-object-construction.png&quot; alt=&quot;What fields (non-static) are shared after object construction?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  MAX(FIRC.RC) &quot;Instances__(add-commas)(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(add-commas)(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO, 
     (SELECT FIELD, COUNT(DISTINCT RECEIVER) &quot;RC&quot; FROM FIELDINSTANCETHREAD GROUP BY FIELD) AS FIRC,
     FIELDINSTANCESHARED SHARED
where
  F.DeclaringType = O.Id
  and FI.FIELD = F.ID 
  and FI.FIELD = SHARED.FIELD
  and FI.RECEIVER = SHARED.RECEIVER
  and THO.ID = FI.Thread
  and FIRC.FIELD = F.ID
group by O.PackageName,O.ClassName,O.ClassCode,F.FieldName,F.Code,F.Id
order by O.PackageName,O.ClassName,F.FieldName
</query>
  <query id="33868960-7df8-4bab-bb33-ffb230957940" description="What fields (non-static) are shared during object construction?" type="ERROR" revision="14" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No fields are accessed by multiple threads during construction
-- META-END
-- META-BEGIN(empty-is-good-news)
-- No fields are accessed by multiple threads during construction
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Some fields are accessed by multiple threads during construction
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (non-static) are shared during object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Fields that are accessed by more than one thread before their enclosing
--    object has finished construction run the risk of being seen in an
--    uninitialized state.  This query displays any fields that were
--    accessed by two or more threads before construction ended.  It also provides
--    some summary information about the number of reads and writes of each field,
--    as well as how many shared objects are created that contain this field and exhibit this behavior.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads During Construction&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this
--       field made while the owning object was under
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this
--       field made while the owning object was under
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Instances&lt;/td&gt;
--       &lt;td&gt;The number of shared objects that contain this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-are-shared-during-object-construction.png&quot; alt=&quot;What fields (non-static) are shared during object construction?&quot;/&gt;
-- 
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  COUNT(FI.Receiver) &quot;Instances__(add-commas)(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(add-commas)(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from BADPUBLISH B,
     OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO
where
  F.ID = B.FIELD
  and F.DeclaringType = O.Id
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
group by O.PackageName,O.ClassName,O.ClassCode,F.FieldName,F.Code,F.Id
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id="bd72a5e4-42aa-415d-aa72-28d351f629a4" description="What fields (non-static) are shared?" revision="24" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No non-static fields are shared between two or more threads.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (non-static) are shared?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Lists all the non-static fields that were shared between threads. Provides
--     some summary information about the number of reads and writes of each field,
--     as well as how many shared objects are created that contain this field.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads During Construction&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Instances&lt;/td&gt;
--       &lt;td&gt;The number of shared objects that contain this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-are-shared.png&quot; alt=&quot;What fields (non-static) are shared?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  MAX(FIRC.RC) &quot;Instances__(add-commas)(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(add-commas)(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO, 
     (SELECT FIELD, COUNT(DISTINCT RECEIVER) &quot;RC&quot; FROM FIELDINSTANCETHREAD GROUP BY FIELD) AS FIRC
where
  F.DeclaringType = O.Id
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
  and FIRC.FIELD = F.ID
group by O.PackageName,O.ClassName,O.ClassCode,F.FieldName,F.Id,F.Code
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id="213c73ad-b3f6-4aef-9a05-f0c31d8fdcde" description="What fields (non-static) have a non-empty lock set after object construction?" revision="18" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No non-final non-volatile non-static fields that are shared after object construction have a common lock held for each access
-- META-END
-- META-BEGIN(result-is-good-news)
-- Shared fields have a common lock held for each access
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (non-static) have a non-empty lock set after object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists all the non-static fields with a non-empty lock set that were accessed
--    by more than one thread in the program after object construction.  Any reads
--    or writes to the field during object construction are not considered.  A lock
--    set guarantees that the field&apos;s data can not be invalidated by a race
--    condition.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instances w/Non-Empty Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;The number of objects observed to have a lock set on this field&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Instances w/Empty Lock Set&lt;/td&gt;
--           &lt;td&gt;The number of objects observed to have no lock set on this field&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-have-a-non-empty-lock-set-after-object-construction.png&quot; alt=&quot;What fields (non-static) have a non-empty lock set after object construction?&quot;/&gt;
-- META-END(doc)
SELECT 
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  FI.Code &quot;Field__(icon)&quot;,
  LS.COUNT &quot;Instances w/Non-Empty Lock Set__(add-commas)(r)&quot;,
  NOLS.COUNT &quot;Instances w/Empty Lock Set__(r)(add-commas)&quot;,
  FI.ID &quot;FieldId__(hide)&quot;
FROM
   OBJECT O
   INNER JOIN
   FIELD FI ON FI.DECLARINGTYPE = O.ID
   INNER JOIN
   (SELECT 
      I.FIELD,
      COUNT(DISTINCT I.RECEIVER) &quot;COUNT&quot;
   FROM 
      INTERESTINGFIELD I, 
      FIELDINSTANCELOCKSET F 
   WHERE 
      F.FIELD = I.FIELD AND 
      F.RECEIVER = I.RECEIVER
   GROUP BY I.FIELD) LS ON LS.FIELD = FI.ID
   LEFT OUTER JOIN
   (SELECT
      I.FIELD,
      COUNT(DISTINCT I.RECEIVER) &quot;COUNT&quot;
   FROM
      INTERESTINGFIELD I LEFT OUTER JOIN
      FIELDINSTANCELOCKSET F ON F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER
   WHERE
      F.LOCK IS NULL AND I.RECEIVER IS NOT NULL
   GROUP BY I.FIELD) NOLS ON NOLS.FIELD = FI.ID
ORDER BY O.PACKAGENAME,O.CLASSNAME,FI.FIELDNAME

</query>
  <query id="d4d2af9b-ce4d-4457-9e94-01972fcb58d3" description="What fields (non-static) have an empty lock set after object construction?" type="ERROR" revision="21" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- All non-final non-volatile non-static fields that are shared after object construction have a common lock held for each access
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Shared fields have no common lock held for each access
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (non-static) have an empty lock set after object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists all the non-static fields with an empty lock set that were accessed
--    by more than one thread in the program after object construction.  Any reads
--    or writes to the field during object construction are not considered.  A lock
--    set guarantees that the field&apos;s data can not be invalidated by a race
--    condition.  An empty lock set means that Flashlight can provide no such guarantee.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instances w/Non-Empty Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;The number of objects observed to have a lock set on this field&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Instances w/Empty Lock Set&lt;/td&gt;
--           &lt;td&gt;The number of objects observed to have an empty lock set on this field&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-have-an-empty-lock-set-after-object-construction.png&quot; alt=&quot;What fields (non-static) have an empty lock set after object construction?&quot;/&gt;
-- META-END(doc)
SELECT 
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  FI.Code &quot;Field__(icon)&quot;,
  LS.COUNT &quot;Instances w/Non-Empty Lock Set__(add-commas)(r)&quot;,
  NOLS.COUNT &quot;Instances w/Empty Lock Set__(add-commas)(r)&quot;,
  FI.ID &quot;FieldId__(hide)&quot;
FROM
   OBJECT O
   INNER JOIN
   FIELD FI ON FI.DECLARINGTYPE = O.ID
   INNER JOIN
   (SELECT
      I.FIELD,
      COUNT(DISTINCT I.RECEIVER) &quot;COUNT&quot;
   FROM
      INTERESTINGFIELD I LEFT OUTER JOIN
      FIELDINSTANCELOCKSET F ON F.FIELD = I.FIELD AND F.RECEIVER = I.RECEIVER
   WHERE
      F.LOCK IS NULL AND I.RECEIVER IS NOT NULL
   GROUP BY I.FIELD) NOLS ON NOLS.FIELD = FI.ID
   LEFT OUTER JOIN
   (SELECT 
      I.FIELD,
      COUNT(DISTINCT I.RECEIVER) &quot;COUNT&quot;
   FROM 
      INTERESTINGFIELD I, 
      FIELDINSTANCELOCKSET F 
   WHERE 
      F.FIELD = I.FIELD AND 
      F.RECEIVER = I.RECEIVER
   GROUP BY I.FIELD) LS ON LS.FIELD = FI.ID
ORDER BY O.PACKAGENAME,O.CLASSNAME,FI.FIELDNAME
</query>
  <query id="eabad207-22a7-4bb0-a7e1-30946d02ea13" description="What fields (non-static) have writes that do not happen-before subsequent reads?" type="ERROR" revision="10" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- All shared non-static field writes happen-before subsequent reads 
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Shared fields have writes that do not happen-before subsequent reads 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (non-static) have writes that do not happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that could not be shown to have a happens-before relationship
-- to every read of a field in the program from the previous write of that field.  There is an automatic happens-before relationship between consecutive accesses of a field in the same thread, but when the write and subsequent read of the field are in two differen threads Flashlight must check for any of the following conditions in order to guarantee that a happens-before relationship exists:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;p&gt;
-- Flashlight checks every field in the program for happens-before relations.  If there are any writes found that do not happen-before subsequent reads they will be found by this query.  
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;1&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Count&lt;/td&gt;
--       &lt;td&gt;The number of instances of this field where all writes do not happen-before subsequent reads.&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-have-writes-that-do-not-happen-before-subsequent-reads.png&quot; alt=&quot;What fields (non-static) have writes that do not happen-before subsequent reads?&quot; /&gt;
-- META-END
SELECT 
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME   &quot;Class&quot;,
   CO.CLASSCODE   &quot;Class__(icon)&quot;,
   F.FIELDNAME    &quot;Field__|&quot;,
   F.CODE         &quot;Field__(icon)&quot;,
   COUNT(B.RECEIVER) &quot;Count__(add-commas)(r)&quot;,
   F.ID           &quot;FieldId__(hide)&quot;
FROM 
   BADHAPPENSBEFORE B,
   FIELD F,
   OBJECT CO
WHERE
   F.ID = B.FIELD AND 
   CO.ID = F.DECLARINGTYPE AND
   B.RECEIVER IS NOT NULL
GROUP BY CO.PACKAGENAME,CO.CLASSNAME,CO.CLASSCODE,F.FIELDNAME,F.CODE,F.ID</query>
  <query id="1b191e96-598f-4d1f-9391-5d9feed0da69" description="What fields (non-static) have writes that happen-before subsequent reads?" revision="9" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No shared non-static field writes happen-before subsequent reads 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (non-static) have writes that happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that can be shown to have a happens-before relationship between every consecutive access in the program.  There is an automatic happens-before relationship between consecutive accesses of a field in the same thread, but when the write and subsequent read of the field are in two differen threads Flashlight must check for any of the following conditions in order to guarantee that a happens-before relationship exists:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;p&gt;
-- Flashlight checks every field in the program for happens-before relations.  If &lt;strong&gt;every&lt;/strong&gt; read of a field can be shown to have a happen-before relationship from the previous write, then the field will be reported in this query.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;1&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Count&lt;/td&gt;
-- 	  &lt;td&gt;The number of instances of this field where all writes happen-before subsequent reads.&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-have-writes-that-happen-before-subsequent-reads.png&quot; alt=&quot;What fields (non-static) have writes that happen-before subsequent reads?&quot; /&gt;
-- META-END
SELECT 
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME   &quot;Class&quot;,
   CO.CLASSCODE   &quot;Class__(icon)&quot;,
   F.FIELDNAME    &quot;Field__|&quot;,
   F.CODE         &quot;Field__(icon)&quot;,
   COUNT(FI.RECEIVER) &quot;Count__(add-commas)(r)&quot;,
   F.ID           &quot;FieldId__(hide)&quot;
FROM 
   FIELDINSTANCESHARED FI
   LEFT OUTER JOIN INTERESTINGFIELD IF ON IF.FIELD = FI.FIELD AND IF.RECEIVER = FI.RECEIVER
   INNER JOIN FIELD F ON F.ID = FI.FIELD
   INNER JOIN OBJECT CO ON CO.ID = F.DECLARINGTYPE
   LEFT OUTER JOIN BADHAPPENSBEFORE B ON B.FIELD = FI.FIELD AND B.RECEIVER = FI.RECEIVER
WHERE
   B.FIELD IS NULL OR (IF.FIELD IS NULL AND F.VOLATILE = &apos;Y&apos;)
GROUP BY CO.PACKAGENAME,CO.CLASSNAME,CO.CLASSCODE,F.FIELDNAME,F.CODE,F.ID</query>
  <query id="71a6fb5b-e5e1-4d25-bdc8-67ab5df1f66e" description="What fields (non-static, non-final) are shared?" revision="15" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No non-static fields are shared between two or more threads.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (non-static, non-final) are shared?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Lists all the non-static, non-final fields that were shared between
--     threads. Provides some summary information about the number of reads and
--     writes of each field, as well as how many shared objects are created that
--     contain this field.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads During Construction&lt;/td&gt;
--       &lt;td&gt;The read count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The write count of all shared instances of this field during
--       construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Instances&lt;/td&gt;
--       &lt;td&gt;The number of shared objects that contain this
--       field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-non-static-non-final-are-shared.png&quot; alt=&quot;What fields (non-static, non-final) are shared?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  MAX(FIRC.RC) &quot;Instances__(add-commas)(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(add-commas)(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO, 
     (SELECT FIELD, COUNT(DISTINCT RECEIVER) &quot;RC&quot; FROM FIELDINSTANCETHREAD GROUP BY FIELD) AS FIRC
where
  F.DeclaringType = O.Id
  and F.Final = &apos;N&apos;
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
  and FIRC.FIELD = F.ID
group by O.PackageName,O.ClassName,O.ClassCode,F.FieldName,F.Code,F.Id
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" description="What fields (static) are shared?" revision="22" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No static fields are shared between two or more threads.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (static) are shared?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Lists all the static fields that were shared between threads. Provides some
--     summary information about the number of reads and writes of each field.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;3&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Read Count&lt;/td&gt;
--       &lt;td&gt;The number of observed reads&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Write Count&lt;/td&gt;
--       &lt;td&gt;The number of observed writes&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-static-are-shared.png&quot; alt=&quot;What fields (static) are shared?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__]&quot;,
  F.Code &quot;Field__(icon)&quot;,
  THO.ThreadName &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
  FS.ReadCount &quot;Read Count__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FS.WriteCount &quot;Write Count__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  THO.ThreadName &quot;Threads Involved__(add-commas)(count distinct replace-value-with &apos; &apos;)(r)&quot;,
  THO.ID &quot;Thread__(hide)&quot;,
  F.ID &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and FS.FIELD = F.ID 
  and THO.ID = FS.Thread
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query id="2f505921-50fb-405b-bc78-4a5fe9228957" description="What fields (static) have a non-empty lock set? " revision="16" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No non-final non-volatile static fields that are shared have a common lock held for each access.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (static) have a non-empty lock set? 
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists all the static fields with a non-empty lock set that were accessed by
--    more than one thread in the program after object construction.  All of the
--    locks that make up the field&apos;s lock set are also displayed.  A lock set is
--    the set of locks that were held for every observed read and write of a
--    particular field in the program, and a non-empty lock set guarantees that the
--    field&apos;s data can not be invalidated by a race condition.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Lock&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-static-have-a-non-empty-lock-set.png&quot; alt=&quot;What fields (static) have a non-empty lock set?&quot;/&gt;
-- META-END
SELECT 
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  FI.FieldName &quot;Field&quot;,
  FI.Code &quot;Field__(icon)&quot;,
  OBJID(F.LOCK) &quot;Lock__|&quot;,
  F.LOCK &quot;Lock__(hide)&quot;,
  I.FIELD &quot;FieldId__(hide)&quot; 
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID
 INNER JOIN FIELDLOCKSET F ON F.FIELD = I.FIELD
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query id="c744b5b5-15f0-4f72-a344-7e52bcac5071" description="What fields (static) have an empty lock set?" type="ERROR" revision="16" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- All non-final non-volatile static fields that are shared have a common lock held for each access.
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Shared static fields have no common lock held for each access
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (static) have an empty lock set?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Lists all the static fields with an empty lock set that were accessed by more
--    than one thread in the program after object construction.  A lock set is the
--    set of locks that were held for every observed read and write of a particular
--    field in the program. A lock set guarantees that the field&apos;s data can not be
--    invalidated by a race condition. An empty lock set means that Flashlight can
--    provide no such guarantee.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Lock&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-static-have-an-empty-lock-set.png&quot; alt=&quot;What fields (static) have an empty lock set?&quot;/&gt;
-- META-END
SELECT 
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  FI.FieldName &quot;Field__|&quot;,
  FI.Code &quot;Field__(icon)&quot;,
  I.FIELD &quot;FieldId__(hide)&quot;
 FROM OBJECT O
 INNER JOIN FIELD FI ON FI.DeclaringType = O.Id
 INNER JOIN INTERESTINGFIELD I ON I.RECEIVER IS NULL AND I.FIELD=FI.ID
 LEFT OUTER JOIN FIELDLOCKSET F ON F.FIELD = I.FIELD
 WHERE F.LOCK IS NULL
 ORDER BY O.PackageName,O.ClassName,FI.FieldName</query>
  <query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e" description="What fields (static) have writes that do not happen-before subsequent reads?" type="ERROR" revision="10" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- All shared static field writes happen-before subsequent reads 
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Shared static fields have writes that do not happen-before subsequent reads 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (static) have writes that do not happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that could not be shown to have a happens-before relationship
-- to every read of a field in the program from the previous write of that field.
-- There is an automatic happens-before relationship between consecutive accesses
-- of a field in the same thread, but when the write and subsequent read of the
-- field are in two differen threads Flashlight must check for any of the following
-- conditions in order to guarantee that a happens-before relationship exists:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;p&gt;
-- Flashlight checks every field in the program for happens-before relations.  If
-- there are any writes found that do not happen-before subsequent reads they will
-- be found by this query.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-fields-static-have-writes-that-do-not-happen-before-subsequent-reads.png&quot; alt=&quot;What fields (static) have writes that do not happen-before subsequent reads?&quot; /&gt;
-- META-END
SELECT 
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME   &quot;Class&quot;,
   CO.CLASSCODE   &quot;Class__(icon)&quot;,
   F.FIELDNAME    &quot;Field__|&quot;,
   F.CODE         &quot;Field__(icon)&quot;,
   F.ID           &quot;FieldId__(hide)&quot;
FROM 
   BADHAPPENSBEFORE B,
   FIELD F,
   OBJECT CO
WHERE
   F.ID = B.FIELD AND 
   CO.ID = F.DECLARINGTYPE AND
   B.RECEIVER IS NULL
ORDER BY 1,2,4</query>
  <query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2" description="What fields (static) have writes that happen-before subsequent reads?" revision="9" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No shared static field writes happen-before subsequent reads 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields (static) have writes that happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that can be shown to have a happens-before relationship between every consecutive access in the program.  There is an automatic happens-before relationship between consecutive accesses of a field in the same thread, but when the write and subsequent read of the field are in two differen threads Flashlight must check for any of the following conditions in order to guarantee that a happens-before relationship exists:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;p&gt;
-- Flashlight checks every field in the program for happens-before relations.  If &lt;strong&gt;every&lt;/strong&gt; read of a field can be shown to have a happen-before relationship from the previous write, then the field will be reported in this query.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-static-have-writes-that-happen-before-subsequent-reads.png&quot; alt=&quot;What fields (static) have writes that happen-before subsequent reads?&quot; /&gt;
-- 
-- META-END
 SELECT 
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME   &quot;Class&quot;,
   CO.CLASSCODE   &quot;Class__(icon)&quot;,
   F.FIELDNAME    &quot;Field__|&quot;,
   F.CODE         &quot;Field__(icon)&quot;,
   F.ID           &quot;FieldId__(hide)&quot;
FROM 
   FIELD F 
   LEFT OUTER JOIN INTERESTINGFIELD IF ON F.ID = IF.FIELD
   INNER JOIN OBJECT CO ON CO.ID = F.DECLARINGTYPE
   LEFT OUTER JOIN BADHAPPENSBEFORE B ON B.FIELD = IF.FIELD
WHERE
   F.STATIC = &apos;Y&apos; AND ((IF.FIELD IS NOT NULL AND B.FIELD IS NULL) OR (IF.FIELD IS NULL AND F.VOLATILE = &apos;Y&apos;))
ORDER BY 1,2,4</query>
  <query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691" description="What fields (static, non-final) are shared?" revision="17" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No static, non-final fields are shared between two or more threads.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields (static, non-final) are shared?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Lists all the static, non-final fields that were shared between threads. Provides some
--     summary information about the number of reads and writes of each field.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;3&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Read Count&lt;/td&gt;
--       &lt;td&gt;The number of observed reads&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Write Count&lt;/td&gt;
--       &lt;td&gt;The number of observed writes&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Threads Involved&lt;/td&gt;
--       &lt;td&gt;The number of threads involved in accessing all
--       shared instances of this field&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-static-non-final-are-shared.png&quot; alt=&quot;What fields (static, non-final) are shared?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__]&quot;,
  F.Code &quot;Field__(icon)&quot;,
  THO.ThreadName &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
  FS.ReadCount &quot;Read Count__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FS.WriteCount &quot;Write Count__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  THO.ThreadName &quot;Threads Involved__(add-commas)(count distinct replace-value-with &apos; &apos;)(r)&quot;,
  THO.ID &quot;Thread__(hide)&quot;,
  F.ID &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and F.Final = &apos;N&apos;
  and FS.FIELD = F.ID 
  and THO.ID = FS.Thread
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query id="7cbeb2e0-994d-481e-ab2e-8413b13a417b" description="What fields are accessed in this thread?" revision="11" display="true">-- META-BEGIN(no-rows)
-- No non-static fields were accessed in this thread
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields are accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that were accessed at some point in the given thread.
-- &lt;/p&gt;
-- 
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of all shared instances of this
-- 	  field made in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of all shared instances of this
-- 	  field made in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads During Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of all shared instances of this field made in this
-- 	  thread while the owning object was under construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes During Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of all shared instances of this field made in this
-- 	  thread while the owning object was under construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Instances&lt;/td&gt;
-- 	  &lt;td&gt;The number of shared objects that contain this
-- 	  field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;In Thread&lt;/td&gt;
-- 	  &lt;td&gt;The thread in which these accesses took place&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-are-accessed-in-this-thread.png&quot; alt=&quot;What fields are accessed in this thread?&quot;/&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2)(r)&quot;,
  MAX(FIRC.RC) &quot;Instances__(add-commas)(r)&quot;,
  OBJID(?Thread?) &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDINSTANCETHREAD FI,
     OBJECT THO, 
     (SELECT FIELD, COUNT(DISTINCT RECEIVER) &quot;RC&quot; FROM FIELDINSTANCETHREAD GROUP BY FIELD) AS FIRC
where
  F.DeclaringType = O.Id
  and FI.FIELD = F.ID 
  and THO.ID = FI.Thread
  and FIRC.FIELD = F.ID
  AND FI.THREAD = ?Thread?
group by O.PackageName,O.ClassName,O.ClassCode,F.FieldName,F.Id,F.Code
order by O.PackageName,O.ClassName,F.FieldName</query>
  <query id="ae0f22d4-2f02-47f0-8745-8fa60024eda4" description="What fields are protected by this lock, and how often?" revision="11" display="true">-- META-BEGIN(no-rows)
-- No accesses occur while this lock is held 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields are protected by this lock, and how often?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all fields that are protected by the target lock.  The query also
-- indicates how many instances of the field have a lock set and thus can be shown
-- to have been free of data races during this run of the program.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;% w/Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;The percentage of objects containing this field that were shown to have a lock set for this run of the program &lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;The name of the lock&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Instances w/Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;The number of objects containing this field that were shown to have a lock set for this run of the program&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Instances&lt;/td&gt;
-- 	  &lt;td&gt;The number of objects containing this field in the program&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses, across all objects, that happened while the given lock was held&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses, across all objects, that were observed in this run of the program&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-fields-are-protected-by-this-lock-and-how-often.png&quot; alt=&quot;What fields are protected by this lock, and how often?&quot; /&gt;
-- META-END
SELECT DT.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
       DT.CLASSNAME &quot;Class&quot;,
       DT.CLASSCODE &quot;Class__(icon)&quot;,
       F.FIELDNAME &quot;Field__|&quot;,
       F.CODE &quot;Field__(icon)&quot;,
       CAST ((CAST (CASE WHEN LOCKSETS.COUNT IS NULL THEN 0 ELSE LOCKSETS.COUNT END AS FLOAT) / CAST (COUNT(DISTINCT A.RECEIVER) AS FLOAT) * 100) AS DECIMAL) &quot;% w/Lock Set__(suffix &apos;%&apos;)(r)&quot;,
       OBJID(?Lock?) &quot;Lock__(&apos;lock.gif&apos;)&quot;,
       LOCKSETS.COUNT &quot;Instances w/Lock Set__(add-commas)(r)&quot;,
       COUNT(DISTINCT A.RECEIVER) &quot;Instances__(add-commas)(r)&quot;,
       FA.HELD &quot;Accesses With Lock Held__(add-commas)(r)&quot;, 
       COUNT(A.ID) &quot;Total Accesses__(add-commas)(r)&quot;,
       F.ID &quot;FieldId__(hide)&quot;,
       ?Lock? &quot;Lock__(hide)&quot;
FROM 
 (SELECT A.FIELD, COUNT(DISTINCT A.ID) &quot;HELD&quot; FROM
  (SELECT ALH.ACCESS FROM LOCK L, ACCESSLOCKSHELD ALH
   WHERE L.LOCK = ?Lock? AND ALH.LASTACQUISITION = L.ID 
    UNION
  SELECT ALH.ACCESS FROM LOCKSHELD LH, ACCESSLOCKSHELD ALH
   WHERE LH.LOCKHELD = ?Lock? AND ALH.LASTACQUISITION = LH.LOCKEVENT) AS AIDS, ACCESS A, FIELD F
  WHERE A.ID = AIDS.ACCESS AND F.ID = A.FIELD
  GROUP BY A.FIELD) AS FA
  INNER JOIN FIELD F ON F.ID = FA.FIELD
  INNER JOIN ACCESS A ON A.FIELD = F.ID
  INNER JOIN OBJECT DT ON DT.ID = F.DECLARINGTYPE
  LEFT OUTER JOIN (
   SELECT FIELD, COUNT(DISTINCT RECEIVER) &quot;COUNT&quot; FROM FIELDINSTANCELOCKSET GROUP BY FIELD
  ) LOCKSETS ON LOCKSETS.FIELD = FA.FIELD
WHERE F.STATIC = &apos;N&apos;
GROUP BY DT.PACKAGENAME,DT.CLASSNAME,DT.CLASSCODE,F.FIELDNAME,F.CODE,F.ID,FA.HELD,LOCKSETS.COUNT
ORDER BY 1,2,4
</query>
  <query id="976506a9-cf85-4907-8d7f-2fd9b5a28d6d" description="What fields are read by the AWT Event Dispatch Thread and written in others?" type="ERROR" revision="11" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No fields read by the AWT Event Dispatch Thread were modified outside of it
-- META-END
-- NOTE: We do not want a &quot;good news&quot; msg because the program may not use AWT/Swing
-- META-BEGIN(result-is-bad-news)
-- Fields read by the AWT Event Dispatch Thread were modified outside of it
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What fields are read by the AWT Event Dispatch Thread and written in others?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    The Swing and AWT libraries mandate that all modifications
--    to their components happen in the AWT Event Dispatch Thread.
--    Flashlight does not currently instrument the Swing and AWT
--    libraries, so it cannot detect all violations of this
--    policy.  What this query provides is a synopsis of all of
--    your program&apos;s fields that are read while in the AWT Event
--    Dispath Thread but modified outside it.  This can give you a
--    general idea as to what portions of the program interact
--    with Swing and AWT and can help identify violations of the
--    threading policy.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of all shared instances of this
-- 	  field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of all shared instances of this
-- 	  field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads During Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of all shared instances of this
-- 	  field made while the owning object was under
-- 	  construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes During Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of all shared instances of this
-- 	  field made while the owning object was under
-- 	  construction&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Instances&lt;/td&gt;
-- 	  &lt;td&gt;The number of shared objects that contain this
-- 	  field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Threads Involved&lt;/td&gt;
-- 	  &lt;td&gt;The number of threads involved in accessing all
-- 	  shared instances of this field&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-are-read-by-the-awt-edt-and-written-in-others.png&quot; /&gt;
-- 
-- &lt;p&gt;
-- The above example shows seven fields that are read both inside and outsied of
-- the AWT Event Dispatch Thread.  We can see from the &lt;em&gt;Threads Involved&lt;/em&gt;
-- column that two different threads, one being the AWT Event Dispatch Thread,
-- accessed these fields in the &lt;code&gt;ChatTestClient&lt;/code&gt; class. 
-- &lt;/p&gt;
-- META-END
SELECT 
  O.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
  O.CLASSNAME &quot;Class&quot;,
  O.CLASSCODE &quot;Class__(icon)&quot;,
  F.FIELDNAME &quot;Field__|&quot;,
  F.CODE &quot;Field__(icon)&quot;,
  SUM(FI.ReadUCCount) + SUM(FI.ReadCount) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) + SUM(FI.WriteCount) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.ReadUCCount) &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  SUM(FI.WriteUCCount) &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  COUNT(DISTINCT THO.ThreadName) &quot;Threads Involved__(add-commas)(r)&quot;,
  F.Id &quot;FieldId__(hide)&quot;
FROM
(SELECT DISTINCT A.FIELD,A.RECEIVER
FROM OBJECT O, ACCESS A
WHERE O.FLAG=&apos;T&apos; AND 
      O.THREADNAME LIKE &apos;AWT-EventQueue%&apos; AND
      A.INTHREAD = O.ID AND
      A.RECEIVER IS NOT NULL
INTERSECT
SELECT DISTINCT A.FIELD,A.RECEIVER
FROM OBJECT O, ACCESS A
WHERE O.FLAG=&apos;T&apos; AND 
      O.THREADNAME NOT LIKE &apos;AWT-EventQueue%&apos; AND
      A.INTHREAD = O.ID AND
      A.RECEIVER IS NOT NULL AND
      A.RW = &apos;W&apos;) AS MIXEDAWT,OBJECT O,FIELD F, FIELDINSTANCETHREAD FI, OBJECT THO
WHERE F.ID = MIXEDAWT.FIELD AND 
      F.VOLATILE = &apos;N&apos; AND 
      O.ID = F.DECLARINGTYPE AND
      FI.FIELD = MIXEDAWT.FIELD AND
      FI.RECEIVER = MIXEDAWT.RECEIVER AND
      THO.ID = FI.Thread
GROUP BY O.PACKAGENAME,O.CLASSNAME,O.CLASSCODE,F.FIELDNAME,F.CODE,F.ID
ORDER BY O.PACKAGENAME,O.CLASSNAME,F.FIELDNAME
</query>
  <query id="2d58b103-1e04-4161-b6da-c96a553e39d0" description="What fields could produce false sharing with this field in the object?" revision="10" display="true">--META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What fields could produce false sharing with this field in the object?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Displays all fields that interact with the selected field during the period of
-- time the analysis suspected false sharing might be occurring.  Each row
-- represents the interaction between the selected thread, labeled
-- &lt;code&gt;Field&lt;/code&gt;, and an interleaving thread, labeled
-- &lt;code&gt;Interleaver&lt;/code&gt;.  During this period of time the selected field is
-- accessed exclusively in one thread, but the interleaving field may be accessed
-- in one or more other threads.  An &quot;interleaving percentage&quot; is displayed for
-- each row.  The two fields are considered to interleave with each other every
-- time the next field access occurs in a different thread.  An interleaving
-- percentage of 100 would indicate that every single field access occurred in a
-- different thread than the previous one.  In general, a higher interleaving
-- percentage indicates a higher risk that false sharing will impact the
-- performance of the program.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Interleaver&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the interleaving field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the interleaving field&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Interleaving %&lt;/td&gt;
-- 	  &lt;td&gt;The percent of accesses that happened in a different thread than the previous access&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;First Access&lt;/td&gt;
-- 	  &lt;td&gt;The start time for this block of accesses&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Last Access&lt;/td&gt;
-- 	  &lt;td&gt;The stop time for this block of accesses&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-fields-could-produce-false-sharing-with-this-field-in-the-object.png&quot; alt=&quot;What fields could produce false sharing with this field in the object?&quot; /&gt;
--META-END
SELECT
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME &quot;Class&quot;,
   CO.CLASSCODE &quot;Class__(icon)&quot;,
   OBJID(B.RECEIVER) &quot;Object&quot;,
   F.FIELDNAME &quot;Field&quot;,
   F.CODE &quot;Field__(icon)&quot;,
   RF.FIELDNAME &quot;Interleaver&quot;,
   RF.CODE &quot;Interleaver__(icon)&quot;,
   OBJID(B.INTHREAD) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   B.READS &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   B.WRITES &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   B.QUOTIENT &quot;Interleaving %__(suffix &apos;%&apos;)(r)&quot;,
   B.START &quot;First Access&quot;,
   B.STOP &quot;Last Access&quot;,
   B.RECEIVER &quot;Receiver__(hide)&quot;,
   RF.FIELDNAME &quot;Field__(hide)&quot;,
   F.ID &quot;FieldId__(hide)&quot;,
   RF.ID &quot;RFieldId__(hide)&quot;
FROM 
   FIELDBLOCKSTATS B, 
   FIELD F,
   FIELD RF,
   OBJECT CO
WHERE
   F.ID = B.FIELD AND
   CO.ID = F.DECLARINGTYPE AND 
   RF.ID = B.RFIELD AND
   B.START = &apos;?First Access?&apos; AND
   B.STOP = &apos;?Last Access?&apos;
ORDER BY
   CO.PACKAGENAME,
   CO.CLASSNAME,
   B.RECEIVER,
   F.FIELDNAME,
   RF.FIELDNAME</query>
  <query id="dd2ea83c-1940-4985-ace7-a578471e3b54" description="What happens before edges allow these field reads to see the previous write?" revision="16" display="true">-- META-BEGIN(no-rows)
-- No happens before edges were detected.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What happens before edges allow these field reads to see the previous write?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all happens-before edges that ensure that any changes in the previous
-- access block are visible to this access block.  The edge guarantees that actions
-- taken before the source time in the source thread are visible by the target time
-- in the target thread.  If no happens-before edges are present, that means that
-- Flashlight could not detect any sort of happens-before relationship between
-- these two access blocks.  If writes in the first access block were expected to
-- be visible in the second this could indicate a problem with the application.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;9&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Type&lt;/td&gt;
--       &lt;td&gt;The type of happens-before edge observed.  This will be one of:
--             &lt;ul&gt;
--               &lt;li&gt;The previous write was in this thread.&lt;/li&gt;
--               &lt;li&gt;Volatile write/read of field&lt;/li&gt;
--               &lt;li&gt;The name of a concurrency utility such as those found in java.util.concurrent&lt;/li&gt;
--               &lt;li&gt;Class initialization&lt;/li&gt;
--               &lt;li&gt;A lock release to a lock acquisition&lt;/li&gt;
--             &lt;/ul&gt;
--       &lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Thread&lt;/td&gt;
--       &lt;td&gt;The originating thread for this happens-before edge&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Time&lt;/td&gt;
--       &lt;td&gt;All accesses in the source thread made before this time are affected by this edge&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Class&lt;/td&gt;
--       &lt;td&gt;The originating object&apos;s class for this happens-before edge&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Method&lt;/td&gt;
--       &lt;td&gt;The method invoked on the originating object for this happens-before edge&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Target Thread&lt;/td&gt;
--       &lt;td&gt;The target thread for this happens-before edge&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Target Time&lt;/td&gt;
--       &lt;td&gt;The time at which changes made in the source thread become visible to the target thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Class&lt;/td&gt;
--       &lt;td&gt;The target object&apos;s class&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Source Method&lt;/td&gt;
--       &lt;td&gt;The method invoked on the target object&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-happens-before-edges-allow-these-field-reads-to-see-the-previous-write.png&quot; alt=&quot;What happens before edges allow these fields to see the previous write?&quot; /&gt;
-- META-END
SELECT 
HB.ID &quot;Type&quot;,
OBJID(?LastWriteThread?) &quot;Source Thread__(&apos;thread.gif&apos;)&quot;,
HB.SOURCETS &quot;Source Time&quot;,
SCO.CLASSNAME &quot;Source Class&quot;,
SCO.CLASSCODE &quot;Source Class__(icon)&quot;,
SS.LOCATION &quot;Source Method&quot;,
SS.LOCATIONCODE &quot;Source Method__(icon)&quot;,
OBJID(?ThreadId?) &quot;Target Thread__(&apos;thread.gif&apos;)&quot;,
HB.TRACETS &quot;Target Time&quot;,
TCO.CLASSNAME &quot;Target Class&quot;,
TCO.CLASSCODE &quot;Target Class__(icon)&quot;,
TS.LOCATION &quot;Target Method&quot;,
TS.LOCATIONCODE &quot;Target Method__(icon)&quot;,
HB.SOURCEID &quot;SOURCEID__(hide)&quot;,
HB.TRACEID &quot;TRACEID__(hide)&quot;,
HB.SOURCETS &quot;SOURCETS__(hide)&quot;,
HB.TRACETS &quot;TRACETS__(hide)&quot;,
?HasHappensBefore? &quot;HasHappensBefore__(hide)&quot;
FROM TABLE (HAPPENSBEFOREEDGES(?LastWriteThread?, &apos;?LastWriteTime?&apos;,?ThreadId?,&apos;?First Access?&apos;)) HB
   INNER JOIN TRACE ST ON ST.ID = HB.SOURCEID
   INNER JOIN SITE SS ON SS.ID = ST.SITE 
   INNER JOIN OBJECT SCO ON SCO.ID = SS.INCLASS
   LEFT OUTER JOIN TRACE TT ON TT.ID = HB.TRACEID
   LEFT OUTER JOIN SITE TS ON TS.ID = TT.SITE
   LEFT OUTER JOIN OBJECT TCO ON TCO.ID = TS.INCLASS</query>
  <query id="649dff6b-1e60-4c03-8118-d98d93a9f586" description="What instances contain this field and are accessed in this thread?" revision="16" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What instances contain this field and are accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that is accessed in the given thread.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;In Thread&lt;/td&gt;
--           &lt;td&gt;The name of the given thread&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-are-accessed-in-this-thread.png&quot; alt=&quot;What instances contain this field and are accessed in this thread?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       OBJID(?Thread?) &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
       CASE WHEN EXISTS (SELECT * FROM FIELDINSTANCELOCKSET WHERE FIELD = ?FieldId? AND RECEIVER = COUNTS.RECEIVER) THEN &apos;Non-Empty&apos; ELSE &apos;Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;
 FROM 
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? AND THREAD = ?Thread?
    GROUP BY RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT RECEIVER, COUNT(LOCK) &quot;COUNT&quot; 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS LOCKS
  ON COUNTS.RECEIVER = LOCKS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE</query>
  <query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" description="What instances contain this field and are protected by this lock?" revision="2" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What instances contain this field and are protected by this lock?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that is accessed while the given lock is held.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;10&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;tr&gt;
--        &lt;td&gt;Field&lt;/td&gt;
--        &lt;td&gt;The field name&lt;/td&gt;
--      &lt;/tr&gt;
--      &lt;tr&gt;
--        &lt;td&gt;Lock&lt;/td&gt;
--        &lt;td&gt;The name of the given lock&lt;/td&gt;
--      &lt;/tr&gt;
--      &lt;tr&gt;
--        &lt;td&gt;% w/ Lock Held&lt;/td&gt;
--        &lt;td&gt;The percentage of field accesses in this object that took place while the given lock was held&lt;/td&gt;
--      &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;tr&gt;
--        &lt;td&gt;Times Lock Held While Accessed&lt;/td&gt;
--        &lt;td&gt;The number of field accesses in this object that took place while the given lock was held&lt;/td&gt;
--      &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-are-protected-by-this-lock.png&quot; alt=&quot;What instances contain this field and are protected by this lock?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       OBJID(?Lock?)          &quot;Lock__(&apos;lock.gif&apos;)&quot;,
       CAST ((CAST (FA.HELD AS FLOAT) / CAST (COUNTS.READS + COUNTS.WRITES AS FLOAT) * 100) AS DECIMAL) &quot;% w/ Lock Held__(suffix &apos;%&apos;)(r)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       FA.HELD &quot;Times Lock Held While Accessed&quot;,
       CASE WHEN LS.RECEIVER IS NULL THEN &apos;Empty&apos; ELSE &apos;Non-Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;,
       ?Lock? &quot;Lock__(hide)&quot;
 FROM 
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT DISTINCT RECEIVER 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId?) AS LS ON LS.RECEIVER = COUNTS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
  INNER JOIN
  (SELECT A.FIELD, A.RECEIVER, COUNT(DISTINCT A.ID) &quot;HELD&quot; FROM
    (SELECT ALH.ACCESS FROM LOCK L, ACCESSLOCKSHELD ALH
     WHERE L.LOCK = ?Lock? AND ALH.LASTACQUISITION = L.ID 
     UNION
     SELECT ALH.ACCESS FROM LOCKSHELD LH, ACCESSLOCKSHELD ALH
     WHERE LH.LOCKHELD = ?Lock? AND ALH.LASTACQUISITION = LH.LOCKEVENT
     ) AS AIDS, ACCESS A
   WHERE A.ID = AIDS.ACCESS AND A.FIELD = ?FieldId?
   GROUP BY A.FIELD,A.RECEIVER
  ) AS FA ON FA.RECEIVER = COUNTS.RECEIVER</query>
  <query id="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" description="What instances contain this field and are shared after object construction?" revision="14" display="true">--- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What instances contain this field and are shared after object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that are accessed by more than one thread after the object has been constructed.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-are-shared-after-object-construction.png&quot; alt=&quot;What instances contain this field and are shared after object construction?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       CASE WHEN LOCKS.COUNT IS NULL THEN &apos;Empty&apos; ELSE &apos;Non-Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;
 FROM 
  (SELECT T.RECEIVER, SUM(T.READCOUNT) &quot;READS&quot;, SUM(T.WRITECOUNT) &quot;WRITES&quot;, SUM(T.READUCCOUNT) &quot;READSUC&quot;, SUM(T.WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD T, FIELDINSTANCESHARED S
    WHERE T.FIELD = ?FieldId? AND S.FIELD = T.FIELD AND S.RECEIVER = T.RECEIVER
    GROUP BY T.RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT RECEIVER, COUNT(LOCK) &quot;COUNT&quot; 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS LOCKS
  ON COUNTS.RECEIVER = LOCKS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE</query>
  <query id="708d1b8a-5274-4a25-b0b4-67f1a7a86690" description="What instances contain this field and are shared during object construction?" type="ERROR" revision="22" display="true">-- META-BEGIN(no-rows)
-- No instances of this field are accessed by multiple threads during object construction.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What instances contain this field and are shared during object construction?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--    Fields that are accessed by more than one thread before their enclosing
--    object has finished construction run the risk of being seen in an
--    uninitialized state.  This query lists all objects containing an instance 
--    of this field that is accessed by more than one thread before the object is 
--    fully initialized.
-- &lt;/p&gt;
-- &lt;p&gt;
--    It is important to note that this query does not prove that a
--    field was improperly published.  It may be that there
--    is a happens-before event of some sort between the writes and any subsequent reads for
--    each field.  This would be the case if a thread was initialized in a
--    constructor and &lt;code&gt;this&lt;/code&gt; was passed into the new thread.  If
--    the state of &lt;code&gt;this&lt;/code&gt; is not modified afterwards, then there is
--    no danger that the program will behave unexpectedly.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-are-shared-during-object-construction.png&quot; alt=&quot;What instances contain this field and are shared during object construction?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       CASE WHEN LOCKS.COUNT IS NULL THEN &apos;Empty&apos; ELSE &apos;Non-Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;
 FROM BADPUBLISH BP
  INNER JOIN
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS COUNTS
  ON COUNTS.RECEIVER = BP.RECEIVER AND BP.FIELD = ?FieldId?
  LEFT OUTER JOIN
  (SELECT RECEIVER, COUNT(LOCK) &quot;COUNT&quot; 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS LOCKS
  ON COUNTS.RECEIVER = LOCKS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE</query>
  <query id="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" description="What instances contain this field and have a non-empty lock set?" revision="6" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What instances contain this field and have a non-empty lock set?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field with a non-empty lock set.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-have-a-non-empty-lock-set.png&quot; alt=&quot;What instances contain this field and have a non-empty lock set?&quot; /&gt;
-- META-END
SELECT OBJID(FIT.RECEIVER) &quot;Instance&quot;,
       MAX(CO.CLASSCODE)   &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;           &quot;Field&quot;,
       &apos;?Field (Image)?&apos;   &quot;Field__(icon)&quot;,
       SUM(FIT.READCOUNT) + SUM(FIT.READUCCOUNT) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       SUM(FIT.WRITECOUNT) + SUM(FIT.WRITEUCCOUNT) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.READUCCOUNT) &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.WRITEUCCOUNT) &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       &apos;Non-Empty&apos; &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       FIT.RECEIVER &quot;Receiver__(hide)&quot;,
       ?Instances w/Non-Empty Lock Set? &quot;Required__(hide)&quot;
 FROM FIELDINSTANCETHREAD FIT 
 INNER JOIN INTERESTINGFIELD IF 
   ON IF.FIELD = FIT.FIELD AND
      IF.RECEIVER = FIT.RECEIVER
 INNER JOIN 
   (SELECT DISTINCT FIELD, RECEIVER
    FROM FIELDINSTANCELOCKSET) FIL ON FIL.FIELD = FIT.FIELD AND
                                      FIL.RECEIVER = FIT.RECEIVER
 INNER JOIN
  OBJECT O ON O.ID = FIT.RECEIVER
 INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
 WHERE FIT.FIELD = ?FieldId?
 GROUP BY FIT.RECEIVER
 ORDER BY 1</query>
  <query id="5224d411-6ed3-432f-8b91-a1c43df22911" description="What instances contain this field and have an empty lock set?" type="ERROR" revision="15" display="true">
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What instances contain this field and have an empty lock set?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field with an empty lock set.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-have-an-empty-lock-set.png&quot; alt=&quot;What instances contain this field and have and empty lock set?&quot; /&gt;
-- META-END
SELECT OBJID(FIT.RECEIVER) &quot;Instance&quot;,
       MAX(CO.CLASSCODE)   &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;           &quot;Field&quot;,
       &apos;?Field (Image)?&apos;   &quot;Field__(icon)&quot;,
       SUM(FIT.READCOUNT) + SUM(FIT.READUCCOUNT) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       SUM(FIT.WRITECOUNT) + SUM(FIT.WRITEUCCOUNT) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.READUCCOUNT) &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.WRITEUCCOUNT) &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       &apos;Empty&apos; &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       FIT.RECEIVER &quot;Receiver__(hide)&quot;,
       ?Instances w/Empty Lock Set? &quot;Required__(hide)&quot;
 FROM FIELDINSTANCETHREAD FIT 
 INNER JOIN INTERESTINGFIELD IF 
   ON IF.FIELD = FIT.FIELD AND
      IF.RECEIVER = FIT.RECEIVER
 LEFT OUTER JOIN FIELDINSTANCELOCKSET FIL 
   ON FIL.FIELD = FIT.FIELD AND
      FIL.RECEIVER = FIT.RECEIVER
 INNER JOIN
  OBJECT O ON O.ID = FIT.RECEIVER
 INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
 WHERE FIT.FIELD = ?FieldId? AND FIL.LOCK IS NULL
 GROUP BY FIT.RECEIVER
 ORDER BY 1</query>
  <query id="5af0591d-f8d5-490f-bfc2-ebf5237559bd" description="What instances contain this field and have writes that do not happen-before subsequent reads?" type="ERROR" revision="15" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--	What instances contain this field and have writes that do not happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that could not be shown to have 
-- a happens-before relationship from every write of the field to subsequent reads.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-have-writes-that-do-not-happen-before-subsequent-reads.png&quot; alt=&quot;What instances contain this field and have writes that do not happen-before subsequent reads??&quot; /&gt;
-- META-END
SELECT OBJID(FIT.RECEIVER) &quot;Instance&quot;,
       MAX(CO.CLASSCODE)   &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;           &quot;Field&quot;,
       &apos;?Field (Image)?&apos;   &quot;Field__(icon)&quot;,
       SUM(FIT.READCOUNT) + SUM(FIT.READUCCOUNT) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       SUM(FIT.WRITECOUNT) + SUM(FIT.WRITEUCCOUNT) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.READUCCOUNT) &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.WRITEUCCOUNT) &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       ?FieldId? &quot;FieldId__(hide)&quot;,
       FIT.RECEIVER &quot;Receiver__(hide)&quot;
 FROM FIELDINSTANCETHREAD FIT 
 INNER JOIN INTERESTINGFIELD IF 
   ON IF.FIELD = FIT.FIELD AND
      IF.RECEIVER = FIT.RECEIVER
 INNER JOIN BADHAPPENSBEFORE B 
   ON B.FIELD = FIT.FIELD AND
      B.RECEIVER = FIT.RECEIVER
 INNER JOIN
  OBJECT O ON O.ID = FIT.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
 WHERE FIT.FIELD = ?FieldId?
 GROUP BY FIT.RECEIVER
 ORDER BY 1</query>
  <query id="daa91c44-420a-4860-bcdc-970842110ccb" description="What instances contain this field and have writes that happen-before subsequent reads?" revision="16" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--	What instances contain this field and have writes that happen-before subsequent reads?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that could be shown to have 
-- a happens-before relationship from every write of the field to subsequent reads.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;tr&gt;
--        &lt;td&gt;Field&lt;/td&gt;
--        &lt;td&gt;The field name&lt;/td&gt;
--      &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-and-have-writes-that-happen-before-subsequent-reads.png&quot; alt=&quot;What instances contain this field and have writes that happen-before subsequent reads?&quot; /&gt;
-- META-END
SELECT OBJID(FIT.RECEIVER) &quot;Instance&quot;,
       MAX(CO.CLASSCODE)   &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;           &quot;Field&quot;,
       &apos;?Field (Image)?&apos;   &quot;Field__(icon)&quot;,
       SUM(FIT.READCOUNT) + SUM(FIT.READUCCOUNT) &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       SUM(FIT.WRITECOUNT) + SUM(FIT.WRITEUCCOUNT) &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.READUCCOUNT) &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       SUM(FIT.WRITEUCCOUNT) &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       ?FieldId? &quot;FieldId__(hide)&quot;,
       FIT.RECEIVER &quot;Receiver__(hide)&quot;
 FROM FIELD F 
 INNER JOIN FIELDINSTANCESHARED FIS
   ON FIS.FIELD = F.ID
 INNER JOIN FIELDINSTANCETHREAD FIT
   ON FIT.FIELD = FIS.FIELD AND
      FIT.RECEIVER = FIS.RECEIVER
 LEFT OUTER JOIN INTERESTINGFIELD IF 
   ON IF.FIELD = FIT.FIELD AND
      IF.RECEIVER = FIT.RECEIVER
 LEFT OUTER JOIN BADHAPPENSBEFORE B 
   ON B.FIELD = FIT.FIELD AND
      B.RECEIVER = FIT.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = FIT.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
 WHERE 
   F.ID = ?FieldId? AND 
   (B.RECEIVER IS NULL OR (IF.FIELD IS NULL AND F.VOLATILE = &apos;Y&apos;))
 GROUP BY FIT.RECEIVER
 ORDER BY 1</query>
  <query id="ce9de85b-d3af-4de5-b9aa-38fba9503876" description="What instances contain this field when it is read by the AWT Event Dispatch Thread and written in others?" revision="3" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What instances contain this field when it is read by the AWT Event Dispatch Thread and written in others?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field that is read in the AWT
-- Event Dispatch Thread, but written in others.  The Swing and AWT libraries
-- mandate that all modifications to their components happen in the AWT Event
-- Dispatch Thread. Instances that show up in this query and are part of the
-- Swing/AWT user interface potentially violate this policy.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field-when-it-is-read-by-the-awt-event-dispatch-thread-and-written-in-others.png&quot; alt=&quot;What instances contain this field when it is read by the AWT Event Dispatch Thread and written in others?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       CASE WHEN LS.RECEIVER IS NULL THEN &apos;Empty&apos; ELSE &apos;Non-Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;
 FROM 
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT DISTINCT RECEIVER 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId?) AS LS ON LS.RECEIVER = COUNTS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE
  INNER JOIN 
  (SELECT A.RECEIVER
     FROM OBJECT O, ACCESS A
     WHERE O.FLAG = &apos;T&apos; AND
           O.THREADNAME LIKE &apos;AWT-EventQueue%&apos; AND
           A.INTHREAD = O.ID AND
           A.RECEIVER IS NOT NULL
   INTERSECT  
   SELECT A.RECEIVER
   FROM OBJECT O, ACCESS A
   WHERE O.FLAG=&apos;T&apos; AND 
         O.THREADNAME NOT LIKE &apos;AWT-EventQueue%&apos; AND
         A.INTHREAD = O.ID AND
         A.RECEIVER IS NOT NULL AND
         A.RW = &apos;W&apos;) MIXEDAWT ON MIXEDAWT.RECEIVER = COUNTS.RECEIVER
</query>
  <query id="6d8d0985-0830-4f18-a655-fa7b43703d5f" description="What instances contain this field?" revision="22" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What instances contain this field?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects containing an instance of this field.
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;8&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Instance&lt;/td&gt;
-- 	  &lt;td&gt;An object identifier&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Field&lt;/td&gt;
--           &lt;td&gt;The field name&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Reads Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The read count of the field on this object while it was
-- 	  being initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes Under Construction&lt;/td&gt;
-- 	  &lt;td&gt;The write count of the field on this object while it was being
-- 	  initialized&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock Set&lt;/td&gt;
-- 	  &lt;td&gt;Either &lt;code&gt;Empty&lt;/code&gt; or &lt;code&gt;Non-empty&lt;/code&gt;, depending on whether or not the field has a lock set in this instance&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-instances-contain-this-field.png&quot; alt=&quot;What instances contain this field?&quot; /&gt;
-- META-END
SELECT OBJID(COUNTS.RECEIVER) &quot;Instance&quot;,
       CO.CLASSCODE           &quot;Instance__(icon)&quot;,
       &apos;?Field?&apos;              &quot;Field&quot;,
       &apos;?Field (Image)?&apos;      &quot;Field__(icon)&quot;,
       COUNTS.READS + COUNTS.READSUC &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
       COUNTS.WRITES + COUNTS.WRITESUC &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       COUNTS.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;, 
       CASE WHEN LS.RECEIVER IS NULL THEN &apos;Empty&apos; ELSE &apos;Non-Empty&apos; END &quot;Lock Set&quot;,
       ?FieldId? &quot;FieldId__(hide)&quot;,
       COUNTS.RECEIVER &quot;Receiver__(hide)&quot;
 FROM 
  (SELECT RECEIVER, SUM(READCOUNT) &quot;READS&quot;, SUM(WRITECOUNT) &quot;WRITES&quot;, SUM(READUCCOUNT) &quot;READSUC&quot;, SUM(WRITEUCCOUNT) &quot;WRITESUC&quot; 
    FROM FIELDINSTANCETHREAD 
    WHERE FIELD = ?FieldId? 
    GROUP BY RECEIVER) AS COUNTS
  LEFT OUTER JOIN
  (SELECT DISTINCT RECEIVER 
    FROM FIELDINSTANCELOCKSET 
    WHERE FIELD = ?FieldId?) AS LS ON LS.RECEIVER = COUNTS.RECEIVER
  INNER JOIN
  OBJECT O ON O.ID = COUNTS.RECEIVER
  INNER JOIN
  OBJECT CO ON CO.ID = O.TYPE</query>
  <query id="a3dcb49f-7586-42af-808c-9906c4ae1d03" description="What instances of this class are indirectly accessed by more than one thread?" revision="6" display="true">--BEGIN-INFO
--&lt;p&gt;&lt;strong&gt;
--    What instances of this class are indirectly accessed by more than one thread?
--&lt;/strong&gt;&lt;/p&gt;
--&lt;p&gt;
--    Lists the objects in this class called by more than one thread, and
--    gives a breakdown of the accesses made by each thread.
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
--	&lt;tr&gt;
--	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;Tree-Table&lt;/td&gt;
--	&lt;/tr&gt;
--	&lt;tr&gt;
--	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;&lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--	&lt;/tr&gt;
--	&lt;tr&gt;
--	  &lt;td rowspan=&quot;1&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;Accesses&lt;/td&gt;
--	  &lt;td&gt;The number of times this object was indirectly accessed
--	  in this thread&lt;/td&gt;
--	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
--&lt;/p&gt;
--&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
--&lt;img src=&quot;what-instances-of-this-class-are-indirectly-accessed-by-more-than-one-thread.png&quot; /&gt;
--&lt;p&gt;
--The above example lists the one instance of &lt;code&gt;HashSet&lt;/code&gt; that
--was indirectly accessed by more than one thread in this Flashlight run.
--The &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;Thread-4&lt;/code&gt;, &lt;code&gt;Thread-2&lt;/code&gt;, and
--&lt;code&gt;Thread-5&lt;/code&gt; threads were all observed to indirectly access
--this particular &lt;code&gt;HashSet&lt;/code&gt;.
--&lt;/p&gt;
--
--END-INFO
SELECT
   OBJID(IA.RECEIVER) &quot;Object&quot;, THO.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;, COUNT (IA.ID) &quot;Accesses__(add-commas)(r)&quot;, IA.RECEIVER &quot;Receiver__(hide)&quot;
FROM 
  (SELECT IA.RECEIVER 
   FROM OBJECT C, OBJECT R, INDIRECTACCESS IA
   WHERE C.PACKAGENAME = &apos;?Package?&apos; AND
         C.CLASSNAME = &apos;?Class?&apos; AND
         R.TYPE = C.ID AND 
         IA.RECEIVER = R.ID
   GROUP BY IA.RECEIVER
   HAVING COUNT(DISTINCT IA.INTHREAD) &gt; 1) AS R, 
  INDIRECTACCESS IA,
  OBJECT THO
WHERE IA.RECEIVER = R.RECEIVER AND
      THO.ID = IA.INTHREAD
GROUP BY IA.RECEIVER, THO.THREADNAME
ORDER BY 1, 3 DESC

</query>
  <query id="30f37c1b-4a34-4eff-8bca-b76566b216c3" description="What is the lock trace?" revision="6" display="true">-- META-BEGIN(disable-column-sort)
-- Rows from a trace should not be reordered.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What is the lock trace?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists the locks held at a particular point in the program.  A lock trace is
-- similar to a stack trace, but instead of nested method calls it shows nested
-- lock acquisitions in order from most recent to least recent.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--           &lt;td&gt;Lock&lt;/td&gt;
--           &lt;td&gt;A lock name&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Package&lt;/td&gt;
--           &lt;td&gt;The package the lock was acquired in&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Class&lt;/td&gt;
--           &lt;td&gt;The class the lock was acquired in&lt;/td&gt;
--         &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Location&lt;/td&gt;
-- 	  &lt;td&gt;The source location the lock was acquired in, usually a method name&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
-- 	  &lt;td&gt;Line&lt;/td&gt;
-- 	  &lt;td&gt;The line of code in the class the lock was acquired in&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-is-the-lock-trace.png&quot; alt=&quot;What is the lock trace?&quot; /&gt;
-- &lt;p&gt;
-- In the above example, three locks have been acquired.  &lt;code&gt;Thread-3&lt;/code&gt; was the first lock acquired at line 110 of ClientHandler, while &lt;code&gt;Object-42&lt;/code&gt; was most recently acquired at line 50 of &lt;code&gt;Location&lt;/code&gt;.
-- &lt;/p&gt;
-- META-END
SELECT
   OBJID(LOCK)  &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   S.PACKAGENAME  &quot;Package__(&apos;package.gif&apos;)&quot;,
   S.CLASSNAME    &quot;Class&quot;,
   S.CLASSCODE    &quot;Class__(icon)&quot;,
   S.LOCATION     &quot;Location&quot;,
   S.LOCATIONCODE &quot;Location__(icon)&quot;,
   S.ATLINE       &quot;Line__(r)&quot;,
   S.LOCKTRACE    &quot;LOCKTRACE__(hide)&quot;,
   S.LOCK         &quot;Lock__(hide)&quot;,
   S.TRACE        &quot;LATRACE__(hide)&quot;
FROM 
   TABLE (LOCKTRACE(?LOCKTRACE?)) S</query>
  <query id="078a8b6c-1fad-4843-94f9-fe005eb66b73" description="What is the stack trace for this edge&apos;s source?" revision="5" display="true">-- META-BEGIN(disable-column-sort)
-- Rows from a trace should not be reordered.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What is the stack trace for this edge&apos;s source?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Generates a stack trace of the method calls leading up to the source of this
--     happens-before edge, from newest to oldest.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Package&lt;/td&gt;
--       &lt;td&gt;The package this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Class&lt;/td&gt;
--       &lt;td&gt;The class this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The location of this method call or access.  This is generally the
--       enclosing method&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Line&lt;/td&gt;
--       &lt;td&gt;The line number this method call or access occurred at&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-is-the-stack-trace-for-this-edges-source.png&quot; alt=&quot;What is the stack trace for this edge&apos;s source?&quot; /&gt;
-- META-END
SELECT s.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, s.CLASSNAME &quot;Class&quot;, s.CLASSCODE &quot;Class__(icon)&quot;, s.LOCATION &quot;Location&quot;, s.LOCATIONCODE &quot;Location__(icon)&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?SOURCEID?)) s</query>
  <query id="26461177-e0ff-4187-bdc4-31f1d256a951" description="What is the stack trace for this edge&apos;s target?" revision="6" display="true">-- META-BEGIN(disable-column-sort)
-- Rows from a trace should not be reordered.
-- META-END
-- META-BEGIN(no-rows)
-- This happens-before edge does not have a target stack trace.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What is the stack trace for this edge&apos;s target?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Generates a stack trace of the method calls leading up to the targetof this
--     happens-before edge, from newest to oldest.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Package&lt;/td&gt;
--       &lt;td&gt;The package this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Class&lt;/td&gt;
--       &lt;td&gt;The class this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The location of this method call or access.  This is generally the
--       enclosing method&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Line&lt;/td&gt;
--       &lt;td&gt;The line number this method call or access occurred at&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-is-the-stack-trace-for-this-edges-target.png&quot; alt=&quot;What is the stack trace for this edge&apos;s target?&quot; /&gt;
-- META-END
SELECT s.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, s.CLASSNAME &quot;Class&quot;, s.CLASSCODE &quot;Class__(icon)&quot;, s.LOCATION &quot;Location&quot;, s.LOCATIONCODE &quot;Location__(icon)&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?TRACEID?)) s</query>
  <query id="10477928-cf86-4416-9118-34eea8cd7e38" description="What is the stack trace?" revision="9" display="true">-- META-BEGIN(disable-column-sort)
-- Rows from a trace should not be reordered.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What is the stack trace for this edge&apos;s target?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--      Generates a stack trace of the method calls leading up to this point in the
--      program, from newest to oldest.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Package&lt;/td&gt;
--       &lt;td&gt;The package this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Class&lt;/td&gt;
--       &lt;td&gt;The class this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The location of this method call or access.  This is generally the
--       enclosing method&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Line&lt;/td&gt;
--       &lt;td&gt;The line number this method call or access occurred at&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-is-the-stack-trace.png&quot; alt=&quot;What is the stack trace?&quot; /&gt;
-- META-END
SELECT s.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, s.CLASSNAME &quot;Class&quot;, s.CLASSCODE &quot;Class__(icon)&quot;, s.LOCATION &quot;Location&quot;, s.LOCATIONCODE &quot;Location__(icon)&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?LATRACE?)) s
</query>
  <query id="83d613b3-283e-4100-9a82-e42adf107fe6" description="What is the stack trace?" revision="11" display="true">-- META-BEGIN(disable-column-sort)
-- Rows from a trace should not be reordered.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   What is the stack trace for this edge&apos;s target?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--      Generates a stack trace of the method calls leading up to this point in the
--      program, from newest to oldest.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Package&lt;/td&gt;
--       &lt;td&gt;The package this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Class&lt;/td&gt;
--       &lt;td&gt;The class this method call or access occurred in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The location of this method call or access.  This is generally the
--       enclosing method&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Line&lt;/td&gt;
--       &lt;td&gt;The line number this method call or access occurred at&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-is-the-stack-trace.png&quot; alt=&quot;What is the stack trace?&quot; /&gt;
-- META-END
SELECT s.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, s.CLASSNAME &quot;Class&quot;, s.CLASSCODE &quot;Class__(icon)&quot;, s.LOCATION &quot;Location&quot;, s.LOCATIONCODE &quot;Location__(icon)&quot;, s.ATLINE &quot;Line__(r)&quot;
FROM TABLE (STACKTRACE(?ATRACE?)) s
</query>
  <query id="d1176c97-e3b6-483b-a341-6914a6f64860" description="What kinds of objects are indirectly accessed by more than one thread?" revision="13" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No objects are indirectly accessed by more than one thread.
-- META-END
-- META-BEGIN(doc)
--&lt;p&gt;&lt;strong&gt;
--    What kinds of objects are indirectly accessed by more than one thread?
--&lt;/strong&gt;&lt;/p&gt;
--&lt;p&gt;
--    Shows all of the classes with objects that are indirectly accessed
--    by more than one thread, as well as how many threads call them and
--    how many accesses are actually made.  Flashlight can generate
--    indirect access events about an object whenever it is invoked with
--    or passed as a parameter to a particular method.  By default, it
--    does this for the collections and array manipulation methods in
--    &lt;package&gt;java.util&lt;/package&gt; and
--    &lt;classname&gt;java.lang.System&lt;/classname&gt;. For more information about
--    indirect accesses, see &lt;xref linkend=&quot;flashlight-method-files&quot; /&gt;.
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
--	&lt;tr&gt;
--	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;Tree-Table&lt;/td&gt;
--	&lt;/tr&gt;
--	&lt;tr&gt;
--	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt;&lt;/td&gt;
--	&lt;/tr&gt;
--	&lt;tr&gt;
--	  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--	  &lt;td&gt;Threads&lt;/td&gt;
--	  &lt;td&gt;The number of threads that indirectly access objects of this class&lt;/td&gt;
--	&lt;/tr&gt;
--	&lt;tr&gt;
--	  &lt;td&gt;Accesses&lt;/td&gt;
--	  &lt;td&gt;The number of indirect accesses made to objects of this class&lt;/td&gt;
--	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
--&lt;/p&gt;
--
--&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
--
--&lt;img src=&quot;what-kinds-of-objects-are-indirectly-accessed-by-more-than-one-thread.png&quot; /&gt;
--
--&lt;p&gt;
--The above example lists some of the types that were indirectly accessed
--by more than one thread.  In this Flashlight run, instances of
--&lt;code&gt;java.util.BitSet&lt;/code&gt; were accessed by two threads a total of
--1995 times.  To get a breakdown per-object, we would run the query
--&lt;code&gt;&quot;What instances of this class are indirectly accessed by more than
--one thread?&quot;&lt;/code&gt;
--&lt;/p&gt;
-- META-END
SELECT T.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, T.CLASSNAME &quot;Class__|&quot;, T.CLASSCODE &quot;Class__(icon)&quot;, COUNT(DISTINCT THO.THREADNAME) &quot;Threads__(add-commas)(&apos;thread.gif&apos;)(r)&quot;, COUNT (IA.ID) &quot;Accesses__(add-commas)(sum on 3)(r)&quot;
 FROM  (SELECT RECEIVER 
        FROM INDIRECTACCESS 
        GROUP BY RECEIVER 
        HAVING COUNT(DISTINCT INTHREAD) &gt; 1) AS R, INDIRECTACCESS IA, OBJECT O, OBJECT T, OBJECT THO
 WHERE IA.RECEIVER = R.RECEIVER AND O.ID = IA.RECEIVER AND T.ID = O.TYPE AND THO.ID = IA.INTHREAD
 GROUP BY T.PACKAGENAME, T.CLASSNAME, T.CLASSCODE
 ORDER BY 1,2,3,4</query>
  <query id="f556dcef-0e6b-480b-bc1b-eb84b3012831" description="What lock cycles could potentially cause deadlock?" type="ERROR" revision="10" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No lock cycles were observed that could cause the program to deadlock
-- META-END
-- META-BEGIN(empty-is-good-news)
-- No lock cycles were observed that could cause the program to deadlock
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Lock cycles were observed that could cause the program to deadlock
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--    What lock cycles could potentially cause deadlock?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--  Lists all detected lock cycles in the program.  In order to detect potential
--  lock cycles, Flashlight builds a directed graph of all lock acquisitions in the
--  program.  Every lock is represented by a node in the graph, and each time a
--  lock is acquired an edge is drawn from every currently held
--  lock to the acquired lock.  The edge is also tagged with the locking thread.
--  Any time this lock graph contains a simple cycle
--  constructed from edges that are tagged with different threads, this query indicates that there is
--  potential for deadlock.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--              
--              &lt;tbody&gt;
--                &lt;tr&gt;
--                  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--                  &lt;td&gt;Table&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td rowspan=&quot;2&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--                  &lt;td&gt;Cycle&lt;/td&gt;
--                  &lt;td&gt;A cycle identifier&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Number of Locks Involved&lt;/td&gt;
--                  &lt;td&gt;The number of locks involved in the cycle&lt;/td&gt;
--                &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-lock-cycles-could-potentially-cause-deadlock.png&quot; alt=&quot;What lock cycles could potentially cause deadlock?&quot; /&gt;
-- META-END
select COMPONENT &quot;Cycle__(&apos;refresh.gif&apos;)(r)&quot;, COUNT(*) &quot;Number of Locks Involved__(add-commas)(r)&quot; from 
  ( select COMPONENT, OBJID (LOCKHELD) from LOCKCYCLE
    union distinct
    select COMPONENT, OBJID (LOCKACQUIRED) from LOCKCYCLE
  )
as CYCLES
group by COMPONENT
order by COMPONENT</query>
  <query id="db55bed8-8c7a-4601-8735-577912d938ca" description="What locks are acquired by this thread?" revision="19" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What locks are acquired by this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all locks acquired by the given thread.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--              
--              &lt;tbody&gt;
--                &lt;tr&gt;
--                  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--                  &lt;td&gt;Table&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td rowspan=&quot;9&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--                  &lt;td&gt;Lock&lt;/td&gt;
--                  &lt;td&gt;The lock name&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;In Thread&lt;/td&gt;
--                  &lt;td&gt;The thread name&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Times Acquired&lt;/td&gt;
--                  &lt;td&gt;The number of times the lock was acquired in this thread&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Total Block Time&lt;/td&gt;
--                  &lt;td&gt;The total amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Average Block Time&lt;/td&gt;
--                  &lt;td&gt;The average amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Max Classes Accessed&lt;/td&gt;
--                  &lt;td&gt;The greatest number of classes accessed during a single acquisition of this lock&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;Max Packages Accessed&lt;/td&gt;
--                  &lt;td&gt;The greatest number of packages accessed during a single acquisition of this lock&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;As Intrinsic Lock&lt;/td&gt;
--                  &lt;td&gt;Whether or not the lock was acquired intrinsically, using the synchronized keywork&lt;/td&gt;
--                &lt;/tr&gt;
--                &lt;tr&gt;
--                  &lt;td&gt;As java.util.concurrent Lock&lt;/td&gt;
--                  &lt;td&gt;Whether or not the lock was acquired as a java.util.concurrent Lock&lt;/td&gt;
--                &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-locks-are-acquired-by-this-thread.png&quot; alt=&quot;What locks are acquired by this thread?&quot; /&gt;
-- META-END
SELECT 
   OBJID(LDS.Lock)     &quot;Lock__(&apos;lock.gif&apos;)(c)]&quot;,
   OBJID(LDS.InThread) &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
   LDS.COUNT       &quot;Times Acquired__(add-commas)(r)(sum on 1)&quot;,
   LDS.DURATION    &quot;Total Block Time__(human-readable-duration)(r)(sum on 1)&quot;, 
   LDS.AVERAGE     &quot;Average Block Time__(human-readable-duration)(r)&quot;,
   LDS.MAXTYPES         &quot;Max Classes Accessed__(r)(max)&quot;,
   LDS.MAXPACKAGES      &quot;Max Packages Accessed__(r)(max)&quot;,
   LDS.INTRINSIC        &quot;As Intrinsic Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.JUC              &quot;As java.util.concurrent Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.Lock            &quot;Lock__(hide)&quot;,
   LDS.InThread        &quot;Thread__(hide)&quot;
FROM 
   LOCKINFO LDS
WHERE
   LDS.INTHREAD = ?Thread?
ORDER BY 1, LDS.DURATION DESC</query>
  <query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" description="What locks are acquired?" revision="15" display="true" display-at-root="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What locks are acquired?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all locks acquired in the program.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Lock&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Times Acquired&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this lock was acquired&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Total Block Time&lt;/td&gt;
--           &lt;td&gt;The total amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Average Block Time&lt;/td&gt;
--           &lt;td&gt;The average amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Classes Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of classes accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Packages Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of packages accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As Intrinsic Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired intrinsically, using the synchronized keywork&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As java.util.concurrent Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired as a java.util.concurrent Lock&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-locks-are-acquired.png&quot; alt=&quot;What locks are acquired?&quot;/&gt;
-- META-END
SELECT 
   OBJID(LDS.Lock)     &quot;Lock__(&apos;lock.gif&apos;)(c)]&quot;,
   OBJID(LDS.InThread) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   LDS.COUNT       &quot;Times Acquired__(add-commas)(r)(sum on 1)&quot;,
   LDS.DURATION    &quot;Total Block Time__(human-readable-duration)(r)(sum on 1)&quot;, 
   LDS.AVERAGE     &quot;Average Block Time__(human-readable-duration)(r)&quot;,
   LDS.MAXTYPES         &quot;Max Classes Accessed__(r)(max)&quot;,
   LDS.MAXPACKAGES      &quot;Max Packages Accessed__(r)(max)&quot;,
   LDS.INTRINSIC        &quot;As Intrinsic Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.JUC              &quot;As java.util.concurrent Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.Lock            &quot;Lock__(hide)&quot;,
   LDS.InThread        &quot;Thread__(hide)&quot;
FROM 
   LOCKINFO LDS
ORDER BY 1, LDS.DURATION DESC</query>
  <query id="cb38a427-c259-4690-abe2-acea9661f737" description="What locks are contended for the longest time?" revision="20" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No locks were observed to be acquired during this run of the program.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What locks are contended for the longest time?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all of the locks in the program, in descending order of the average amount of time the lock blocked its acquiring thread.  Locks with a high average block time usually indicate high contention in part of your program, and may be a source of slowdown.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Lock&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Times Acquired&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this lock was acquired&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Total Block Time&lt;/td&gt;
--           &lt;td&gt;The total amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Average Block Time&lt;/td&gt;
--           &lt;td&gt;The average amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Classes Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of classes accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Packages Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of packages accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As Intrinsic Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired intrinsically, using the synchronized keywork&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As java.util.concurrent Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired as a java.util.concurrent Lock&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-locks-are-contended-for-the-longest-time.png&quot; alt=&quot;What locks are contended for the longest time?&quot; /&gt;
-- META-END
SELECT 
   OBJID(LDS.Lock)     &quot;Lock__(&apos;lock.gif&apos;)(c)]&quot;,
   OBJID(LDS.InThread) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   LDS.COUNT       &quot;Times Acquired__(add-commas)(r)(sum on 1)&quot;,
   LDS.DURATION    &quot;Total Block Time__(human-readable-duration)(r)(sum on 1)&quot;, 
   LDS.AVERAGE     &quot;Average Block Time__(human-readable-duration)(r)&quot;,
   LDS.MAXTYPES         &quot;Max Classes Accessed__(r)(max)&quot;,
   LDS.MAXPACKAGES      &quot;Max Packages Accessed__(r)(max)&quot;,
   LDS.INTRINSIC        &quot;As Intrinsic Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.JUC              &quot;As java.util.concurrent Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.Lock            &quot;Lock__(hide)&quot;,
   LDS.InThread        &quot;Thread__(hide)&quot;
FROM 
   LOCKINFO LDS,
   (SELECT LDS.LOCK, SUM(LDS.DURATION) / SUM(LDS.COUNT) &quot;AVE&quot; FROM LOCKINFO LDS GROUP BY LDS.LOCK) LDSAGG
WHERE LDSAGG.LOCK = LDS.LOCK
ORDER BY LDSAGG.AVE DESC, LDSAGG.LOCK, LDS.DURATION DESC</query>
  <query id="ae2c5715-740e-4850-a404-38bdc8cde6b6" description="What locks are held during this field access?" revision="13" display="true">-- META-BEGIN(no-rows)
-- No locks are held during this access of the field.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What locks are held during this field access?
-- &lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;p&gt;Lists all locks that were held when the access of this field took place.&lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Thread&lt;/em&gt; &amp;#8594; &lt;em&gt;Time&lt;/em&gt; &amp;#8594; &lt;em&gt;Lock&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Package&lt;/td&gt;
-- 	  &lt;td&gt;The package the lock was acquired in&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Class&lt;/td&gt;
--           &lt;td&gt;The class the lock was acquired in&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Method&lt;/td&gt;
--           &lt;td&gt;The method the lock was acquired in&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Line&lt;/td&gt;
--           &lt;td&gt;The line of code the lock was acquired in&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-locks-are-held-during-this-field-access.png&quot; alt=&quot;What locks are held during this field access?&quot; /&gt;
-- META-END
SELECT O.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)&quot;, A.TS &quot;Time&quot;, OBJID(D.Lock) &quot;Lock__(&apos;lock.gif&apos;)|&quot;, LO.PackageName &quot;Package__(&apos;@PK&apos;)&quot;, LO.ClassName &quot;Class&quot;, LO.ClassCode &quot;Class__(icon)&quot;, S.Location &quot;Method&quot;, S.LocationCode &quot;Method__(icon)&quot;, S.AtLine &quot;Line__(r)&quot;, D.ID &quot;LDID__(hide)&quot;, A.TRACE &quot;ATRACE__(hide)&quot;,L.TRACE &quot;LATRACE__(hide)&quot;,D.LOCK &quot;Lock__(hide)&quot;
 FROM ACCESS A
 INNER JOIN OBJECT O ON
   O.Id = A.InThread 
 INNER JOIN LOCKDURATION D ON
   D.InThread = A.InThread AND 
   (A.TS BETWEEN D.Start AND D.Stop)
 LEFT OUTER JOIN LOCK L ON
   L.Id = D.StartEvent
 LEFT OUTER JOIN TRACE TR ON
   TR.Id = L.TRACE
 LEFT OUTER JOIN SITE S ON
   S.Id = TR.SITE
 LEFT OUTER JOIN OBJECT LO ON
   LO.Id = S.InClass
WHERE 
   A.ID = ?AID?
ORDER BY O.THREADNAME ASC, A.TS ASC, D.Start DESC
</query>
  <query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" description="What locks are held when state in two or more packages is accessed?" revision="16" display="true" display-at-root="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What locks are held when state in two or more packages is accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all locks where state in two or more packages were accessed during a single
-- acquisition of the lock.
-- &lt;/p&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-locks-are-held-when-state-in-two-or-more-packages-is-accesssed.png&quot; alt=&quot;What locks are held when state in two or more packages is accessed?&quot; /&gt;
-- META-END
SELECT 
   OBJID(LDS.Lock)     &quot;Lock__(&apos;lock.gif&apos;)(c)]&quot;,
   OBJID(LDS.InThread) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   LDS.COUNT       &quot;Times Acquired__(add-commas)(r)(sum on 1)&quot;,
   LDS.DURATION    &quot;Total Block Time__(human-readable-duration)(r)(sum on 1)&quot;, 
   LDS.AVERAGE     &quot;Average Block Time__(human-readable-duration)(r)&quot;,
   LDS.MAXTYPES         &quot;Max Classes Accessed__(r)(max)&quot;,
   LDS.MAXPACKAGES      &quot;Max Packages Accessed__(r)(max)&quot;,
   LDS.INTRINSIC        &quot;As Intrinsic Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.JUC              &quot;As java.util.concurrent Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.Lock            &quot;Lock__(hide)&quot;,
   LDS.InThread        &quot;Thread__(hide)&quot;
FROM 
   LOCKPACKAGE LP,
   LOCKINFO LDS
WHERE 
   LDS.LOCK = LP.LOCK
ORDER BY LP.PACKAGES DESC, 1, LDS.DURATION DESC </query>
  <query id="71e04209-2ea7-4f4c-b1a0-557544a3f8fc" description="What methods directly access this field?" revision="1" display="true">SELECT DISTINCT 
   CO.PACKAGENAME &quot;Package__(&apos;package.gif&apos;)&quot;, 
   CO.CLASSNAME   &quot;Class&quot;, 
   CO.CLASSCODE   &quot;Class__(icon)&quot;,
   S.LOCATION     &quot;Method&quot;,
   S.LOCATIONCODE &quot;Method__(icon)&quot;,
   S.ATLINE       &quot;Line__|&quot;
FROM ACCESS A, TRACE T, SITE S, OBJECT CO
WHERE A.FIELD = ?FieldId? AND
      T.ID = A.TRACE AND
      S.ID = T.SITE AND
      CO.ID = S.INCLASS
ORDER BY 1,2,3</query>
  <query id="5ebba191-8523-4253-b639-872d6da4dc92" description="What objects are protected by this lock, and how often?" revision="12" display="true">-- META-BEGIN(no-rows)
-- No accesses occur while this lock is held 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What objects are protected by this lock, and how often?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all objects that are protected by the target lock.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
-- 
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The percentage of static field accesses that were made while the lock was held&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;The name of the lock&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses that happened while the given lock was held&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses that were observed in this run of the program&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-objects-are-protected-by-this-lock-and-how-often.png&quot; alt=&quot;What objects are protected by this lock, and how often?&quot; /&gt;
-- META-END

SELECT 
   DT.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, 
   DT.CLASSNAME &quot;Class&quot;, 
   DT.CLASSCODE &quot;Class__(icon)&quot;, 
   OBJID(A.RECEIVER) &quot;Object__|&quot;,
   DT.CLASSCODE &quot;Object__(icon)&quot;, 
   CAST ((CAST (IA.HELD AS FLOAT) / CAST (COUNT(A.ID) AS FLOAT) * 100) AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
   OBJID(?Lock?) &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   IA.HELD &quot;Accesses With Lock Held__(add-commas)(r)&quot;, 
   COUNT(A.ID) &quot;Total Accesses__(add-commas)(r)&quot;, 
   ?Lock? &quot;Lock__(hide)&quot;,
   A.RECEIVER &quot;Receiver__(hide)&quot;
FROM 
 (SELECT A.RECEIVER, COUNT(DISTINCT A.ID) &quot;HELD&quot; FROM
  (SELECT ALH.ACCESS FROM LOCK L, INDIRECTACCESSLOCKSHELD ALH
   WHERE L.LOCK = ?Lock? AND ALH.LASTACQUISITION = L.ID 
    UNION
  SELECT ALH.ACCESS FROM LOCKSHELD LH, INDIRECTACCESSLOCKSHELD ALH
   WHERE LH.LOCKHELD = ?Lock? AND ALH.LASTACQUISITION = LH.LOCKEVENT) AS AIDS, INDIRECTACCESS A
  WHERE A.ID = AIDS.ACCESS
  GROUP BY A.RECEIVER) AS IA, INDIRECTACCESS A, OBJECT O, OBJECT DT
WHERE A.RECEIVER = IA.RECEIVER AND O.ID = A.RECEIVER AND DT.ID = O.TYPE
GROUP BY DT.PACKAGENAME,DT.CLASSNAME,DT.CLASSCODE,A.RECEIVER,IA.HELD
ORDER BY 1,2,4

</query>
  <query id="2d506676-eb1d-455b-9256-9ea8f05352d4" description="What objects have the potential for false sharing?" revision="14" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No objects in the program were observed that could exhibit false sharing
-- META-END
-- META-BEGIN(empty-is-good-news)
-- No objects in the program were observed that could exhibit false sharing
-- META-END
-- META-BEGIN(result-is-bad-news)
-- Objects in the program may exhibit false sharing
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--  What objects have the potential for false sharing?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all objects in the program that Flashlight believes may exhibit false
--   sharing. False sharing occurs when different fields in the same object are
--   accessed mostly in separate threads during the same period of time.
--  &lt;/p&gt;
-- &lt;p&gt;
--   Flashlight identifies potential false sharing by finding periods of time where
--   a field is accessed entirely in one thread but other fields in the same object
--   are being accessed frequently in other fields.  This query displays those
--   periods of time alongside an &quot;interleaving percentage.&quot;  Other fields are
--   considered to interleave with this field every time the next field access
--   occurs in a different thread.  An interleaving percentage of 100 would
--   indicate that every single field access occurred in a different thread than
--   the previous one.  In general, a higher interleaving percentage indicates a
--   higher risk that false sharing will impact the performance of the program.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594;&lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was read in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this field was written in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
--        &lt;tr&gt;
--          &lt;td&gt;Interleaving %&lt;/td&gt;
--          &lt;td&gt;The frequency with which accesses of other fields occurred in between accesses of this field during this period of time&lt;/td&gt;
--        &lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;First Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the first field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Last Access&lt;/td&gt;
-- 	  &lt;td&gt;The time of the last field access in this block.&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-objects-have-the-potential-for-false-sharing.png&quot; alt=&quot;What objects have the potential for false sharing?&quot; /&gt;
-- META-END
SELECT
   CO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
   CO.CLASSNAME &quot;Class&quot;,
   CO.CLASSCODE &quot;Class__(icon)&quot;,
   OBJID(B.RECEIVER) &quot;Object&quot;,
   F.FIELDNAME &quot;Field&quot;,
   F.CODE &quot;Field__(icon)&quot;,
   OBJID(B.INTHREAD) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   B.READS &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   B.WRITES &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   B.QUOTIENT &quot;Interleaving %__(suffix &apos;%&apos;)(r)&quot;,
   B.START &quot;First Access&quot;,
   B.STOP &quot;Last Access&quot;,
   B.RECEIVER &quot;Receiver__(hide)&quot;
FROM 
   BLOCKSTATS B, 
   FIELD F, 
   OBJECT CO 
WHERE
   F.ID = B.FIELD AND
   CO.ID = F.DECLARINGTYPE AND
   B.QUOTIENT &gt; 24
ORDER BY
   CO.PACKAGENAME,
   CO.CLASSNAME,
   B.RECEIVER,
   F.FIELDNAME</query>
  <query id="3b8251fa-a315-4c36-a856-a53b278fdc91" description="What objects were used as both a dynamic and an intrinsic lock?" type="ERROR" revision="9" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No locks are held as both an intrinsic and a util.concurrent lock.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What objects were used as both a dynamic and an intrinsic lock?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   This query lists java.util.concurrent locks that are acquired as both an
--   intrinsic lock, using the synchronized keyword, and as a java.util.concurrent
--   lock, by calling the &lt;code&gt;lock&lt;/code&gt; method or one of its analogues.  This
--   is a fairly common mistake, usually caused by a poorly documented locking
--   policy or a simple programming error.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Lock&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Times Acquired&lt;/td&gt;
-- 	  &lt;td&gt;The number of times this lock was acquired&lt;/td&gt;
-- 	&lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Total Block Time&lt;/td&gt;
--           &lt;td&gt;The total amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Average Block Time&lt;/td&gt;
--           &lt;td&gt;The average amount of time this thread spent blocked while trying to acquire this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Classes Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of classes accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;Max Packages Accessed&lt;/td&gt;
--           &lt;td&gt;The greatest number of packages accessed during a single acquisition of this lock&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As Intrinsic Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired intrinsically, using the synchronized keywork&lt;/td&gt;
--         &lt;/tr&gt;
--         &lt;tr&gt;
--           &lt;td&gt;As java.util.concurrent Lock&lt;/td&gt;
--           &lt;td&gt;Whether or not the lock was acquired as a java.util.concurrent Lock&lt;/td&gt;
--         &lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-objects-were-used-as-both-a-dynamic-and-an-intrinsic-lock.png&quot; alt=&quot;What objects were used as both a dynamic and an intrinsic lock?&quot;/&gt;
-- META-END
SELECT 
   OBJID(LDS.Lock)     &quot;Lock__(&apos;lock.gif&apos;)(c)]&quot;,
   OBJID(LDS.InThread) &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   LDS.COUNT       &quot;Times Acquired__(add-commas)(r)(sum on 1)&quot;,
   LDS.DURATION    &quot;Total Block Time__(human-readable-duration)(r)(sum on 1)&quot;, 
   LDS.AVERAGE     &quot;Average Block Time__(human-readable-duration)(r)&quot;,
   LDS.MAXTYPES         &quot;Max Classes Accessed__(r)(max)&quot;,
   LDS.MAXPACKAGES      &quot;Max Packages Accessed__(r)(max)&quot;,
   LDS.INTRINSIC        &quot;As Intrinsic Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.JUC              &quot;As java.util.concurrent Lock__(c)(contains &apos;Yes&apos; show &apos;Yes&apos;)&quot;,
   LDS.Lock            &quot;Lock__(hide)&quot;,
   LDS.InThread        &quot;Thread__(hide)&quot;
FROM 
   (SELECT 
      LOCK 
   FROM 
      LOCK 
   WHERE STATE = &apos;AFTER ACQUISITION&apos;
   GROUP BY LOCK
   HAVING COUNT(DISTINCT TYPE) &gt; 1) MLS,
   LOCKINFO LDS
WHERE
   LDS.LOCK = MLS.LOCK
ORDER BY 1, LDS.DURATION DESC

</query>
  <query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" description="What static fields are accessed in this thread?" revision="9" display="true">-- META-BEGIN(no-rows)
-- No static fields are accessed in this thread.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What static fields are accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all static fields that were accessed at some point in the given thread.
-- &lt;/p&gt;
-- 
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--      
--      
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Reads&lt;/td&gt;
-- 	  &lt;td&gt;The number of reads to the static field in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Writes&lt;/td&gt;
-- 	  &lt;td&gt;The number of writes to the static field in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;In Thread&lt;/td&gt;
-- 	  &lt;td&gt;The thread in which these accesses took place&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-static-fields-are-accessed-in-this-thread.png&quot; alt=&quot;What static fields are accessed in this thread?&quot; /&gt;
-- META-END
select
  O.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  O.ClassName &quot;Class&quot;,
  O.ClassCode &quot;Class__(icon)&quot;,
  F.FieldName &quot;Field__|&quot;,
  F.Code &quot;Field__(icon)&quot;,
  FS.ReadCount &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FS.WriteCount &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  OBJID(?Thread?) &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
  F.ID &quot;FieldId__(hide)&quot;
from OBJECT O,
     FIELD F,
     FIELDSTATICTHREAD FS,
     OBJECT THO
where
  F.DeclaringType = O.Id
  and FS.FIELD = F.ID 
  and THO.ID = FS.Thread
  AND FS.Thread = ?Thread?
order by O.PackageName,O.ClassName,F.FieldName,THO.ThreadName</query>
  <query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" description="What static fields are protected by this lock, and how often?" revision="19" display="true">-- META-BEGIN(no-rows)
-- No accesses occur while this lock is held 
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What static fields are protected by this lock, and how often?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all static fields that are protected by the target lock.
-- &lt;/p&gt;
--  &lt;table&gt;
--    &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
-- 
--      &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;% Held&lt;/td&gt;
-- 	  &lt;td&gt;The percentage of static field accesses that were made while the lock was held&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Lock&lt;/td&gt;
-- 	  &lt;td&gt;The name of the lock&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Accesses With Lock Held&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses that happened while the given lock was held&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Total Accesses&lt;/td&gt;
-- 	  &lt;td&gt;The number of field accesses that were observed in this run of the program&lt;/td&gt;
-- 	&lt;/tr&gt;
--      &lt;/tbody&gt;
--  &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-static-fields-are-protected-by-this-lock-and-how-often.png&quot; alt=&quot;What static fields are protected by this lock, and how often?&quot; /&gt;
-- META-END
SELECT DT.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, 
       DT.CLASSNAME &quot;Class&quot;,
       DT.CLASSCODE &quot;Class__(icon)&quot;, 
       F.FIELDNAME &quot;Field__|&quot;,
       F.CODE &quot;Field__(icon)&quot;,
       CAST ((CAST (FA.HELD AS FLOAT) / CAST (COUNT(A.ID) AS FLOAT) * 100) AS DECIMAL) &quot;% Held__(suffix &apos;%&apos;)(r)&quot;,
       OBJID(?Lock?) &quot;Lock__(&apos;lock.gif&apos;)&quot;,
       FA.HELD &quot;Accesses With Lock Held__(add-commas)(r)&quot;, 
       COUNT(A.ID) &quot;Total Accesses__(add-commas)(r)&quot;,
       ?Lock? &quot;Lock__(hide)&quot;,
       F.ID &quot;FieldId__(hide)&quot;
FROM 
 (SELECT A.FIELD, COUNT(DISTINCT A.ID) &quot;HELD&quot; FROM
  (SELECT ALH.ACCESS FROM LOCK L, ACCESSLOCKSHELD ALH
   WHERE L.LOCK = ?Lock? AND ALH.LASTACQUISITION = L.ID 
    UNION
  SELECT ALH.ACCESS FROM LOCKSHELD LH, ACCESSLOCKSHELD ALH
   WHERE LH.LOCKHELD = ?Lock? AND ALH.LASTACQUISITION = LH.LOCKEVENT) AS AIDS, ACCESS A, FIELD F
  WHERE A.ID = AIDS.ACCESS AND F.ID = A.FIELD
  GROUP BY A.FIELD) AS FA, FIELD F, ACCESS A, OBJECT DT
WHERE F.ID = FA.FIELD AND A.FIELD = F.ID AND DT.ID = F.DECLARINGTYPE AND F.STATIC = &apos;Y&apos;
GROUP BY DT.PACKAGENAME,DT.CLASSNAME,DT.CLASSCODE,F.FIELDNAME,F.CODE,F.ID,FA.HELD
ORDER BY 1,2,4</query>
  <query id="8107df4c-42eb-407c-88c1-e16d805f3aaa" description="What threads access shared state in this program?" revision="10" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No threads were observed in this run of the program.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What threads access shared state in this program?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Lists all threads observed in the program.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Started&lt;/td&gt;
--       &lt;td&gt;The first time the thread was observed in Flashlight&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Finished&lt;/td&gt;
--       &lt;td&gt;The last time the thread was observed in Flashlight&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lifetime&lt;/td&gt;
--       &lt;td&gt;The length of time the thread was active&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Total Block Time&lt;/td&gt;
--       &lt;td&gt;The amount of time this thread spent blocked while waiting for a lock&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;% Blocked&lt;/td&gt;
--       &lt;td&gt;The amount of time this thread spent blocked as a percentage of its running time&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-threads-access-shared-state-in-this-program.png&quot; alt=&quot;What threads access shared state in this program?&quot;/&gt;
-- META-END
SELECT OBJID(A.INTHREAD) &quot;Thread__(&apos;thread.gif&apos;)(c)&quot;, 
 CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END &quot;Started__(r)&quot;, 
 CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END &quot;Finished__(r)&quot;,
 {fn TIMESTAMPDIFF(SQL_TSI_FRAC_SECOND, 
               CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END, 
               CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END
              )} &quot;Lifetime__(human-readable-duration)(r)&quot;,
 L.BLOCK &quot;Total Block Time__(human-readable-duration)(r)&quot;,
 CASE WHEN L.BLOCK IS NULL THEN NULL ELSE
   CAST (CAST (L.BLOCK AS FLOAT) /
   CAST ({fn TIMESTAMPDIFF(SQL_TSI_FRAC_SECOND, 
               CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END, 
               CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END
              )} AS FLOAT) * 100 AS DECIMAL(6,3) )
 END &quot;% Blocked__(r)(suffix-only-if-nonempty &apos;%&apos;)&quot;,
 A.INTHREAD &quot;Thread__(hide)&quot;
FROM
  (SELECT INTHREAD, MIN(TS) &quot;AFIRST&quot;, MAX(TS) &quot;ALAST&quot;
   FROM ACCESS
   GROUP BY INTHREAD) AS A LEFT OUTER JOIN
  (SELECT INTHREAD, MIN(START) &quot;LFIRST&quot;, MAX(STOP) &quot;LLAST&quot;,
          sum(Duration) &quot;BLOCK&quot;, 
          sum(duration) / count (startevent) as &quot;BLOCK_AVE&quot;
   FROM LOCKDURATION
   WHERE STATE = &apos;BLOCKING&apos;
   GROUP BY INTHREAD) AS L
ON A.INTHREAD = L.INTHREAD
ORDER BY 1</query>
  <query id="4e026769-1b0b-42bd-8893-f3b92add093f" description="What threads are blocked for the longest time?" revision="16" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- No locks were observed to be acquired during this run of the program.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What threads are blocked for the longest time?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all threads observed in the program, ordered by total block time.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Total Block Time&lt;/td&gt;
--       &lt;td&gt;The amount of time this thread spent blocked while waiting for a lock&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Average Block Time&lt;/td&gt;
--       &lt;td&gt;The average amount of time this thread spent waiting for a lock after it tried to acquire it&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Thread Duration&lt;/td&gt;
--       &lt;td&gt;The length of time the thread was active&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;% Blocked&lt;/td&gt;
--       &lt;td&gt;The amount of time this thread spent blocked as a percentage of its running time&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Thread Start&lt;/td&gt;
--       &lt;td&gt;The first time the thread was observed in Flashlight&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Thread Stop&lt;/td&gt;
--       &lt;td&gt;The last time the thread was observed in Flashlight&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;what-threads-are-blocked-for-the-longest-time.png&quot; alt=&quot;What threads are blocked for the longest time?&quot; /&gt;
-- META-END
SELECT OBJID(A.INTHREAD) &quot;Thread__(&apos;thread.gif&apos;)(c)&quot;, 
 CASE WHEN L.BLOCK IS NULL THEN NULL ELSE L.BLOCK END &quot;Total Block Time__(human-readable-duration)(r)&quot;,
 CASE WHEN L.BLOCK_AVE IS NULL THEN NULL ELSE L.BLOCK_AVE END &quot;Average Block Time__(human-readable-duration)(r)&quot;,
 {fn TIMESTAMPDIFF(SQL_TSI_FRAC_SECOND, 
               CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END, 
               CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END
              )} &quot;Thread Duration__(human-readable-duration)(r)&quot;,
 CASE WHEN L.BLOCK IS NULL THEN NULL ELSE
   CAST (CAST (L.BLOCK AS FLOAT) /
   CAST ({fn TIMESTAMPDIFF(SQL_TSI_FRAC_SECOND, 
               CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END, 
               CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END
              )} AS FLOAT) * 100 AS DECIMAL(6,3) )
 END &quot;% Blocked__(r)(suffix-only-if-nonempty &apos;%&apos;)&quot;,
 CASE WHEN L.LFIRST IS NULL OR A.AFIRST &lt; L.LFIRST THEN A.AFIRST ELSE L.LFIRST END &quot;Thread Start&quot;, 
 CASE WHEN L.LLAST IS NOT NULL AND A.ALAST &lt; L.LLAST THEN L.LLAST ELSE A.ALAST END &quot;Thread Stop&quot;,
 A.INTHREAD &quot;Thread__(hide)&quot;
FROM
  (SELECT INTHREAD, MIN(TS) &quot;AFIRST&quot;, MAX(TS) &quot;ALAST&quot;
   FROM ACCESS
   GROUP BY INTHREAD) AS A LEFT OUTER JOIN
  (SELECT INTHREAD, MIN(START) &quot;LFIRST&quot;, MAX(STOP) &quot;LLAST&quot;,
          sum(Duration) &quot;BLOCK&quot;, 
          sum(duration) / count (startevent) as &quot;BLOCK_AVE&quot;
   FROM LOCKDURATION
   WHERE STATE = &apos;BLOCKING&apos;
   GROUP BY INTHREAD) AS L
ON A.INTHREAD = L.INTHREAD
ORDER BY L.BLOCK DESC NULLS LAST
</query>
  <query id="a9be3802-b99c-4944-ac07-f7c948af45fd" description="What threads indirectly access this object?" revision="2" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What threads indirectly access this object?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists the threads that indirectly access this object.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--     &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Access&lt;/td&gt;
--       &lt;td&gt;The indirect access count of the object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-threads-indirectly-access-this-object.png&quot; alt=&quot;What threads indirectly access this object?&quot; /&gt;
-- META-END
SELECT 
  &apos;?Package?&apos;        &quot;Package__(&apos;@PK&apos;)&quot;,
  &apos;?Object?&apos;         &quot;Object&quot;,
  &apos;?Object (Image)?&apos; &quot;Object__(icon)&quot;,
  MAX(THO.THREADNAME)   &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
  COUNT(A.ID)     &quot;Accesses&quot;,
  MIN(A.TS)       &quot;First Access&quot;,
  MAX(A.TS)       &quot;Last Access&quot;,
  THO.ID           &quot;Thread__(hide)&quot;
FROM
   INDIRECTACCESS A,
   OBJECT THO
WHERE 
   A.RECEIVER = ?Receiver? AND
   THO.ID = A.INTHREAD
GROUP BY THO.ID</query>
  <query id="598a178b-7153-4e1c-978e-1b78b1d95799" description="What threads read and write this field?" revision="19" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What threads read and write this field?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists the threads that access this instance of the field.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--     &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Instance&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of the field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of the field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads During Construction&lt;/td&gt;
--       &lt;td&gt;The read count of the field while the instance is under construction&lt;/td&gt;
--     &lt;/tr&gt; 
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The write count of the field while the instance is under construction&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-threads-read-and-write-this-field.png&quot; alt=&quot;What threads read and write this field?&quot; /&gt;
-- META-END
SELECT 
  &apos;?Instance?&apos; &quot;Instance&quot;,
  &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
  F.FieldName     &quot;Field&quot;,
  F.Code          &quot;Field__(icon)&quot;,
  THO.ThreadName  &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
  FI.ReadCount + FI.ReadUCCount   &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FI.WriteCount + FI.WriteUCCount &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FI.ReadUCCount  &quot;Reads During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FI.WriteUCCount &quot;Writes During Construction__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  A.AMIN          &quot;First Access&quot;,
  A.AMAX          &quot;Last Access&quot;,
  THO.ID          &quot;Thread__(hide)&quot;
 FROM FIELDINSTANCETHREAD FI, OBJECT THO, FIELD F, OBJECT CO, 
      (SELECT FIELD,RECEIVER,MIN(TS) &quot;AMIN&quot;,MAX(TS) &quot;AMAX&quot; FROM ACCESS GROUP BY FIELD,RECEIVER) A
 WHERE FI.FIELD = ?FieldId? AND 
   FI.RECEIVER = ?Receiver? AND 
   THO.ID = FI.THREAD AND 
   F.ID = FI.FIELD AND
   CO.ID = F.DECLARINGTYPE AND
   A.FIELD = FI.FIELD AND
   A.RECEIVER = FI.RECEIVER</query>
  <query id="ce90be0d-9d7a-49a6-8334-c6f37112fa4b" description="What threads read and write this static field?" revision="18" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	What threads read and write this static field?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists the threads that access this static field.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--     &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The read count of the field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The write count of the field&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes During Construction&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field in this thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;what-threads-read-and-write-this-static-field.png&quot; alt=&quot;What threads read and write this static field?&quot; /&gt;
-- META-END
SELECT
  CO.PackageName &quot;Package__(&apos;@PK&apos;)&quot;,
  CO.ClassName   &quot;Class&quot;,
  CO.ClassCode   &quot;Class__(icon)&quot;,
  F.FieldName    &quot;Field&quot;,
  F.Code		 &quot;Field__(icon)&quot;,
  THO.ThreadName &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
  FI.ReadCount   &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  FI.WriteCount  &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(sum on 2,3)(r)&quot;,
  A.AMIN         &quot;First Access&quot;,
  A.AMAX         &quot;Last Access&quot;,
  THO.ID         &quot;Thread__(hide)&quot;
 FROM FIELDSTATICTHREAD FI, OBJECT THO, FIELD F, OBJECT CO, 
      (SELECT FIELD,MIN(TS) &quot;AMIN&quot;,MAX(TS) &quot;AMAX&quot; FROM ACCESS GROUP BY FIELD) A
 WHERE FI.FIELD = ?FieldId? AND 
   THO.ID = FI.THREAD AND 
   F.ID = FI.FIELD AND
   CO.ID = F.DECLARINGTYPE AND
   A.FIELD = FI.FIELD</query>
  <query id="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" description="When and by what threads was this field accessed?" revision="19" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	When and by what threads was this field accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Shows a summary of all accesses of this particular instance of the field in
-- the program.  Chronologically sequential accesses made in the same thread are
-- condensed into one entry.  Each entry in the query displays whether or not a
-- happens-before relationship exists between the first read in the entry and the
-- previous write.  A happens-before relationship will be indicated if:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The previous write was in the same thread as this read&lt;/li&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Instance&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Happens-Before&lt;/td&gt;
--       &lt;td&gt;Whether a happens-before relationship exists between the first read in this entry and the previous write&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The number of reads in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The number of writes in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads Under Construction&lt;/td&gt;
--       &lt;td&gt;The number of reads in this entry while the instance is being constructed&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes Under Conscturtion&lt;/td&gt;
--       &lt;td&gt;The number of writes in this entry while the instance is being constructed&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The time of the first access in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The time of the last access in this entry&lt;/td&gt;&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;when-and-by-what-threads-was-this-field-accessed.png&quot; alt=&quot;When and by what threads was this field accessed?&quot; /&gt;
-- META-END
SELECT 
   &apos;?Instance?&apos; &quot;Instance&quot;,
   &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
   &apos;?Field?&apos; &quot;Field&quot;,
   &apos;?Field (Image)?&apos; &quot;Field__(icon)&quot;,
   S.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   S.HAPPENSBEFORE &quot;Happens-Before&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;happens_before.gif&apos; 
         WHEN S.HAPPENSBEFORE = &apos;No&apos; THEN &apos;happens_before_no.gif&apos;
         ELSE &apos;empty.gif&apos; END &quot;Happens-Before__(icon)&quot;,
   S.READS &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITES &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.READSUC &quot;Reads Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITESUC &quot;Writes Under Construction__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.STARTTIME &quot;First Access&quot;,
   S.ENDTIME &quot;Last Access&quot;,
   S.THREADID &quot;ThreadId__(hide)&quot;,
   S.LASTWRITETIME &quot;LastWriteTime__(hide)&quot;,
   S.LASTWRITETHREAD &quot;LastWriteThread__(hide)&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;Yes&apos; ELSE NULL END &quot;HasHappensBefore__(hide)&quot;
FROM TABLE (ACCESSSUMMARY(?FieldId?, ?Receiver?)) S</query>
  <query id="1a6082af-29c0-41af-b5bc-995ec6183787" description="When and by what threads was this object indirectly accessed?" revision="11" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	When and by what threads was this object indirectly accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;p&gt;Shows a summary of all accesses of this object field in the program.
-- Chronologically sequential accesses made in the same thread are condensed into
-- one entry.  Each entry in the query displays whether or not a happens-before
-- relationship exists between the first read in the entry and the previous write.
-- A happens-before relationship will be indicated if:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The previous access was in the same thread as this access&lt;/li&gt;
--   &lt;li&gt;The previous access took place during class initialization, and this access took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;A volatile field was written to, and then read in between the two accesses&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Object&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Happens-Before&lt;/td&gt;
--       &lt;td&gt;Whether a happens-before relationship exists between the first read in this entry and the previous write&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses&lt;/td&gt;
--       &lt;td&gt;The number of object accesses&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The time of the first access in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The time of the last access in this entry&lt;/td&gt;&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;when-and-by-what-threads-was-this-object-indirectly-accessed.png&quot; alt=&quot;When and by what threads was this object indirectly accessed?&quot; /&gt;
-- META-END
SELECT 
   &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;, 
   &apos;?Object?&apos;  &quot;Object&quot;,
   &apos;?Object (Image)?&apos; &quot;Object__(icon)&quot;,
   S.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   S.HAPPENSBEFORE &quot;Happens-Before&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;happens_before.gif&apos; 
         WHEN S.HAPPENSBEFORE = &apos;No&apos; THEN &apos;happens_before_no.gif&apos;
         ELSE &apos;empty.gif&apos; END &quot;Happens-Before__(icon)&quot;,
   S.ACCESSES &quot;Accesses__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.STARTTIME &quot;First Access&quot;,
   S.ENDTIME &quot;Last Access&quot;,
   S.THREADID &quot;ThreadId__(hide)&quot;,
   S.LASTWRITETIME &quot;LastWriteTime__(hide)&quot;,
   S.LASTWRITETHREAD &quot;LastWriteThread__(hide)&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;Yes&apos; ELSE NULL END &quot;HasHappensBefore__(hide)&quot;
FROM TABLE (OBJECTSUMMARY(?Receiver?)) S</query>
  <query id="2048e73c-e95b-4e4c-84ee-2309372a7eae" description="When and by what threads was this static field accessed?" revision="16" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	When and by what threads was this static field accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Shows a summary of all accesses of this static field in the program.
-- Chronologically sequential accesses made in the same thread are condensed into
-- one entry.  Each entry in the query displays whether or not a happens-before
-- relationship exists between the first read in the entry and the previous write.
-- A happens-before relationship will be indicated if:
-- &lt;/p&gt;
-- &lt;ol&gt;
--   &lt;li&gt;The previous write was in the same thread as this read&lt;/li&gt;
--   &lt;li&gt;The write took place during class initialization, and the read took place after the class was fully initialized&lt;/li&gt;
--   &lt;li&gt;The field is volatile&lt;/li&gt;
--   &lt;li&gt;An intrinsic or java.util.concurrent lock is released and then acquired in between the two accesses&lt;/li&gt;
--   &lt;li&gt; There was a &lt;code&gt;Thread.start&lt;/code&gt; call from the writing thread to
--   create the reading thread, or a &lt;code&gt;Thread.join&lt;/code&gt; from the reading
--   thread to the writing thread&lt;/li&gt;
--   &lt;li&gt;One of the supported classes in java.util.concurrent,
--   java.util.concurrent.lock, or java.util.concurrent.atomic was used in an
--   appropriate fashion.&lt;/li&gt;
-- &lt;/ol&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Field&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Happens-Before&lt;/td&gt;
--       &lt;td&gt;Whether a happens-before relationship exists between the first read in this entry and the previous write&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Reads&lt;/td&gt;
--       &lt;td&gt;The number of reads in this entry&lt;/td&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Writes&lt;/td&gt;
--       &lt;td&gt;The number of writes in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The time of the first access in this entry&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The time of the last access in this entry&lt;/td&gt;&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;when-and-by-what-threads-was-this-static-field-accessed.png&quot; alt=&quot;When and by what threads was this static field accessed?&quot; /&gt;
-- META-END
SELECT 
   &apos;?Package?&apos; &quot;Package__(&apos;@PK&apos;)&quot;, 
   &apos;?Class?&apos; &quot;Class&quot;, 
   &apos;?Class (Image)?&apos; &quot;Class__(icon)&quot;,
   &apos;?Field?&apos; &quot;Field&quot;,
   &apos;?Field (Image)?&apos; &quot;Field__(icon)&quot;,
   S.THREADNAME &quot;Thread__(&apos;thread.gif&apos;)|&quot;,
   S.HAPPENSBEFORE &quot;Happens-Before&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;happens_before.gif&apos; 
         WHEN S.HAPPENSBEFORE = &apos;No&apos; THEN &apos;happens_before_no.gif&apos;
         ELSE &apos;empty.gif&apos; END &quot;Happens-Before__(icon)&quot;,
   S.READS &quot;Reads__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.WRITES &quot;Writes__(blank-if &apos;0&apos;)(add-commas)(r)&quot;,
   S.STARTTIME &quot;First Access&quot;,
   S.ENDTIME &quot;Last Access&quot;,
   S.THREADID &quot;ThreadId__(hide)&quot;,
   S.LASTWRITETIME &quot;LastWriteTime__(hide)&quot;,
   S.LASTWRITETHREAD &quot;LastWriteThread__(hide)&quot;,
   CASE WHEN S.HAPPENSBEFORE = &apos;Yes&apos; THEN &apos;Yes&apos; ELSE NULL END &quot;HasHappensBefore__(hide)&quot;
FROM TABLE (STATICACCESSSUMMARY(?FieldId?)) S</query>
  <query id="4fce8390-7307-45dc-b779-5701ee7f23a1" description="Where and in what threads does this lock edge occur?" revision="21" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where and in what threads does this lock edge occur?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all of the places in the program where the given lock edge occurred.
--   Each entry represents a different lock trace that involved the acquisition of
--   both locks in the edge.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Location&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt; &amp;#8594; &lt;em&gt;Trace (Occurrences by Thread)&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock Class&lt;/td&gt;
--       &lt;td&gt;The lock class&lt;/td&gt;
--     &lt;tr&gt;
--       &lt;td&gt;As&lt;/td&gt;
--       &lt;td&gt;Whether the lock was acquired as an intrinsic or java.util.concurrent lock&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Occurrence&lt;/td&gt;
--       &lt;td&gt;The first time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Occurrence&lt;/td&gt;
--       &lt;td&gt;The last time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Locks Already Held&lt;/td&gt;
--       &lt;td&gt;The number of locks already held at this point&lt;/td&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-and-in-what-threads-does-this-lock-edge-occur.png&quot; alt=&quot;Where and in what threads does this lock edge occur?&quot; /&gt;
-- 
-- META-END
SELECT
   LO.PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;, 
   LO.CLASSNAME &quot;Class&quot;, 
   MAX(LO.CLASSCODE) &quot;Class__(icon)&quot;, 
   S.LOCATION &quot;Location&quot;,
   MAX(S.LOCATIONCODE) &quot;Location__(icon)&quot;,
   S.ATLINE &quot;Line&quot;, 
   COALESCELOCKTRACETHREADS(L.LOCKTRACE) &quot;Trace (Occurrences By Thread)__(&apos;thread.gif&apos;)|&quot;,
   OBJID(L.LOCK) &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   LKCO.CLASSNAME &quot;Lock Class&quot;,
   MAX(LKCO.CLASSCODE) &quot;Lock Class__(icon)&quot;,
   CASE WHEN L.LOCKISTHIS = &apos;Y&apos; THEN &apos;Lock on this&apos;
        WHEN L.LOCKISCLASS = &apos;Y&apos; THEN &apos;Lock on class&apos;
        WHEN L.TYPE = &apos;I&apos; THEN &apos;Intrinsic lock&apos;
        ELSE &apos;java.util.concurrent lock&apos;
   END &quot;As&quot;,
   MIN(L.TS)              &quot;First Occurrence&quot;,
   MAX(L.TS)              &quot;Last Occurence&quot;,
   MAX(LAH.LOCKSHELD)      &quot;Locks Already Held__(r)&quot;,
   MAX(TR.ID)  &quot;LATRACE__(hide)&quot;,
   L.LOCK      &quot;Lock__(hide)&quot;,
   L.LOCKTRACE &quot;LOCKTRACE__(hide)&quot;
FROM 
   LOCKSHELD LH,
   LOCK L,
   TRACE TR,
   SITE S,
   OBJECT LO,
   OBJECT THO,
   OBJECT LK,
   OBJECT LKCO,
   (SELECT
         LOCKEVENT,COUNT(*) &quot;LOCKSHELD&quot; 
      FROM 
         LOCKSHELD 
      GROUP BY LOCKEVENT) LAH
WHERE
   LH.LOCKHELD = ?LockHeld? AND
   LH.LOCKACQUIRED = ?LockAcquired? AND
   L.ID = LH.LOCKEVENT AND
   TR.ID = L.TRACE AND
   S.ID = TR.SITE AND
   LO.ID = S.INCLASS AND
   THO.ID = L.INTHREAD AND
   LK.ID = L.LOCK AND
   LKCO.ID = LK.TYPE AND 
   LAH.LOCKEVENT = L.ID
GROUP BY L.LOCKTRACE, LO.PACKAGENAME, LO.CLASSNAME, S.LOCATION, S.ATLINE, L.LOCK, LKCO.CLASSNAME, L.TYPE, L.LOCKISTHIS, L.LOCKISCLASS
ORDER BY LO.PACKAGENAME, LO.CLASSNAME, S.LOCATION, S.ATLINE, COALESCELOCKTRACETHREADS(L.LOCKTRACE)</query>
  <query id="8f6cfa4a-8821-4166-adb0-94a17a7b8f1b" description="Where and in what threads is a lock acquired here?" revision="15" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where and in what threads is a lock acquired here?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all of the places in the program where a lock is acquired at this
--   particular line of code.  Each entry represents a different lock traces
--   leading up to lock acquisition at this line of code.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Method&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt; &amp;#8594; &lt;em&gt;Threads&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock Class&lt;/td&gt;
--       &lt;td&gt;The lock class&lt;/td&gt;
--     &lt;tr&gt;
--       &lt;td&gt;As&lt;/td&gt;
--       &lt;td&gt;Whether the lock was acquired as an intrinsic or java.util.concurrent lock&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Occurrence&lt;/td&gt;
--       &lt;td&gt;The first time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Occurrence&lt;/td&gt;
--       &lt;td&gt;The last time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Locks Already Held&lt;/td&gt;
--       &lt;td&gt;The number of locks already held at this point&lt;/td&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-and-in-what-threads-is-a-lock-acquired-here.png&quot; alt=&quot;Where and in what threads is a lock acquired here?&quot; /&gt;
-- META-END
SELECT &apos;?Package?&apos;         &quot;Package__(&apos;@PK&apos;)&quot;,
       &apos;?Class?&apos;           &quot;Class&quot;,
       &apos;?Class (Image)?&apos;   &quot;Class__(icon)&quot;,
       &apos;?Method?&apos;          &quot;Method&quot;,
       &apos;?Method (Image)?&apos;  &quot;Method__(icon)&quot;,
       ?Line?              &quot;Line__(r)&quot;,
       COALESCELOCKTRACETHREADS(L.LOCKTRACE) &quot;Threads__(&apos;thread.gif&apos;)|&quot;,
       OBJID(L.LOCK)       &quot;Lock__(&apos;lock.gif&apos;)&quot;,
       LKCO.CLASSNAME      &quot;Lock Class&quot;,
       MAX(LKCO.CLASSCODE) &quot;Lock Class__(icon)&quot;,
       CASE WHEN MAX(L.LOCKISTHIS) = &apos;Y&apos; THEN &apos;Lock on this&apos;
            WHEN MAX(L.LOCKISCLASS) = &apos;Y&apos; THEN &apos;Lock on class&apos;
            WHEN MAX(L.TYPE) = &apos;I&apos; THEN &apos;Intrinsic lock&apos;
            ELSE &apos;java.util.concurrent lock&apos;
       END &quot;As&quot;,
       MIN(L.TS)           &quot;First Occurrence&quot;,
       MAX(L.TS)           &quot;Last Occurrence&quot;,
       MAX(LH.LOCKSHELD)   &quot;Locks Already Held__(r)&quot;,
       TR.ID               &quot;LATRACE__(hide)&quot;,
       L.LOCKTRACE         &quot;LOCKTRACE__(hide)&quot;
FROM OBJECT O,
     SITE S,
     TRACE TR,
     LOCK L,
     (SELECT
         LOCKEVENT,COUNT(*) &quot;LOCKSHELD&quot; 
      FROM 
         LOCKSHELD 
      GROUP BY LOCKEVENT) LH,
      OBJECT LK,
      OBJECT LKCO
WHERE O.CLASSNAME = &apos;?Class?&apos; AND
      O.PACKAGENAME = &apos;?Package?&apos; AND
      S.INCLASS = O.ID AND
      S.ATLINE = ?Line? AND
      TR.SITE = S.ID AND
      L.TRACE = TR.ID AND
      LH.LOCKEVENT = L.ID AND 
      LK.ID = L.LOCK AND
      LKCO.ID = LK.TYPE
GROUP BY L.LOCKTRACE,TR.ID,L.LOCK,LKCO.CLASSNAME
ORDER BY OBJID(L.LOCK),MIN(L.TS)</query>
  <query id="785d2a25-b793-4b2f-9d5e-8423bd0c57b9" description="Where are fields accessed while this lock is held in this thread?" revision="5" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where are fields accessed while this lock is held in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all of the places in the program where a field is accessed while this
--   lock is held in the given thread.  When more than one entry appears at the
--   same line of code they different stack traces leading up to this access.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line Of Code&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field accessed on this line.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of times a field access with this stack trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
-- 
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-are-fields-accessed-while-this-lock-is-held-in-this-thread.png&quot; alt=&quot;Where are fields accessed while this lock is held in this thread?&quot; /&gt;
-- META-END
SELECT
   MAX(CO.PACKAGENAME)    &quot;Package__(&apos;@PK&apos;)&quot;,
   MAX(CO.CLASSNAME)      &quot;Class&quot;,
   MAX(CO.CLASSCODE)      &quot;Class__(icon)&quot;,
   MAX(S.ATLINE)          &quot;Line__|&quot;,
   MAX(F.FIELDNAME)       &quot;Field&quot;,
   MAX(F.CODE)            &quot;Field__(icon)&quot;,
   OBJID(?Lock?)          &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   COALESCEALLTRACETHREADS(E.FIELD, E.TRACE) &quot;Accesses Via This Stack Trace&quot;,
   MIN(E.TS)            &quot;First Access&quot;,
   MAX(E.TS)            &quot;Last Access&quot;,
   CASE WHEN COUNT(DISTINCT E.LOCKTRACE) &gt; 1 THEN NULL ELSE MAX(E.LOCKTRACE) END &quot;LOCKTRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT E.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
   E.TRACE              &quot;ATRACE__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM
   (SELECT
      L.LOCKTRACE,
      A.TRACE,
      A.FIELD,
      A.TS
   FROM
      LOCK L,
      ACCESSLOCKSHELD ALH,
      ACCESS A
   WHERE
      A.ID = ALH.ACCESS AND
      A.INTHREAD = ?Thread? AND
      L.ID = ALH.LASTACQUISITION AND
      L.LOCK = ?Lock?
   UNION ALL
   SELECT
      L.LOCKTRACE,
      A.TRACE,
      A.FIELD,
      A.TS
   FROM
      LOCK L,
      ACCESSLOCKSHELD ALH,
      LOCKSHELD LH,
      ACCESS A
   WHERE
      A.ID = ALH.ACCESS AND
      A.INTHREAD = ?Thread? AND
      LH.LOCKEVENT=ALH.LASTACQUISITION AND
      LH.LOCKHELD = ?Lock? AND 
      L.ID = ALH.LASTACQUISITION
   ) E,
   TRACE T,
   SITE S,
   OBJECT CO,
   FIELD F
WHERE 
   T.ID = E.TRACE AND
   S.ID = T.SITE AND
   CO.ID = S.INCLASS AND
   F.ID = E.FIELD
GROUP BY E.TRACE,E.FIELD</query>
  <query id="732daa1f-dac0-4f40-b714-8190f903d323" description="Where are fields accessed while this lock is held?" revision="18" display="true">-- META-BEGIN(no-rows)
-- No accesses occur while this lock is held
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   Where are fields accessed while this lock is held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--   Lists all of the places in the program where a field is accessed while this
--   lock is held.  When more than one entry appears at the same line of code they
--   different stack traces leading up to this access.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line Of Code&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field accessed on this line.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of times a field access with this stack trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
-- 
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last time this trace was observed in the program.&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-are-fields-accessed-while-this-lock-is-held.png&quot; alt=&quot;Where are fields accessed while this lock is held&quot; /&gt;
-- META-END
SELECT
   MAX(CO.PACKAGENAME)    &quot;Package__(&apos;@PK&apos;)&quot;,
   MAX(CO.CLASSNAME)      &quot;Class&quot;,
   MAX(CO.CLASSCODE)      &quot;Class__(icon)&quot;,
   MAX(S.ATLINE)          &quot;Line__|&quot;,
   MAX(F.FIELDNAME)       &quot;Field&quot;,
   MAX(F.CODE)            &quot;Field__(icon)&quot;,
   OBJID(?Lock?) &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   COALESCEALLTRACETHREADS(E.FIELD, E.TRACE) &quot;Accesses Via This Stack Trace&quot;,
   MIN(E.TS)            &quot;First Access&quot;,
   MAX(E.TS)            &quot;Last Access&quot;,
   CASE WHEN COUNT(DISTINCT E.LOCKTRACE) &gt; 1 THEN NULL ELSE MAX(E.LOCKTRACE) END &quot;LOCKTRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT E.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
   E.TRACE           &quot;ATRACE__(hide)&quot;,
   ?Lock?            &quot;Lock__(hide)&quot;
FROM
   (SELECT
      L.LOCKTRACE,
      A.TRACE,
      A.FIELD,
      A.TS
   FROM
      LOCK L,
      ACCESSLOCKSHELD ALH,
      ACCESS A
   WHERE
      A.ID = ALH.ACCESS AND
      L.ID = ALH.LASTACQUISITION AND
      L.LOCK = ?Lock?
   UNION ALL
   SELECT
      L.LOCKTRACE,
      A.TRACE,
      A.FIELD,
      A.TS
   FROM
      LOCK L,
      ACCESSLOCKSHELD ALH,
      LOCKSHELD LH,
      ACCESS A
   WHERE
      A.ID = ALH.ACCESS AND
      LH.LOCKEVENT=ALH.LASTACQUISITION AND
      LH.LOCKHELD = ?Lock? AND 
      L.ID = ALH.LASTACQUISITION
   ) E,
   TRACE T,
   SITE S,
   OBJECT CO,
   FIELD F
WHERE 
   T.ID = E.TRACE AND
   S.ID = T.SITE AND
   CO.ID = S.INCLASS AND
   F.ID = E.FIELD
GROUP BY E.TRACE,E.FIELD
ORDER BY MAX(CO.PACKAGENAME), MAX(CO.CLASSNAME), MAX(S.ATLINE), MIN(E.TS)</query>
  <query id="9d05ac24-20c2-436e-af6b-2bd0bc7dbcfb" description="Where does a thread hold a lock and acquire another?" revision="15" display="true" display-at-root="true">-- META-BEGIN(no-rows)
-- NO-ROWS-MSG=No locks were observed to be acquired while another was already held during this run of the program.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where does a thread hold a lock and acquire another?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
-- Displays all lines of code in the program where a lock is acquired when one or
-- more locks are already held.  This can be useful for gaining an understanding of
-- the lock usage in your program.
-- &lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   
--   
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Method&lt;/em&gt; &amp;#8594; &lt;em&gt;Line Of Code&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Most Locks Already Held&lt;/td&gt;
--       &lt;td&gt;The greatest number of locks already held when a lock is acquired at this line of code&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-does-a-thread-hold-a-lock-and-acquire-another.png&quot; alt=&quot;Where does a thread hold a lock and acqure another?&quot; /&gt;
-- META-END
SELECT PACKAGENAME &quot;Package__(&apos;@PK&apos;)&quot;,
       CLASSNAME &quot;Class&quot;,
       CLASSCODE &quot;Class__(icon)&quot;,
       LOCATION  &quot;Method&quot;,
       LOCATIONCODE &quot;Method__(icon)&quot;,
       ATLINE &quot;Line__|(r)&quot;,
       MAX (HELDCOUNT) &quot;Most Locks Already Held__(r)(max on 2)&quot;
FROM
 ( SELECT COUNT (LH.LOCKHELD) &quot;HELDCOUNT&quot;,
         LO.CLASSNAME,
         LO.CLASSCODE,
         LO.PACKAGENAME,
         S.LOCATION,
         S.LOCATIONCODE,
         S.ATLINE
   FROM LOCKSHELD LH,
        LOCK LE,
        TRACE TR,
        SITE S,
        OBJECT LO
   WHERE LH.LOCKEVENT = LE.ID AND
         TR.ID = LE.TRACE AND
         S.ID = TR.SITE AND
         LO.ID = S.INCLASS
   GROUP BY LH.LOCKEVENT,LO.CLASSNAME,LO.CLASSCODE,LO.PACKAGENAME,S.LOCATION,S.LOCATIONCODE,S.ATLINE,LE.TRACE) AS T
GROUP BY CLASSNAME,CLASSCODE,LOCATION,LOCATIONCODE,PACKAGENAME,ATLINE
ORDER BY PACKAGENAME,CLASSNAME,LOCATION,ATLINE

</query>
  <query id="16872df3-2b60-4827-8f71-95b71e65c349" description="Where is this field accessed by this thread?" revision="12" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this field accessed by this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;p&gt;Lists all of the places in the program that access this field in the given
-- thread.  When more than one entry appears at the same line of code they
-- represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Instance&lt;/td&gt;
--       &lt;td&gt;The field&apos;s object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of field accesses occurring at this stack trice, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;In Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-field-accessed-by-this-thread.png&quot; alt=&quot;Where is this field accessed by this thread?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Instance?&apos;         &quot;Instance&quot;,
    &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    COALESCETRACETHREADS(?FieldId?, ?Receiver?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    OBJID(?Thread?)      &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;
FROM
    ACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId? AND
      A.RECEIVER = ?Receiver? AND
      A.INTHREAD = ?Thread?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MIN(A.TS)</query>
  <query id="39872cb4-369c-4dd8-90fd-1847a3f05dc9" description="Where is this field accessed while this lock is held?" revision="15" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this field accessed while this lock is held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field while the given
-- lock is held.  When more than one entry appears at the same line of code
-- they represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Instance&lt;/td&gt;
--       &lt;td&gt;The field&apos;s object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of field accesses occurring at this stack trice, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-field-accessed-while-this-lock-is-held.png&quot; alt=&quot;Where is this field accessed while this lock is held?&quot; /&gt;
-- 
-- META-END
SELECT
    INFO.PACKAGENAME    &quot;Package__(&apos;@PK&apos;)&quot;,
    INFO.CLASSNAME      &quot;Class&quot;,
    INFO.CLASSCODE      &quot;Class__(icon)&quot;,
    INFO.ATLINE         &quot;Line__|&quot;,
   &apos;?Instance?&apos;         &quot;Instance&quot;,
   &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   COALESCETRACETHREADS(?FieldId?, ?Receiver?, INFO.TRACE)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
   COUNTS.AMIN          &quot;First Access&quot;,
   COUNTS.AMAX          &quot;Last Access&quot;,   
   INFO.TRACE           &quot;ATRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT INFO.LOCKTRACE) &gt; 1 THEN NULL ELSE MAX(INFO.LOCKTRACE) END &quot;LOCKTRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT INFO.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE,
       A.TRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.FIELD = ?FieldId? AND
       A.RECEIVER = ?Receiver? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       L.LOCK = ?Lock? AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE,
       A.TRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCK LE,
       LOCKSHELD L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.FIELD = ?FieldId? AND
       A.RECEIVER = ?Receiver? AND
       ALH.ACCESS = A.ID AND
       L.LOCKEVENT = ALH.LASTACQUISITION AND
       L.LOCKHELD = ?Lock? AND
       LE.ID = ALH.LASTACQUISITION AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS) INFO,
   (SELECT
      A.TRACE,
      MIN(A.TS)   &quot;AMIN&quot;,
      MAX(A.TS)   &quot;AMAX&quot;,
      COUNT(A.TS) &quot;COUNT&quot;
   FROM
      ACCESS A
   GROUP BY A.TRACE) COUNTS
WHERE
   COUNTS.TRACE = INFO.TRACE
GROUP BY INFO.PACKAGENAME,
         INFO.CLASSNAME,
         INFO.CLASSCODE,
         INFO.ATLINE,
         COUNTS.COUNT,
         COUNTS.AMIN,
         COUNTS.AMAX,
         INFO.TRACE
ORDER BY INFO.PACKAGENAME,INFO.CLASSNAME,INFO.ATLINE,COUNTS.AMIN</query>
  <query id="d84c1559-9336-4255-a15d-51413859a005" description="Where is this field accessed while this lock is not held?" revision="14" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this field accessed while this lock is not held?
-- &lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;p&gt;Lists all of the places in the program that access this field while the given
-- lock is not held.  When more than one entry appears at the same line of code
-- they represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Instance&lt;/td&gt;
--       &lt;td&gt;The field&apos;s object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of field accesses occurring at this stack trice, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-field-accessed-while-this-lock-is-not-held.png&quot; alt=&quot;Where is this field accessed while this lock is not held?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__(&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    MAX(CO.CLASSCODE)    &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Instance?&apos;         &quot;Instance&quot;,
    &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
    COALESCETRACETHREADS(?FieldId?, ?Receiver?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM ACCESS A
     INNER JOIN TRACE TR ON TR.ID = A.TRACE
     INNER JOIN SITE S ON S.ID = TR.SITE
     INNER JOIN OBJECT CO ON CO.ID = S.INCLASS
     LEFT OUTER JOIN ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID
     LEFT OUTER JOIN LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId? AND
      A.RECEIVER = ?Receiver? AND
        (L.LOCK IS NULL OR
        (L.LOCK != ?Lock? AND
         (NOT EXISTS (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION) OR
          (NOT ?Lock? IN (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION)))))
GROUP BY CO.PACKAGENAME,CO.CLASSNAME,S.ATLINE,TR.ID</query>
  <query id="106c3818-78f2-4983-812a-0e83ca3cde89" description="Where is this field accessed?" revision="18" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this field accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field.  When more                                                                                          
-- than one entry appears at the same line of code they represent different stack                                                                                        
-- traces leading up to this access.&lt;/p&gt; 
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Instance&lt;/td&gt;
--       &lt;td&gt;The field&apos;s object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The number of field accesses occurring at this stack trice, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;During construction&lt;/td&gt;
--       &lt;td&gt;Whether or not the object was under construction when the field was accessed here&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-field-accessed.png&quot; alt=&quot;Where is this field accessed?&quot; /&gt;
-- 
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Instance?&apos;         &quot;Instance&quot;,
    &apos;?Instance (Image)?&apos; &quot;Instance__(icon)&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    COALESCETRACETHREADS(?FieldId?, ?Receiver?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    CASE WHEN MAX(A.UNDERCONSTRUCTION) = &apos;Y&apos; THEN &apos;Yes&apos; ELSE &apos;No&apos; END &quot;During Construction__(c)&quot;,
    MIN (A.TS)     &quot;First Access&quot;,
    MAX (A.TS)     &quot;Last Access&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID          &quot;ATRACE__(hide)&quot;
FROM
    ACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId? AND
      A.RECEIVER = ?Receiver?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MIN(A.TS)</query>
  <query id="608b8114-de9d-496e-89dc-118298ac06ee" description="Where is this lock acquired in this thread?" revision="19" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this lock acquired in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that acquire this lock in this thread.
-- When more than one entry appears at the same line of code they represent
-- different lock traces leading up to this acquisition.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Method&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Trace (Occurrences By Thread)&lt;/td&gt;
--       &lt;td&gt;The number of times this lock was acquired with this trace, in each
--       thread it was acquired in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock Class&lt;/td&gt;
--       &lt;td&gt;The lock class&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;As&lt;/td&gt;
--       &lt;td&gt;Whether the lock was acquired as an intrinsic lock, or as a java.util.concurrent lock&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Occurrence&lt;/td&gt;
--       &lt;td&gt;The first observed acquisition of this lock at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Occurrence&lt;/td&gt;
--       &lt;td&gt;The last observed acquisition of this lock at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Locks Already Held&lt;/td&gt;
--       &lt;td&gt;The number of locks already held when the lock was acquired here&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-lock-acquired-in-this-thread.png&quot; alt=&quot;Where is this lock acquired in this thread?&quot; /&gt;
-- META-END
SELECT 
    CO.PACKAGENAME         &quot;Package__(&apos;@PK&apos;)&quot;,
    CO.CLASSNAME           &quot;Class&quot;,
    MAX(CO.CLASSCODE)      &quot;Class__(icon)&quot;,
    S.LOCATION             &quot;Method&quot;,
    MAX(S.LOCATIONCODE)    &quot;Method__(icon)&quot;,
    S.ATLINE               &quot;Line__|&quot;,
    COALESCELOCKTRACETHREADS(LE.LOCKTRACE)     &quot;Trace (Occurrences By Thread)__(&apos;thread.gif&apos;)&quot;,
    OBJID(LE.LOCK)         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
    MAX(LKCO.CLASSNAME)    &quot;Lock Class&quot;,
    MAX(LKCO.CLASSCODE)    &quot;Lock Class__(icon)&quot;,
    CASE WHEN MAX(LE.LOCKISTHIS) = &apos;Y&apos; THEN &apos;Lock on this&apos;
         WHEN MAX(LE.LOCKISCLASS) = &apos;Y&apos; THEN &apos;Lock on class&apos;
         WHEN MAX(LE.TYPE) = &apos;I&apos; THEN &apos;Intrinsic lock&apos;
         ELSE &apos;java.util.concurrent lock&apos;
    END &quot;As&quot;,
    MIN(LE.TS)              &quot;First Occurrence&quot;,
    MAX(LE.TS)              &quot;Last Occurrence&quot;,
    COALESCE(MAX(LH.LOCKSHELD),0) &quot;Locks Already Held__(r)&quot;,
    LE.LOCKTRACE            &quot;LOCKTRACE__(hide)&quot;,
    MAX(LE.TRACE)           &quot;LATRACE__(hide)&quot;
FROM 
   LOCK LE INNER JOIN
   TRACE TR ON TR.ID = LE.TRACE INNER JOIN
   SITE S ON S.ID = TR.SITE INNER JOIN
   OBJECT CO ON CO.ID = S.INCLASS INNER JOIN
   OBJECT LK ON LK.ID = LE.LOCK INNER JOIN
   OBJECT LKCO ON LKCO.ID = LK.TYPE LEFT OUTER JOIN
   (SELECT
      LOCKEVENT,COUNT(*) &quot;LOCKSHELD&quot; 
   FROM 
      LOCKSHELD 
   GROUP BY LOCKEVENT) LH ON LH.LOCKEVENT = LE.ID
WHERE
   LE.LOCK = ?Lock? AND
   LE.INTHREAD = ?Thread? AND
   LE.STATE = &apos;AFTER ACQUISITION&apos;
GROUP BY LE.LOCKTRACE,CO.PACKAGENAME,CO.CLASSNAME,S.LOCATION,S.ATLINE,LE.LOCK
ORDER BY CO.PACKAGENAME,CO.CLASSNAME,S.LOCATION,S.ATLINE,COALESCELOCKTRACETHREADS(LE.LOCKTRACE)
</query>
  <query id="720921b7-6a0d-46b1-b9e9-4c7dc8671028" description="Where is this lock acquired?" revision="16" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this lock acquired?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that acquire this lock.  When more
-- than one entry appears at the same line of code they represent different lock
-- traces leading up to this acquisition.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Method&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;7&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Trace (Occurrences By Thread)&lt;/td&gt;
--       &lt;td&gt;The number of times this lock was acquired with this trace, in each
--       thread it was acquired in&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock Class&lt;/td&gt;
--       &lt;td&gt;The lock class&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;As&lt;/td&gt;
--       &lt;td&gt;Whether the lock was acquired as an intrinsic lock, or as a java.util.concurrent lock&lt;/td&gt;
--     &lt;/tr&gt;
--       &lt;td&gt;First Occurrence&lt;/td&gt;
--       &lt;td&gt;The first observed acquisition of this lock at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Occurrence&lt;/td&gt;
--       &lt;td&gt;The last observed acquisition of this lock at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Locks Already Held&lt;/td&gt;
--       &lt;td&gt;The number of locks already held when the lock was acquired here&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-lock-acquired.png&quot; alt=&quot;Where is this lock acquired?&quot; /&gt;
-- META-END
SELECT 
    CO.PACKAGENAME         &quot;Package__(&apos;@PK&apos;)&quot;,
    CO.CLASSNAME           &quot;Class&quot;,
    MAX(CO.CLASSCODE)      &quot;Class__(icon)&quot;,
    S.LOCATION             &quot;Method&quot;,
    MAX(S.LOCATIONCODE)    &quot;Method__(icon)&quot;,
    S.ATLINE               &quot;Line__|&quot;,
    COALESCELOCKTRACETHREADS(LE.LOCKTRACE)     &quot;Trace (Occurrences By Thread)__(&apos;thread.gif&apos;)&quot;,
    OBJID(LE.LOCK)         &quot;Lock__(&apos;lock.gif&apos;)&quot;,
    MAX(LKCO.CLASSNAME)    &quot;Lock Class&quot;,
    MAX(LKCO.CLASSCODE)    &quot;Lock Class__(icon)&quot;,
    CASE WHEN MAX(LE.LOCKISTHIS) = &apos;Y&apos; THEN &apos;Lock on this&apos;
         WHEN MAX(LE.LOCKISCLASS) = &apos;Y&apos; THEN &apos;Lock on class&apos;
         WHEN MAX(LE.TYPE) = &apos;I&apos; THEN &apos;Intrinsic lock&apos;
         ELSE &apos;java.util.concurrent lock&apos;
    END &quot;As&quot;,
    MIN(LE.TS)              &quot;First Occurrence&quot;,
    MAX(LE.TS)              &quot;Last Occurrence&quot;,
    COALESCE(MAX(LH.LOCKSHELD),0) &quot;Locks Already Held__(r)&quot;,
    LE.LOCKTRACE            &quot;LOCKTRACE__(hide)&quot;,
    MAX(LE.TRACE)           &quot;LATRACE__(hide)&quot;
FROM 
   LOCK LE INNER JOIN
   TRACE TR ON TR.ID = LE.TRACE INNER JOIN
   SITE S ON S.ID = TR.SITE INNER JOIN
   OBJECT CO ON CO.ID = S.INCLASS INNER JOIN
   OBJECT LK ON LK.ID = LE.LOCK INNER JOIN
   OBJECT LKCO ON LKCO.ID = LK.TYPE LEFT OUTER JOIN
   (SELECT
      LOCKEVENT,COUNT(*) &quot;LOCKSHELD&quot; 
   FROM 
      LOCKSHELD 
   GROUP BY LOCKEVENT) LH ON LH.LOCKEVENT = LE.ID
WHERE
   LE.LOCK = ?Lock? AND
   LE.STATE = &apos;AFTER ACQUISITION&apos;
GROUP BY LE.LOCKTRACE,CO.PACKAGENAME,CO.CLASSNAME,S.LOCATION,S.ATLINE,LE.LOCK
ORDER BY CO.PACKAGENAME,CO.CLASSNAME,S.LOCATION,S.ATLINE,COALESCELOCKTRACETHREADS(LE.LOCKTRACE)
</query>
  <query id="2d7e347f-2f6f-4935-b201-2edf1b06a12b" description="Where is this object indirectly accessed in this thread?" revision="7" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this object indirectly accessed in this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;p&gt;Lists all of the places in the program that access this object while in this
-- thread.  When more than one entry appears at the same line of code they
-- represent different stacnk traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Object&lt;/td&gt;
--       &lt;td&gt;The object name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The name of the method called on the object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;In Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-object-indirectly-accessed-in-this-thread.png&quot; alt=&quot;Where is this object indirectly accessed in this thread?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Object?&apos;           &quot;Object&quot;,
    &apos;?Object (Image)?&apos;   &quot;Object__(icon)&quot;,
    MAX(S.METHODCALL)    &quot;Location&quot;,
    MAX(S.METHODCODE)    &quot;Location__(icon)&quot;,
    COUNT (A.TS)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    OBJID(?Thread?)      &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;
FROM
    INDIRECTACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    INDIRECTACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.RECEIVER = ?Receiver? AND
      A.INTHREAD = ?Thread?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MAX(S.METHODCALL),
    MIN(A.TS)</query>
  <query id="a6014694-63cd-4d22-a3e1-4aa94401c327" description="Where is this object indirectly accessed while this lock is held?" revision="8" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this object indirectly accessed while this lock is held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this object when this lock
-- is held.  When more than one entry appears at the same line of code they
-- represent different stacnk traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Object&lt;/td&gt;
--       &lt;td&gt;The object name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The name of the method called on the object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-object-indirectly-accessed-while-this-lock-is-held.png&quot; alt=&quot;Where is this object indirectly accessed while this lock is held?&quot; /&gt;
-- META-END
SELECT
   INFO.PACKAGENAME    &quot;Package__(&apos;@PK&apos;)&quot;,
   INFO.CLASSNAME      &quot;Class&quot;,
   INFO.CLASSCODE      &quot;Class__(icon)&quot;,
   INFO.ATLINE         &quot;Line__|&quot;,
   &apos;?Object?&apos;          &quot;Object&quot;,
   &apos;?Object (Image)?&apos;  &quot;Object__(icon)&quot;,
   INFO.METHODCALL     &quot;Location&quot;,
   INFO.METHODCODE     &quot;Location__(icon)&quot;,
   OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   COUNTS.COUNT        &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
   COUNTS.AMIN         &quot;First Access&quot;,
   COUNTS.AMAX         &quot;Last Access&quot;,  
   CASE WHEN COUNT(INFO.LOCKTRACE) &gt; 1 THEN NULL ELSE MAX(INFO.LOCKTRACE) END &quot;LOCKTRACE__(hide)&quot;, 
   INFO.TRACE          &quot;ATRACE__(hide)&quot;,
   CASE WHEN COUNT(INFO.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
 FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       S.METHODCALL,
       S.METHODCODE,
       L.LOCKTRACE,
       A.TRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.RECEIVER = ?Receiver? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       L.LOCK = ?Lock? AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       S.METHODCALL,
       S.METHODCODE,
       LE.LOCKTRACE,
       A.TRACE
   FROM
       INDIRECTACCESS A, 
       INDIRECTACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.RECEIVER = ?Receiver? AND
       ALH.ACCESS = A.ID AND
       L.LOCKEVENT = ALH.LASTACQUISITION AND
       L.LOCKHELD = ?Lock? AND
       LE.ID = ALH.LASTACQUISITION AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS) INFO,
   (SELECT
      A.TRACE,
      MIN(A.TS)   &quot;AMIN&quot;,
      MAX(A.TS)   &quot;AMAX&quot;,
      COUNT(A.TS) &quot;COUNT&quot;
   FROM
      INDIRECTACCESS A
   GROUP BY A.TRACE) COUNTS
WHERE
   COUNTS.TRACE = INFO.TRACE
GROUP BY INFO.PACKAGENAME,
         INFO.CLASSNAME,
         INFO.CLASSCODE,
         INFO.ATLINE,
         COUNTS.COUNT,
         COUNTS.AMIN,
         COUNTS.AMAX,
         INFO.TRACE,
         INFO.METHODCALL,
         INFO.METHODCODE
ORDER BY INFO.PACKAGENAME,INFO.CLASSNAME,INFO.ATLINE,INFO.METHODCALL,COUNTS.AMIN

</query>
  <query id="4d726f71-5420-4455-8999-889bae6e8e30" description="Where is this object indirectly accessed while this lock is not held?" revision="5" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this object indirectly accessed while this lock is not held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this object when this lock
-- is not held.  When more than one entry appears at the same line of code they
-- represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;6&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Object&lt;/td&gt;
--       &lt;td&gt;The object name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Location&lt;/td&gt;
--       &lt;td&gt;The name of the method called on the object&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-object-indirectly-accessed-while-this-lock-is-not-held.png&quot; alt=&quot;Where is this object indirectly accessed while this lock is not held?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__(&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    MAX(CO.CLASSCODE)    &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Object?&apos;           &quot;Object&quot;,
    &apos;?Object (Image)?&apos;   &quot;Object__(icon)&quot;,
    MAX(S.METHODCALL)    &quot;Location&quot;,
    MAX(S.METHODCODE)    &quot;Location__(icon)&quot;,
    OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
    COUNT (A.TS)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM INDIRECTACCESS A
     INNER JOIN TRACE TR ON TR.ID = A.TRACE
     INNER JOIN SITE S ON S.ID = TR.SITE
     INNER JOIN OBJECT CO ON CO.ID = S.INCLASS
     LEFT OUTER JOIN INDIRECTACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID
     LEFT OUTER JOIN LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.RECEIVER = ?Receiver? AND
        (L.LOCK IS NULL OR
        (L.LOCK != ?Lock? AND
         (NOT EXISTS (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION) OR
          (NOT ?Lock? IN (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION)))))
GROUP BY CO.PACKAGENAME,CO.CLASSNAME,S.ATLINE,TR.ID
ORDER BY CO.PACKAGENAME,CO.CLASSNAME,S.ATLINE,MAX(S.METHODCALL),MIN(A.TS)</query>
  <query id="e020ee80-eede-49e0-8b3d-766453adc4f8" description="Where is this object indirectly accessed?" revision="6" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this object indirectly accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this object.
-- When more than one entry appears at the same line of code they represent
-- different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Object&lt;/td&gt;
--       &lt;td&gt;The object name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;In Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- 
-- &lt;img src=&quot;where-is-this-object-indirectly-accessed.png&quot; alt=&quot;Where is this object indirectly accessed?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Object?&apos;           &quot;Object&quot;,
    &apos;?Object (Image)?&apos;   &quot;Object__(icon)&quot;,
    MAX(S.METHODCALL)    &quot;Location&quot;,
    MAX(S.METHODCODE)    &quot;Location__(icon)&quot;,
    COUNT (A.TS)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;
FROM
    INDIRECTACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    INDIRECTACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.RECEIVER = ?Receiver?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MAX(S.METHODCALL),
    MIN(A.TS)</query>
  <query id="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807" description="Where is this static field accessed by this thread?" revision="13" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Where is this static field accessed by this thread?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field in the given
-- thread When more than one entry appears at the same line of code they represent
-- different stack traces leading up to this access.&lt;/p&gt;


-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594;  &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;In Thread&lt;/td&gt;
--       &lt;td&gt;The thread name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-static-field-accessed-by-this-thread.png&quot; alt=&quot;Where is this static field accessed by this thread?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    COALESCESTATICTRACETHREADS(?FieldId?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    OBJID(?Thread?)      &quot;In Thread__(&apos;thread.gif&apos;)&quot;,
    MIN (A.TS)     &quot;First Access&quot;,
    MAX (A.TS)     &quot;Last Access&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID          &quot;ATRACE__(hide)&quot;
FROM
    ACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId? AND
      A.INTHREAD = ?Thread?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MIN(A.TS)</query>
  <query id="ae568ab0-7c65-48cf-91a9-1ac97bd8221a" description="Where is this static field accessed while this lock is held?" revision="13" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   Where is this static field accessed while this lock is held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field while the given
-- lock is held.  When more than one entry appears at the same line of code they
-- represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-static-field-accessed-while-this-lock-is-held.png&quot; alt=&quot;Where is this static field accessed while this lock is held?&quot; /&gt;
-- META-END
SELECT
    INFO.PACKAGENAME    &quot;Package__(&apos;@PK&apos;)&quot;,
    INFO.CLASSNAME      &quot;Class&quot;,
    INFO.CLASSCODE      &quot;Class__(icon)&quot;,
    INFO.ATLINE         &quot;Line__|&quot;,
   &apos;?Field?&apos;            &quot;Field&quot;,
   &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
   OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
   COALESCESTATICTRACETHREADS(?FieldId?, INFO.TRACE)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
   COUNTS.AMIN          &quot;First Access&quot;,
   COUNTS.AMAX          &quot;Last Access&quot;,   
   INFO.TRACE           &quot;ATRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT INFO.LOCKTRACE) &gt; 1 THEN NULL ELSE MAX(INFO.LOCKTRACE) END &quot;LOCKTRACE__(hide)&quot;,
   CASE WHEN COUNT(DISTINCT INFO.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM
   (SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       L.LOCKTRACE,
       A.TRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCK L,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.FIELD = ?FieldId? AND
       ALH.ACCESS = A.ID AND
       L.ID = ALH.LASTACQUISITION AND
       L.LOCK = ?Lock? AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS
   UNION
   SELECT
       CO.PACKAGENAME,
       CO.CLASSNAME,
       CO.CLASSCODE,
       S.ATLINE,
       LE.LOCKTRACE,
       A.TRACE
   FROM
       ACCESS A, 
       ACCESSLOCKSHELD ALH,
       LOCKSHELD L,
       LOCK LE,
       TRACE TR,
       SITE S,
       OBJECT CO
   WHERE
       A.FIELD = ?FieldId? AND
       ALH.ACCESS = A.ID AND
       L.LOCKEVENT = ALH.LASTACQUISITION AND
       L.LOCKHELD = ?Lock? AND
       LE.ID = ALH.LASTACQUISITION AND
       TR.ID = A.TRACE AND
       S.ID = TR.SITE AND
       CO.ID = S.INCLASS) INFO,
   (SELECT
      A.TRACE,
      MIN(A.TS)   &quot;AMIN&quot;,
      MAX(A.TS)   &quot;AMAX&quot;,
      COUNT(A.TS) &quot;COUNT&quot;
   FROM
      ACCESS A
   GROUP BY A.TRACE) COUNTS
WHERE
   COUNTS.TRACE = INFO.TRACE
GROUP BY INFO.PACKAGENAME,
         INFO.CLASSNAME,
         INFO.CLASSCODE,
         INFO.ATLINE,
         COUNTS.COUNT,
         COUNTS.AMIN,
         COUNTS.AMAX,
         INFO.TRACE
ORDER BY INFO.PACKAGENAME,INFO.CLASSNAME,INFO.ATLINE,COUNTS.AMIN
</query>
  <query id="b8689ed4-28e4-4e81-a89f-e5c511ba54b5" description="Where is this static field accessed while this lock is not held?" revision="11" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   Where is this static field accessed while this lock is not held?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field while the given
-- lock is not held.  When more than one entry appears at the same line of code they
-- represent different stack traces leading up to this access.&lt;/p&gt;
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;5&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Lock&lt;/td&gt;
--       &lt;td&gt;The lock name&lt;/td&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-static-field-accessed-while-this-lock-is-not-held.png&quot; alt=&quot;Where is this static field accessed while this lock is not held?&quot; /&gt;
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__(&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    MAX(CO.CLASSCODE)    &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    OBJID(?Lock?)        &quot;Lock__(&apos;lock.gif&apos;)&quot;,
    COALESCESTATICTRACETHREADS(?FieldId?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)           &quot;First Access&quot;,
    MAX (A.TS)           &quot;Last Access&quot;,
    TR.ID                &quot;ATRACE__(hide)&quot;,
   ?Lock?               &quot;Lock__(hide)&quot;
FROM ACCESS A
     INNER JOIN TRACE TR ON TR.ID = A.TRACE
     INNER JOIN SITE S ON S.ID = TR.SITE
     INNER JOIN OBJECT CO ON CO.ID = S.INCLASS
     LEFT OUTER JOIN ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID
     LEFT OUTER JOIN LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId? AND
        (L.LOCK IS NULL OR
        (L.LOCK != ?Lock? AND
         (NOT EXISTS (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION) OR
          (NOT ?Lock? IN (SELECT LOCKHELD FROM LOCKSHELD WHERE LOCKEVENT = ALH.LASTACQUISITION)))))
GROUP BY CO.PACKAGENAME,CO.CLASSNAME,S.ATLINE,TR.ID</query>
  <query id="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a" description="Where is this static field accessed?" revision="17" display="true">-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
--   Where is this static field accessed?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;Lists all of the places in the program that access this field at some point
-- in time.  When more than one entry appears at the same line of code they
-- represent different stack traces leading up to this access.&lt;/p&gt;
-- 
-- &lt;table&gt;
--   &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--   &lt;tbody&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Tree-Table&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt;&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
--       &lt;td&gt;Field&lt;/td&gt;
--       &lt;td&gt;The field name&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Accesses Via This Stack Trace&lt;/td&gt;
--       &lt;td&gt;The total number of accesses via this stack trace, broken down by thread&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;First Access&lt;/td&gt;
--       &lt;td&gt;The first observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--     &lt;tr&gt;
--       &lt;td&gt;Last Access&lt;/td&gt;
--       &lt;td&gt;The last observed access of the field at this trace&lt;/td&gt;
--     &lt;/tr&gt;
--   &lt;/tbody&gt;
-- &lt;/table&gt;
-- 
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;where-is-this-static-field-accessed.png&quot; alt=&quot;Where is this static field accessed?&quot; /&gt;
-- 
-- META-END
SELECT
    CO.PACKAGENAME       &quot;Package__ (&apos;@PK&apos;)&quot;,
    CO.CLASSNAME         &quot;Class&quot;,
    CO.CLASSCODE         &quot;Class__(icon)&quot;,
    S.ATLINE             &quot;Line__|&quot;,
    &apos;?Field?&apos;            &quot;Field&quot;,
    &apos;?Field (Image)?&apos;    &quot;Field__(icon)&quot;,
    COALESCESTATICTRACETHREADS(?FieldId?, TR.ID)         &quot;Accesses Via This Stack Trace__(add-commas)(r)&quot;,
    MIN (A.TS)     &quot;First Access&quot;,
    MAX (A.TS)     &quot;Last Access&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) = 1 THEN MAX(L.LOCKTRACE) ELSE NULL END &quot;LOCKTRACE__(hide)&quot;,
    CASE WHEN COUNT(DISTINCT L.LOCKTRACE) &gt; 1 THEN 1 ELSE NULL END &quot;Multiple__(hide)&quot;,
    TR.ID          &quot;ATRACE__(hide)&quot;
FROM
    ACCESS A INNER JOIN
    TRACE TR ON TR.ID = A.TRACE INNER JOIN
    SITE S ON S.ID = TR.SITE INNER JOIN
    OBJECT CO ON CO.ID = S.INCLASS LEFT OUTER JOIN
    ACCESSLOCKSHELD ALH ON ALH.ACCESS = A.ID LEFT OUTER JOIN
    LOCK L ON L.ID = ALH.LASTACQUISITION
WHERE A.FIELD = ?FieldId?
GROUP BY
    CO.PACKAGENAME,
    CO.CLASSNAME,
    CO.CLASSCODE,
    S.ATLINE,
    TR.ID
ORDER BY 
    CO.PACKAGENAME,
    CO.CLASSNAME,
    S.ATLINE,
    MIN(A.TS)</query>
  <query id="c9453327-b892-4324-a6b8-2dceb32e1901" description="Which threads and what code contend for this lock?" revision="14" display="true">-- META-BEGIN(no-rows)
-- No threads were forced to wait for this lock.
-- META-END
-- META-BEGIN(doc)
-- &lt;p&gt;&lt;strong&gt;
-- 	Which threads and what code contend for this lock?
-- &lt;/strong&gt;&lt;/p&gt;
-- &lt;p&gt;
--     Shows all of the locations and threads that contend for this lock,
--     organized first by code location and then by thread.  Some entries
--     in this query may appear to be duplicates, but actually have
--     different stack traces.  For each entry, the amount of time that the
--     thread blocks and the number of times the lock is acquired is
--     listed..
-- &lt;/p&gt;
--   &lt;table&gt;
--     &lt;colgroup&gt;&lt;col width=&quot;12%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;24%&quot; align=&quot;right&quot; /&gt;&lt;col width=&quot;64%&quot; align=&quot;left&quot; /&gt;&lt;/colgroup&gt;
--       
--       
--       &lt;tbody&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Displayed as&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Tree-Table&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Tree Structure&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;&lt;em&gt;Package&lt;/em&gt; &amp;#8594; &lt;em&gt;Class&lt;/em&gt; &amp;#8594; &lt;em&gt;Line&lt;/em&gt; &amp;#8594; &lt;em&gt;Thread&lt;/em&gt;&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td rowspan=&quot;4&quot;&gt;&lt;strong&gt;Columns&lt;/strong&gt;&lt;/td&gt;
-- 	  &lt;td&gt;Block Time&lt;/td&gt;
-- 	  &lt;td&gt;The amount of time the thread spends blocking while
-- 	  acquiring this lock&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Times Acquired&lt;/td&gt;
-- 	  &lt;td&gt;The number of times the lock is acquired in this thread&lt;/td&gt;
-- 	&lt;/tr&gt;
-- 	&lt;tr&gt;
-- 	  &lt;td&gt;Average Block Time&lt;/td&gt;
-- 	  &lt;td&gt;The average amount of time this thread spends waiting
-- 	  for this lock&lt;/td&gt;
-- 	&lt;/tr&gt;
--       &lt;/tbody&gt;
--   &lt;/table&gt;
-- &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
-- &lt;img src=&quot;which-threads-and-what-code-contend-for-this-lock.png&quot; alt=&quot;Which threads and what code contend for this lock?&quot; /&gt;
-- META-END
select lo.PackageName &quot;Package__(&apos;@PK&apos;)&quot;, lo.ClassName &quot;Class&quot;, lo.ClassCode &quot;Class__(icon)&quot;, s.AtLine &quot;Line__]&quot;, tho.ThreadName &quot;Thread__|&quot;, 
  sum(ld.Duration)                   &quot;Block Time__(human-readable-duration)(r)&quot;,
  count(ld.lock)                     &quot;Times Acquired__(sum)(add-commas)(r)&quot;,
  sum(ld.Duration) / count (ld.lock) &quot;Average Block Time__(human-readable-duration)(r)&quot;,
  le.trace &quot;LATRACE__(hide)&quot;
from LOCKDURATION ld, LOCK le, TRACE tr, SITE s, OBJECT lo, OBJECT tho
where ld.Lock=?Lock?
  and ld.State = &apos;BLOCKING&apos;
  and le.Id=ld.StartEvent
  and tr.Id = le.Trace
  and s.Id = tr.Site
  and lo.Id = s.InClass
  and tho.Id = ld.InThread
group by lo.PackageName,lo.ClassName, lo.ClassCode, s.AtLine, tho.ThreadName, le.trace
order by lo.PackageName, lo.ClassName, s.AtLine, tho.ThreadName, sum(ld.Duration) desc
  </query>

  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="d84c1559-9336-4255-a15d-51413859a005" is-default="1"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="39872cb4-369c-4dd8-90fd-1847a3f05dc9"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="785d2a25-b793-4b2f-9d5e-8423bd0c57b9"/>
  <sub-query id="1562545d-004b-4865-9f55-65ed4e37bcbb" sub-query="608b8114-de9d-496e-89dc-118298ac06ee"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="d84c1559-9336-4255-a15d-51413859a005" is-default="1"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="39872cb4-369c-4dd8-90fd-1847a3f05dc9"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4" is-default="10"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="a6014694-63cd-4d22-a3e1-4aa94401c327"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="4d726f71-5420-4455-8999-889bae6e8e30"/>
  <sub-query id="42031a55-4f1c-42dc-80dc-0fa141a32382" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="b8689ed4-28e4-4e81-a89f-e5c511ba54b5" is-default="1"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="ae568ab0-7c65-48cf-91a9-1ac97bd8221a"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="785d2a25-b793-4b2f-9d5e-8423bd0c57b9"/>
  <sub-query id="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0" sub-query="608b8114-de9d-496e-89dc-118298ac06ee"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="b8689ed4-28e4-4e81-a89f-e5c511ba54b5" is-default="1"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="ae568ab0-7c65-48cf-91a9-1ac97bd8221a"/>
  <sub-query id="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="b4c691be-b394-45c0-8190-6a2e0d9e63d9" sub-query="ae2c5715-740e-4850-a404-38bdc8cde6b6"/>
  <sub-query id="b4c691be-b394-45c0-8190-6a2e0d9e63d9" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="8de7d969-6633-4a16-acad-786ab9fd2f5f" sub-query="ae2c5715-740e-4850-a404-38bdc8cde6b6"/>
  <sub-query id="8de7d969-6633-4a16-acad-786ab9fd2f5f" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="c7b845ab-3efc-4f26-a240-e31228c2f1b4" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="1865f98c-ce4a-4e00-a11c-97d81409e54a" sub-query="b4c691be-b394-45c0-8190-6a2e0d9e63d9"/>
  <sub-query id="eee60af8-2385-4e71-9dde-554361b9ef07" sub-query="b4c691be-b394-45c0-8190-6a2e0d9e63d9"/>
  <sub-query id="eebe8cc6-9268-4b26-8d6a-bf94c88084fb" sub-query="4fce8390-7307-45dc-b779-5701ee7f23a1"/>
  <sub-query id="24d17dda-b3a0-4044-ae41-6dc224af24e5" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="a187f1bf-273e-4495-90e1-0fcd1c85eccb" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="02475ce2-0b3a-47e9-9200-e4f6e864aa3b" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="00c978ca-dd0c-4b32-a651-293510b3bffa" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="cdc2d460-b17f-43bc-8cc6-4c26f1637fda" sub-query="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" is-default="10"/>
  <sub-query id="33868960-7df8-4bab-bb33-ffb230957940" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f"/>
  <sub-query id="33868960-7df8-4bab-bb33-ffb230957940" sub-query="708d1b8a-5274-4a25-b0b4-67f1a7a86690" is-default="10"/>
  <sub-query id="bd72a5e4-42aa-415d-aa72-28d351f629a4" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f" is-default="10"/>
  <sub-query id="bd72a5e4-42aa-415d-aa72-28d351f629a4" sub-query="71e04209-2ea7-4f4c-b1a0-557544a3f8fc"/>
  <sub-query id="213c73ad-b3f6-4aef-9a05-f0c31d8fdcde" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f" is-default="1"/>
  <sub-query id="213c73ad-b3f6-4aef-9a05-f0c31d8fdcde" sub-query="5224d411-6ed3-432f-8b91-a1c43df22911"/>
  <sub-query id="213c73ad-b3f6-4aef-9a05-f0c31d8fdcde" sub-query="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" is-default="2"/>
  <sub-query id="d4d2af9b-ce4d-4457-9e94-01972fcb58d3" sub-query="5224d411-6ed3-432f-8b91-a1c43df22911" is-default="2"/>
  <sub-query id="d4d2af9b-ce4d-4457-9e94-01972fcb58d3" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f" is-default="1"/>
  <sub-query id="d4d2af9b-ce4d-4457-9e94-01972fcb58d3" sub-query="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965"/>
  <sub-query id="eabad207-22a7-4bb0-a7e1-30946d02ea13" sub-query="daa91c44-420a-4860-bcdc-970842110ccb"/>
  <sub-query id="eabad207-22a7-4bb0-a7e1-30946d02ea13" sub-query="5af0591d-f8d5-490f-bfc2-ebf5237559bd" is-default="10"/>
  <sub-query id="1b191e96-598f-4d1f-9391-5d9feed0da69" sub-query="daa91c44-420a-4860-bcdc-970842110ccb" is-default="10"/>
  <sub-query id="1b191e96-598f-4d1f-9391-5d9feed0da69" sub-query="5af0591d-f8d5-490f-bfc2-ebf5237559bd"/>
  <sub-query id="71a6fb5b-e5e1-4d25-bdc8-67ab5df1f66e" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f" is-default="10"/>
  <sub-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" is-default="10"/>
  <sub-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6" sub-query="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807"/>
  <sub-query id="2f505921-50fb-405b-bc78-4a5fe9228957" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" is-default="10"/>
  <sub-query id="2f505921-50fb-405b-bc78-4a5fe9228957" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="2f505921-50fb-405b-bc78-4a5fe9228957" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="2f505921-50fb-405b-bc78-4a5fe9228957" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="c744b5b5-15f0-4f72-a344-7e52bcac5071" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" is-default="10"/>
  <sub-query id="c744b5b5-15f0-4f72-a344-7e52bcac5071" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="c744b5b5-15f0-4f72-a344-7e52bcac5071" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="c744b5b5-15f0-4f72-a344-7e52bcac5071" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a"/>
  <sub-query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae" is-default="10"/>
  <sub-query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a"/>
  <sub-query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae" is-default="10"/>
  <sub-query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" is-default="10"/>
  <sub-query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="7cbeb2e0-994d-481e-ab2e-8413b13a417b" sub-query="649dff6b-1e60-4c03-8118-d98d93a9f586"/>
  <sub-query id="ae0f22d4-2f02-47f0-8745-8fa60024eda4" sub-query="6d8d0985-0830-4f18-a655-fa7b43703d5f"/>
  <sub-query id="ae0f22d4-2f02-47f0-8745-8fa60024eda4" sub-query="2468b391-8f70-4f4f-97fb-c34b0c0b3101" is-default="1"/>
  <sub-query id="976506a9-cf85-4907-8d7f-2fd9b5a28d6d" sub-query="ce9de85b-d3af-4de5-b9aa-38fba9503876"/>
  <sub-query id="2d58b103-1e04-4161-b6da-c96a553e39d0" sub-query="eee60af8-2385-4e71-9dde-554361b9ef07" is-default="10"/>
  <sub-query id="dd2ea83c-1940-4985-ace7-a578471e3b54" sub-query="26461177-e0ff-4187-bdc4-31f1d256a951"/>
  <sub-query id="dd2ea83c-1940-4985-ace7-a578471e3b54" sub-query="078a8b6c-1fad-4843-94f9-fe005eb66b73"/>
  <sub-query id="649dff6b-1e60-4c03-8118-d98d93a9f586" sub-query="16872df3-2b60-4827-8f71-95b71e65c349" is-default="10"/>
  <sub-query id="649dff6b-1e60-4c03-8118-d98d93a9f586" sub-query="1562545d-004b-4865-9f55-65ed4e37bcbb"/>
  <sub-query id="649dff6b-1e60-4c03-8118-d98d93a9f586" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="649dff6b-1e60-4c03-8118-d98d93a9f586" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="649dff6b-1e60-4c03-8118-d98d93a9f586" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="39872cb4-369c-4dd8-90fd-1847a3f05dc9"/>
  <sub-query id="2468b391-8f70-4f4f-97fb-c34b0c0b3101" sub-query="d84c1559-9336-4255-a15d-51413859a005"/>
  <sub-query id="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799" is-default="10"/>
  <sub-query id="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="f7ed1ced-73a5-4790-bc7c-8ba5fdf114a6" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="708d1b8a-5274-4a25-b0b4-67f1a7a86690" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799" is-default="10"/>
  <sub-query id="708d1b8a-5274-4a25-b0b4-67f1a7a86690" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="708d1b8a-5274-4a25-b0b4-67f1a7a86690" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="708d1b8a-5274-4a25-b0b4-67f1a7a86690" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="33e0b1f6-f745-4fe3-8e77-f28ae3ccf965" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="5224d411-6ed3-432f-8b91-a1c43df22911" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="5224d411-6ed3-432f-8b91-a1c43df22911" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="5224d411-6ed3-432f-8b91-a1c43df22911" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" is-default="10"/>
  <sub-query id="5224d411-6ed3-432f-8b91-a1c43df22911" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="5af0591d-f8d5-490f-bfc2-ebf5237559bd" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="5af0591d-f8d5-490f-bfc2-ebf5237559bd" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" is-default="10"/>
  <sub-query id="5af0591d-f8d5-490f-bfc2-ebf5237559bd" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="5af0591d-f8d5-490f-bfc2-ebf5237559bd" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="daa91c44-420a-4860-bcdc-970842110ccb" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="daa91c44-420a-4860-bcdc-970842110ccb" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" is-default="10"/>
  <sub-query id="daa91c44-420a-4860-bcdc-970842110ccb" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="daa91c44-420a-4860-bcdc-970842110ccb" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="ce9de85b-d3af-4de5-b9aa-38fba9503876" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="ce9de85b-d3af-4de5-b9aa-38fba9503876" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a"/>
  <sub-query id="ce9de85b-d3af-4de5-b9aa-38fba9503876" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" is-default="10"/>
  <sub-query id="ce9de85b-d3af-4de5-b9aa-38fba9503876" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="6d8d0985-0830-4f18-a655-fa7b43703d5f" sub-query="598a178b-7153-4e1c-978e-1b78b1d95799"/>
  <sub-query id="6d8d0985-0830-4f18-a655-fa7b43703d5f" sub-query="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f"/>
  <sub-query id="6d8d0985-0830-4f18-a655-fa7b43703d5f" sub-query="1ab01445-f44f-4c5a-9a3e-46ab0ea96d7a" is-default="10"/>
  <sub-query id="6d8d0985-0830-4f18-a655-fa7b43703d5f" sub-query="106c3818-78f2-4983-812a-0e83ca3cde89"/>
  <sub-query id="a3dcb49f-7586-42af-808c-9906c4ae1d03" sub-query="1a6082af-29c0-41af-b5bc-995ec6183787"/>
  <sub-query id="a3dcb49f-7586-42af-808c-9906c4ae1d03" sub-query="42031a55-4f1c-42dc-80dc-0fa141a32382" is-default="10"/>
  <sub-query id="30f37c1b-4a34-4eff-8bca-b76566b216c3" sub-query="10477928-cf86-4416-9118-34eea8cd7e38"/>
  <sub-query id="d1176c97-e3b6-483b-a341-6914a6f64860" sub-query="a3dcb49f-7586-42af-808c-9906c4ae1d03" is-default="10"/>
  <sub-query id="f556dcef-0e6b-480b-bc1b-eb84b3012831" sub-query="eebe8cc6-9268-4b26-8d6a-bf94c88084fb"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="608b8114-de9d-496e-89dc-118298ac06ee" is-default="10"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="db55bed8-8c7a-4601-8735-577912d938ca" sub-query="785d2a25-b793-4b2f-9d5e-8423bd0c57b9"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="608b8114-de9d-496e-89dc-118298ac06ee"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="720921b7-6a0d-46b1-b9e9-4c7dc8671028"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e" sub-query="785d2a25-b793-4b2f-9d5e-8423bd0c57b9"/>
  <sub-query id="cb38a427-c259-4690-abe2-acea9661f737" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="cb38a427-c259-4690-abe2-acea9661f737" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="cb38a427-c259-4690-abe2-acea9661f737" sub-query="c9453327-b892-4324-a6b8-2dceb32e1901" is-default="10"/>
  <sub-query id="cb38a427-c259-4690-abe2-acea9661f737" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="cb38a427-c259-4690-abe2-acea9661f737" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="ae2c5715-740e-4850-a404-38bdc8cde6b6" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="ae2c5715-740e-4850-a404-38bdc8cde6b6" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="ae2c5715-740e-4850-a404-38bdc8cde6b6" sub-query="10477928-cf86-4416-9118-34eea8cd7e38" is-default="10"/>
  <sub-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" sub-query="c9453327-b892-4324-a6b8-2dceb32e1901"/>
  <sub-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="42031a55-4f1c-42dc-80dc-0fa141a32382"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="a6014694-63cd-4d22-a3e1-4aa94401c327"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="a9be3802-b99c-4944-ac07-f7c948af45fd"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="1a6082af-29c0-41af-b5bc-995ec6183787"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="e020ee80-eede-49e0-8b3d-766453adc4f8"/>
  <sub-query id="5ebba191-8523-4253-b639-872d6da4dc92" sub-query="4d726f71-5420-4455-8999-889bae6e8e30"/>
  <sub-query id="2d506676-eb1d-455b-9256-9ea8f05352d4" sub-query="1865f98c-ce4a-4e00-a11c-97d81409e54a"/>
  <sub-query id="2d506676-eb1d-455b-9256-9ea8f05352d4" sub-query="2d58b103-1e04-4161-b6da-c96a553e39d0" is-default="10"/>
  <sub-query id="3b8251fa-a315-4c36-a856-a53b278fdc91" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="3b8251fa-a315-4c36-a856-a53b278fdc91" sub-query="732daa1f-dac0-4f40-b714-8190f903d323"/>
  <sub-query id="3b8251fa-a315-4c36-a856-a53b278fdc91" sub-query="c9453327-b892-4324-a6b8-2dceb32e1901"/>
  <sub-query id="3b8251fa-a315-4c36-a856-a53b278fdc91" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="3b8251fa-a315-4c36-a856-a53b278fdc91" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="5fd98753-3fe5-47a2-ab6a-ed5070dd41b0"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="94c1bc73-eb39-45d3-882e-d53c3bdf8a06" sub-query="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807" is-default="10"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="6a39e6ca-29e9-4093-ba03-0e9bd9503a1a" is-default="10"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="2048e73c-e95b-4e4c-84ee-2309372a7eae"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="ce90be0d-9d7a-49a6-8334-c6f37112fa4b" is-default="-5"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="b8689ed4-28e4-4e81-a89f-e5c511ba54b5"/>
  <sub-query id="fd49f015-3585-4602-a5d1-4e67ef7b6a55" sub-query="ae568ab0-7c65-48cf-91a9-1ac97bd8221a"/>
  <sub-query id="8107df4c-42eb-407c-88c1-e16d805f3aaa" sub-query="db55bed8-8c7a-4601-8735-577912d938ca"/>
  <sub-query id="8107df4c-42eb-407c-88c1-e16d805f3aaa" sub-query="94c1bc73-eb39-45d3-882e-d53c3bdf8a06"/>
  <sub-query id="8107df4c-42eb-407c-88c1-e16d805f3aaa" sub-query="7cbeb2e0-994d-481e-ab2e-8413b13a417b"/>
  <sub-query id="4e026769-1b0b-42bd-8893-f3b92add093f" sub-query="94c1bc73-eb39-45d3-882e-d53c3bdf8a06"/>
  <sub-query id="4e026769-1b0b-42bd-8893-f3b92add093f" sub-query="db55bed8-8c7a-4601-8735-577912d938ca"/>
  <sub-query id="4e026769-1b0b-42bd-8893-f3b92add093f" sub-query="7cbeb2e0-994d-481e-ab2e-8413b13a417b"/>
  <sub-query id="a9be3802-b99c-4944-ac07-f7c948af45fd" sub-query="2d7e347f-2f6f-4935-b201-2edf1b06a12b"/>
  <sub-query id="598a178b-7153-4e1c-978e-1b78b1d95799" sub-query="16872df3-2b60-4827-8f71-95b71e65c349"/>
  <sub-query id="ce90be0d-9d7a-49a6-8334-c6f37112fa4b" sub-query="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807"/>
  <sub-query id="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" sub-query="b4c691be-b394-45c0-8190-6a2e0d9e63d9" is-default="10"/>
  <sub-query id="fdd4eb5b-7e43-4285-a8a5-71a7b09c182f" sub-query="dd2ea83c-1940-4985-ace7-a578471e3b54"/>
  <sub-query id="1a6082af-29c0-41af-b5bc-995ec6183787" sub-query="c7b845ab-3efc-4f26-a240-e31228c2f1b4"/>
  <sub-query id="1a6082af-29c0-41af-b5bc-995ec6183787" sub-query="dd2ea83c-1940-4985-ace7-a578471e3b54"/>
  <sub-query id="2048e73c-e95b-4e4c-84ee-2309372a7eae" sub-query="8de7d969-6633-4a16-acad-786ab9fd2f5f" is-default="10"/>
  <sub-query id="2048e73c-e95b-4e4c-84ee-2309372a7eae" sub-query="dd2ea83c-1940-4985-ace7-a578471e3b54"/>
  <sub-query id="4fce8390-7307-45dc-b779-5701ee7f23a1" sub-query="10477928-cf86-4416-9118-34eea8cd7e38"/>
  <sub-query id="4fce8390-7307-45dc-b779-5701ee7f23a1" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="8f6cfa4a-8821-4166-adb0-94a17a7b8f1b" sub-query="10477928-cf86-4416-9118-34eea8cd7e38"/>
  <sub-query id="8f6cfa4a-8821-4166-adb0-94a17a7b8f1b" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="785d2a25-b793-4b2f-9d5e-8423bd0c57b9" sub-query="02475ce2-0b3a-47e9-9200-e4f6e864aa3b"/>
  <sub-query id="785d2a25-b793-4b2f-9d5e-8423bd0c57b9" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="785d2a25-b793-4b2f-9d5e-8423bd0c57b9" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="1"/>
  <sub-query id="732daa1f-dac0-4f40-b714-8190f903d323" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="1"/>
  <sub-query id="732daa1f-dac0-4f40-b714-8190f903d323" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="732daa1f-dac0-4f40-b714-8190f903d323" sub-query="02475ce2-0b3a-47e9-9200-e4f6e864aa3b"/>
  <sub-query id="9d05ac24-20c2-436e-af6b-2bd0bc7dbcfb" sub-query="8f6cfa4a-8821-4166-adb0-94a17a7b8f1b" is-default="10"/>
  <sub-query id="16872df3-2b60-4827-8f71-95b71e65c349" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="16872df3-2b60-4827-8f71-95b71e65c349" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="16872df3-2b60-4827-8f71-95b71e65c349" sub-query="a187f1bf-273e-4495-90e1-0fcd1c85eccb"/>
  <sub-query id="39872cb4-369c-4dd8-90fd-1847a3f05dc9" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="39872cb4-369c-4dd8-90fd-1847a3f05dc9" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="39872cb4-369c-4dd8-90fd-1847a3f05dc9" sub-query="02475ce2-0b3a-47e9-9200-e4f6e864aa3b"/>
  <sub-query id="d84c1559-9336-4255-a15d-51413859a005" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="106c3818-78f2-4983-812a-0e83ca3cde89" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="106c3818-78f2-4983-812a-0e83ca3cde89" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="106c3818-78f2-4983-812a-0e83ca3cde89" sub-query="a187f1bf-273e-4495-90e1-0fcd1c85eccb"/>
  <sub-query id="608b8114-de9d-496e-89dc-118298ac06ee" sub-query="10477928-cf86-4416-9118-34eea8cd7e38"/>
  <sub-query id="608b8114-de9d-496e-89dc-118298ac06ee" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="720921b7-6a0d-46b1-b9e9-4c7dc8671028" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="720921b7-6a0d-46b1-b9e9-4c7dc8671028" sub-query="10477928-cf86-4416-9118-34eea8cd7e38"/>
  <sub-query id="2d7e347f-2f6f-4935-b201-2edf1b06a12b" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="2d7e347f-2f6f-4935-b201-2edf1b06a12b" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="2d7e347f-2f6f-4935-b201-2edf1b06a12b" sub-query="24d17dda-b3a0-4044-ae41-6dc224af24e5"/>
  <sub-query id="a6014694-63cd-4d22-a3e1-4aa94401c327" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="a6014694-63cd-4d22-a3e1-4aa94401c327" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="a6014694-63cd-4d22-a3e1-4aa94401c327" sub-query="00c978ca-dd0c-4b32-a651-293510b3bffa"/>
  <sub-query id="4d726f71-5420-4455-8999-889bae6e8e30" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="e020ee80-eede-49e0-8b3d-766453adc4f8" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="e020ee80-eede-49e0-8b3d-766453adc4f8" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="e020ee80-eede-49e0-8b3d-766453adc4f8" sub-query="24d17dda-b3a0-4044-ae41-6dc224af24e5"/>
  <sub-query id="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="d2bf6bbd-e2f2-47e1-8a7e-e651cff3e807" sub-query="a187f1bf-273e-4495-90e1-0fcd1c85eccb"/>
  <sub-query id="ae568ab0-7c65-48cf-91a9-1ac97bd8221a" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="ae568ab0-7c65-48cf-91a9-1ac97bd8221a" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="ae568ab0-7c65-48cf-91a9-1ac97bd8221a" sub-query="02475ce2-0b3a-47e9-9200-e4f6e864aa3b"/>
  <sub-query id="b8689ed4-28e4-4e81-a89f-e5c511ba54b5" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6"/>
  <sub-query id="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a" sub-query="83d613b3-283e-4100-9a82-e42adf107fe6" is-default="10"/>
  <sub-query id="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a" sub-query="30f37c1b-4a34-4eff-8bca-b76566b216c3"/>
  <sub-query id="4c9fcdb0-e7dc-46a0-87b6-c00b3caa8a8a" sub-query="a187f1bf-273e-4495-90e1-0fcd1c85eccb"/>
  <sub-query id="c9453327-b892-4324-a6b8-2dceb32e1901" sub-query="ae0f22d4-2f02-47f0-8745-8fa60024eda4"/>
  <sub-query id="c9453327-b892-4324-a6b8-2dceb32e1901" sub-query="fd49f015-3585-4602-a5d1-4e67ef7b6a55"/>
  <sub-query id="c9453327-b892-4324-a6b8-2dceb32e1901" sub-query="5ebba191-8523-4253-b639-872d6da4dc92"/>
  <sub-query id="c9453327-b892-4324-a6b8-2dceb32e1901" sub-query="10477928-cf86-4416-9118-34eea8cd7e38" is-default="10"/>

  <category id="c5b67aff-6b2a-4c5b-bbc3-84b3d3933958" description="API Use" has-data="API specific concurrency queries." no-data="No API specific concurrency information was observed in the program." sort-hint="-1" revision="1">
    <cat-query id="976506a9-cf85-4907-8d7f-2fd9b5a28d6d"/>
  </category>
  <category id="28103990-73b5-4287-add0-39785aa7e3bb" description="Deadlock" has-data="Queries that show lock use that may cause the program to deadlock." no-data="No locking that could potentially cause deadlock was observed in the program." revision="3">
    <cat-query id="9d05ac24-20c2-436e-af6b-2bd0bc7dbcfb"/>
    <cat-query id="f556dcef-0e6b-480b-bc1b-eb84b3012831"/>
  </category>
  <category id="84475b98-4c68-4165-b883-5bdf9479d3d6" description="Lock Use" has-data="Queries about lock use in the program." no-data="No lock use was observed in the program." revision="5">
    <cat-query id="ddb5a17c-f5ac-4c26-a251-34d8e3c7bc7f"/>
    <cat-query id="213c73ad-b3f6-4aef-9a05-f0c31d8fdcde"/>
    <cat-query id="d4d2af9b-ce4d-4457-9e94-01972fcb58d3"/>
    <cat-query id="3b8251fa-a315-4c36-a856-a53b278fdc91"/>
    <cat-query id="c744b5b5-15f0-4f72-a344-7e52bcac5071"/>
    <cat-query id="2f505921-50fb-405b-bc78-4a5fe9228957"/>
    <cat-query id="26696a5f-3fd7-4f18-badf-e3d7d01a6d4e"/>
  </category>
  <category id="3d204f5e-d61d-4637-be14-118223f2fb9e" description="Memory Model" has-data="Queries that show happens-before relationships between threads defined by the Java memory model." no-data="No happens-before relationships between threads were observed in the program." revision="2">
    <cat-query id="eabad207-22a7-4bb0-a7e1-30946d02ea13"/>
    <cat-query id="1b191e96-598f-4d1f-9391-5d9feed0da69"/>
    <cat-query id="5f166e1b-f0a6-4c07-846b-98f2aba80be2"/>
    <cat-query id="7cd8d92c-7aec-4238-b808-e628f83dcb4e"/>
  </category>
  <category id="64511c63-0ce8-44df-8324-95711bff56ce" description="Performance" has-data="Queries that highlight potential performance bottlenecks in the program." no-data="No potential performance bottlenecks were observed in the program." revision="2">
    <cat-query id="4e026769-1b0b-42bd-8893-f3b92add093f"/>
    <cat-query id="2d506676-eb1d-455b-9256-9ea8f05352d4"/>
    <cat-query id="cb38a427-c259-4690-abe2-acea9661f737"/>
  </category>
  <category id="8401fcf7-7d5c-4191-a997-0b82f1db8e66" description="Shared State" has-data="Queries that show state (fields, not local variables or parameters) shared between multiple threads." no-data="No state (fields, not local variables or parameters) was shared between multiple threads." revision="2">
    <cat-query id="094fc6db-5a5b-4495-aacd-54f5a5aa1691"/>
    <cat-query id="d1176c97-e3b6-483b-a341-6914a6f64860"/>
    <cat-query id="419c927e-a87c-4364-b4a9-2e8f50f728f6"/>
    <cat-query id="bd72a5e4-42aa-415d-aa72-28d351f629a4"/>
    <cat-query id="33868960-7df8-4bab-bb33-ffb230957940"/>
    <cat-query id="cdc2d460-b17f-43bc-8cc6-4c26f1637fda"/>
    <cat-query id="71a6fb5b-e5e1-4d25-bdc8-67ab5df1f66e"/>
  </category>
  <category id="b6d89f8b-7dfd-44a5-843c-d8a70f6aaaa9" description="Threads" has-data="Queries about threads in the program." no-data="No threads were observed in the program." revision="2">
    <cat-query id="8107df4c-42eb-407c-88c1-e16d805f3aaa"/>
  </category>
</ad-hoc>
